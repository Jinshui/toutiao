android.support.v4.app.ActivityCompatHoneycomb -> a:
    android.support.v4.app.ActivityCompatHoneycomb next$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb prev$fe619d5 -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    void warnDeprecation(java.lang.String,java.lang.String) -> a
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> a
    android.os.Bundle parseUrl(java.lang.String) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    boolean isChineseLocale(android.content.Context) -> a
    java.lang.String generateGUID() -> a
    java.lang.String getSign(android.content.Context,java.lang.String) -> a
    boolean a(java.io.File) -> a
    void b(android.content.Context,com.tencent.connect.auth.QQToken) -> a
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String,java.lang.String[]) -> a
    java.lang.String a(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap a(java.lang.String,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    boolean a(java.lang.String,int,int) -> a
    java.lang.String a(byte[]) -> a
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
    byte[] a(java.lang.String,int,java.lang.String) -> a
    java.lang.Object a(int,java.lang.String) -> a
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> a
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> a
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> a
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> b
    org.json.JSONObject request(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String) -> a
    void requestAsync(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IRequestListener) -> a
    com.tencent.utils.Util$Statistic openUrl2(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String a(org.apache.http.HttpResponse) -> a
    org.apache.http.client.HttpClient getHttpClient$1220a24e(android.content.Context,java.lang.String) -> b
    java.lang.String encodeUrl(android.os.Bundle) -> b
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    int a(android.content.Context) -> b
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> c
    int compareVersion(java.lang.String,java.lang.String) -> b
    boolean isAppSignatureValid(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String) -> d
    boolean isActivityExist(android.content.Context,android.content.Intent) -> b
    int compareQQVersion(android.content.Context,java.lang.String) -> e
    android.app.AlertDialog createDialog(android.content.Context,int,int,int,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> a
    void saveStringMap(android.content.Context,java.util.Map) -> a
    void saveString(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> c
    void removeKey(android.content.Context,java.lang.String) -> f
android.support.v4.app.BackStackRecord -> b:
    android.support.v4.app.FragmentManagerImpl mManager -> l
    android.support.v4.app.ActivityCompatHoneycomb mHead$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb mTail$fe619d5 -> m
    int mNumOp -> b
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    java.lang.String mName -> f
    boolean mCommitted -> n
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp$568ae146(android.support.v4.app.ActivityCompatHoneycomb) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> b
    void run() -> run
    void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackState -> c:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> d:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> e:
    android.support.v4.util.SimpleArrayMap sClassMap -> M
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mMenuVisible -> D
    boolean mCalled -> E
    int mNextAnim -> F
    android.view.ViewGroup mContainer -> G
    android.view.View mView -> H
    android.view.View mInnerView -> I
    boolean mDeferStart -> J
    boolean mUserVisibleHint -> K
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> L
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isDetached() -> e
    boolean isResumed() -> f
    void onHiddenChanged$1385ff() -> g
    void setMenuVisibility(boolean) -> a
    void setUserVisibleHint(boolean) -> b
    void startActivity(android.content.Intent) -> a
    void onActivityResult$6eb84b52() -> h
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> i
    void onInflate$423a76cd() -> j
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation$24236ca7() -> k
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void onViewCreated$65f1d89() -> l
    android.view.View getView() -> m
    void onActivityCreated(android.os.Bundle) -> c
    void onViewStateRestored(android.os.Bundle) -> d
    void onStart() -> n
    void onResume() -> o
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> p
    void onStop() -> q
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> r
    void onDestroy() -> s
    void initState() -> t
    void onDetach() -> u
    void onDestroyOptionsMenu() -> v
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> E
    void performCreate(android.os.Bundle) -> f
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> g
    void performStart() -> w
    void performResume() -> x
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> y
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> h
    void performPause() -> z
    void performStop() -> A
    void performReallyStop() -> B
    void performDestroyView() -> C
    void performDestroy() -> D
android.support.v4.app.Fragment$1 -> f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> g:
android.support.v4.app.Fragment$SavedState -> h:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> i:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> j:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> e
    boolean mCreated -> f
    boolean mResumed -> g
    boolean mStopped -> c
    boolean mReallyStopped -> h
    boolean mRetaining -> d
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> k:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> l:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> m:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> n:
    java.util.ArrayList fragments -> a
    android.support.v4.util.SimpleArrayMap loaders -> b
android.support.v4.app.FragmentContainer -> o:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> p:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> q:
android.support.v4.app.FragmentManagerImpl -> r:
    boolean DEBUG -> a
    boolean HONEYCOMB -> f
    java.util.ArrayList mPendingActions -> g
    java.lang.Runnable[] mTmpActions -> h
    boolean mExecutingActions -> i
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> j
    java.util.ArrayList mBackStack -> k
    java.util.ArrayList mCreatedMenus -> l
    java.util.ArrayList mBackStackIndices -> m
    java.util.ArrayList mAvailBackStackIndices -> n
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> e
    boolean mHavePendingDeferredStart -> u
    android.os.Bundle mStateBundle -> v
    android.util.SparseArray mStateArray -> w
    java.lang.Runnable mExecCommit -> x
    android.view.animation.Interpolator DECELERATE_QUINT -> y
    android.view.animation.Interpolator DECELERATE_CUBIC -> z
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> d
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> e
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> s:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> u:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> v:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> w:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> x:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> y:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> z:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> A:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> B:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> e
    int slide_in_from_bottom -> f
    int slide_in_from_top -> g
    int slide_out_to_bottom -> h
    int slide_out_to_top -> i
    int indicator_internal_padding -> j
    int indicator_right_padding -> k
    int default_ptr_flip -> l
    int default_ptr_rotate -> m
    int indicator_arrow -> n
    int indicator_bg_bottom -> o
    int indicator_bg_top -> p
    int fl_inner -> q
    int gridview -> r
    int pull_to_refresh_image -> s
    int pull_to_refresh_progress -> t
    int pull_to_refresh_sub_text -> u
    int pull_to_refresh_text -> v
    int scrollview -> w
    int webview -> x
    int pull_to_refresh_header_horizontal -> y
    int pull_to_refresh_header_vertical -> z
    int selected_view -> A
    int slidingmenumain -> B
    int com_sina_weibo_sdk_loginview_text_color -> C
    int com_sina_weibo_sdk_loginview_compound_drawable_padding -> D
    int com_sina_weibo_sdk_loginview_padding_bottom -> E
    int com_sina_weibo_sdk_loginview_padding_left -> F
    int com_sina_weibo_sdk_loginview_padding_right -> G
    int com_sina_weibo_sdk_loginview_padding_top -> H
    int com_sina_weibo_sdk_loginview_text_size -> I
    int com_sina_weibo_sdk_button_blue -> J
    int com_sina_weibo_sdk_login_button_with_account_text -> K
    int com_sina_weibo_sdk_login_button_with_frame_logo -> L
    int com_sina_weibo_sdk_login_button_with_original_logo -> M
    int ic_com_sina_weibo_sdk_logo -> N
    int com_sina_weibo_sdk_login_with_weibo_account -> O
    int com_sina_weibo_sdk_logout -> P
    android.content.Context a -> Q
    int contentLengthLimit -> R
    byte[] fileData -> S
    java.lang.String filePath -> T
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> a
    android.content.Context a() -> b
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> c
    void setContentLengthLimit(int) -> a
    boolean checkArgs() -> d
android.support.v4.app.FragmentTransaction -> C:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> D:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl -> E:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> f
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> g
    java.lang.String mWho -> b
    android.support.v4.app.FragmentActivity mActivity -> c
    boolean mStarted -> d
    boolean mRetaining -> e
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> F:
    int mId -> a
    android.os.Bundle mArgs -> j
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCallbacks$641e715d -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> k
    boolean mDeliveredData -> d
    java.lang.Object mData -> l
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mRetainingStarted -> g
    boolean mReportNextStart -> h
    boolean mDestroyed -> m
    boolean mListenerRegistered -> i
    void stop() -> a
    void destroy() -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> G:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> H:
android.support.v4.content.Loader -> I:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    java.lang.String toString() -> toString
android.support.v4.content.Loader$OnLoadCompleteListener -> J:
android.support.v4.os.ParcelableCompat$CompatCreator -> K:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> L:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> M:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> N:
    android.support.v4.util.MapCollections mCollections -> d
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> O:
    android.support.v4.util.ArrayMap this$0 -> d
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> P:
    int[] EMPTY_INTS -> a
    java.lang.Object[] EMPTY_OBJECTS -> b
    int idealIntArraySize(int) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.LogWriter -> Q:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> R:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> a
    android.support.v4.util.MapCollections$KeySet mKeySet -> b
    android.support.v4.util.MapCollections$ValuesCollection mValues -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> S:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> T:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> U:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> V:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> W:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> X:
    java.lang.Object[] mBaseCache -> d
    int mBaseCacheSize -> e
    java.lang.Object[] mTwiceBaseCache -> f
    int mTwiceBaseCacheSize -> g
    int[] mHashes -> a
    java.lang.Object[] mArray -> b
    int mSize -> c
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> d
    java.lang.Object valueAt(int) -> b
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> Y:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> Z:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> b
    java.lang.Object mBridge -> c
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> aa:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> ab:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> ac:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> ad:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> ae:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> af:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> ag:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> ah:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> ai:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> aj:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> ak:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> al:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> am:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> an:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> ao:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
android.support.v4.view.MotionEventCompat -> ap:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> aq:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> ar:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> as:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> at:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> g
    int mIndicatorHeight -> h
    int mMinPaddingBottom -> i
    int mMinTextSpacing -> j
    int mMinStripHeight -> k
    int mTabPadding -> l
    android.graphics.Paint mTabPaint -> m
    android.graphics.Rect mTempRect -> n
    int mTabAlpha -> o
    boolean mDrawFullUnderline -> p
    boolean mDrawFullUnderlineSet -> q
    int mFullUnderlineHeight -> r
    boolean mIgnoreTap -> s
    float mInitialMotionX -> t
    float mInitialMotionY -> u
    int mTouchSlop -> v
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> au:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> av:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> g
    float mLastKnownPositionOffset -> h
    int mScaledTextSpacing -> e
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> f
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> aw:
    int mScrollState -> a
    android.support.v4.view.PagerTitleStrip this$0 -> b
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> ax:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> ay:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> az:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> aA:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> aB:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> aC:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> aD:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> aE:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> aF:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> aG:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> aH:
    int getOverScrollMode(android.view.View) -> b
android.support.v4.view.ViewCompat$HCViewCompatImpl -> aI:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> aJ:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> aK:
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> aL:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> aM:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$ViewCompatImpl -> aN:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> a
    long getFrameTime() -> a
android.support.v4.view.ViewConfigurationCompat -> aO:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> aP:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> aQ:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> aR:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> aS:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> aT:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> aU:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> aV:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> aW:
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mCalledSuper -> R
    int mDecorChildCount -> S
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> U
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> V
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mPageTransformer$26346444 -> W
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> Z
    int mDrawingOrder -> aa
    java.util.ArrayList mDrawingOrderedChildren -> ab
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ac
    java.lang.Runnable mEndScrollRunnable -> ad
    int mScrollState -> ae
    void initViewPager() -> f
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> g
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer$382b7817(boolean,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setPageTransformer$382b7817
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> d
    void populate(int) -> b
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> b
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> c
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> k
    boolean pageRight() -> l
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> aX:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> aY:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> aZ:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> ba:
android.support.v4.view.ViewPager$ItemInfo -> bb:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> bc:
    android.support.v4.view.ViewPager this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> bd:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> be:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> bf:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> bg:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> bh:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> bi:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> bj:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> bk:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> d
    void setFocusable(boolean) -> a
    boolean isFocused() -> e
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> f
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> g
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> h
    void setSelected(boolean) -> e
    boolean isClickable() -> i
    void setClickable(boolean) -> f
    boolean isLongClickable() -> j
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> k
    void setEnabled(boolean) -> h
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> l
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> m
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> n
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> bl:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> bm:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> bn:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> bo:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> bp:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> bq:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> br:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> bs:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> bt:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> bu:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> bv:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> bw:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> bx:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> by:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> bz:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> bA:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> bB:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> bC:
android.support.v4.widget.BakedBezierInterpolator -> bD:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    boolean mDismissed -> a
    java.lang.Runnable mDelayedHide -> b
    java.lang.Runnable mDelayedShow -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> bE:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> bF:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$314e12f3 -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    java.lang.CharSequence mTitleLeft -> v
    java.lang.CharSequence mTitleRight -> w
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener$1b20c458(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setDrawerListener$1b20c458
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> c
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findDrawerWithGravity(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> g
    boolean isDrawerView(android.view.View) -> d
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> c
    void cancelChildViewTouch() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> b
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> f
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> bG:
    android.graphics.Rect mTmpRect -> a
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> bH:
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> bI:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> bJ:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> bK:
    int mAbsGravity -> a
    android.support.v4.widget.ViewDragHelper mDragger -> b
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> c
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void closeOtherDrawer() -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> c
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> bL:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> bM:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> bN:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> bO:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> bP:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> bQ:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    int getCurrX() -> a
    int getCurrY() -> b
    void abortAnimation() -> c
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> bR:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> bS:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> bT:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> bU:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> a
    int mCoveredFadeColor -> b
    android.graphics.drawable.Drawable mShadowDrawableLeft -> c
    android.graphics.drawable.Drawable mShadowDrawableRight -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mPanelSlideListener$c9bd230 -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> u
    void setParallaxDistance(int) -> setParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    void setPanelSlideListener$14b5545(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setPanelSlideListener$14b5545
    void dispatchOnPanelOpened(android.view.View) -> a
    void dispatchOnPanelClosed(android.view.View) -> b
    void updateObscuredViewsVisibility(android.view.View) -> c
    void setAllChildrenVisible() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> e
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> b
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> bV:
    android.graphics.Rect mTmpRect -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> bW:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> bX:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
    void onEdgeDragStarted(int,int) -> a
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$SavedState -> bY:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> bZ:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> ca:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> cb:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> cc:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> cd:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds(int,int,int,int) -> b
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> a
    android.support.v4.widget.SwipeProgressBar mProgressBar -> b
    android.view.View mTarget -> c
    int mOriginalOffsetTop -> d
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$615ae962 -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    int mMediumAnimationDuration -> j
    float mFromPercentage -> k
    float mCurrPercentage -> l
    int mProgressBarHeight -> m
    int mCurrentTargetOffsetTop -> n
    float mInitialMotionY -> o
    float mLastMotionY -> p
    boolean mIsBeingDragged -> q
    int mActivePointerId -> r
    boolean mReturningToStart -> s
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> u
    int[] LAYOUT_ATTRS -> v
    android.view.animation.Animation mAnimateToStartPosition -> w
    android.view.animation.Animation mShrinkTrigger -> x
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> y
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> z
    java.lang.Runnable mReturnToStartPosition -> A
    java.lang.Runnable mCancel -> B
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnRefreshListener$200abd6d(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnRefreshListener$200abd6d
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    void ensureTarget() -> a
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTargetOffsetTopAndBottom(int) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> a
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> f
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> j
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> k
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> l
android.support.v4.widget.SwipeRefreshLayout$1 -> ce:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> cf:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> cg:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> ch:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> ci:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> cj:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> ck:
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.ViewDragHelper -> cl:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> d
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    void releaseViewForPointerUp() -> g
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> b
android.support.v4.widget.ViewDragHelper$1 -> cm:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> cn:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> co:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> c
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
com.handmark.pulltorefresh.library.ILoadingLayout -> cp:
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.LoadingLayoutProxy -> cq:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase -> com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> j
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> k
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOnLastItemVisibleListener$4c5a67d6 -> l
    android.view.View mEmptyView -> m
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvTop -> n
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvBottom -> o
    boolean mShowIndicator -> p
    boolean mScrollEmptyView -> q
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> r
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener$35462a35(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnLastItemVisibleListener$35462a35
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    void setShowIndicator(boolean) -> setShowIndicator
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> n
    boolean getShowIndicatorInternal() -> o
    void removeIndicatorViews() -> p
    void updateIndicatorViewsVisibility() -> q
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> r
com.handmark.pulltorefresh.library.PullToRefreshBase -> com.handmark.pulltorefresh.library.PullToRefreshBase:
    int mTouchSlop -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    boolean mIsBeingDragged -> o
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mState -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mCurrentMode -> c
    android.view.View mRefreshableView -> d
    android.widget.FrameLayout mRefreshableViewWrapper -> e
    boolean mShowViewWhileRefreshing -> f
    boolean mScrollingWhileRefreshingEnabled -> p
    boolean mFilterTouchEvents -> q
    boolean mOverScrollEnabled -> r
    boolean mLayoutVisibilityChangesEnabled -> g
    android.view.animation.Interpolator mScrollAnimationInterpolator -> s
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> t
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLayout -> h
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLayout -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOnPullEventListener$4b6ae16a -> w
    com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> n
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> g
    android.view.View getRefreshableView() -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> i
    boolean isPullToRefreshOverScrollEnabled() -> j
    boolean isRefreshing() -> k
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> l
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setLoadingDrawable
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener$3c7bf85f(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnPullEventListener$3c7bf85f
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setPullLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setPullLabel
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setRefreshingLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setReleaseLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setReleaseLabel
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]) -> setState
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> o
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> a
    void smoothScrollTo(int,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void callRefreshListener() -> p
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> q
    int getMaximumPullScroll() -> r
    void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    android.view.animation.Interpolator access$0(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> s
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State() -> t
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> u
    void access$4(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$2 -> cr:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle -> cs:
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle ROTATE -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle FLIP -> b
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle() -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$Mode -> ct:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode DISABLED -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_END -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode BOTH -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> e
    int mIntValue -> f
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] ENUM$VALUES -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault() -> a
    boolean permitsPullToRefresh() -> b
    boolean showHeaderLoadingLayout() -> c
    boolean showFooterLoadingLayout() -> d
    int getIntValue() -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values() -> f
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener -> cu:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 -> cv:
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener -> cw:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation -> cx:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] ENUM$VALUES -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable -> cy:
    android.view.animation.Interpolator mInterpolator -> a
    int mScrollToY -> b
    int mScrollFromY -> c
    long mDuration -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> e
    boolean mContinueRunning -> f
    long mStartTime -> g
    int mCurrentY -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> i
    void run() -> run
    void stop() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$State -> cz:
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RESET -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State PULL_TO_REFRESH -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RELEASE_TO_REFRESH -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$State REFRESHING -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$State MANUAL_REFRESHING -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING -> f
    int mIntValue -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] ENUM$VALUES -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int) -> a
    int getIntValue() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values() -> b
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView -> com.handmark.pulltorefresh.library.PullToRefreshExpandableListView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListView -> cA:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListViewSDK9 -> cB:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshGridView -> com.handmark.pulltorefresh.library.PullToRefreshGridView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridView -> cC:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridViewSDK9 -> cD:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView -> com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView$InternalHorizontalScrollViewSDK9 -> cE:
    com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshListView -> com.handmark.pulltorefresh.library.PullToRefreshListView:
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLoadingView -> j
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLoadingView -> k
    android.widget.FrameLayout mLvFooterLoadingFrame -> l
    boolean mListViewExtrasEnabled -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> n
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    void onRefreshing(boolean) -> a
    void onReset() -> c
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> a
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> n
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView -> com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView:
    boolean mAddedLvFooter -> a
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> b
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 -> cF:
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshScrollView -> com.handmark.pulltorefresh.library.PullToRefreshScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshScrollView$CustomScrollView -> cG:
    android.view.GestureDetector mGestureDetector -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.handmark.pulltorefresh.library.PullToRefreshScrollView$CustomScrollView$YScrollDetector -> cH:
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.handmark.pulltorefresh.library.PullToRefreshScrollView$InternalScrollViewSDK9 -> cI:
    com.handmark.pulltorefresh.library.PullToRefreshScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshWebView -> com.handmark.pulltorefresh.library.PullToRefreshWebView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener -> j
    android.webkit.WebChromeClient defaultWebChromeClient -> k
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshWebView$2 -> cJ:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.handmark.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9 -> cK:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.R$styleable -> cL:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2 -> com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2:
    com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback -> j
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown -> k
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp -> l
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback -> cM:
com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor -> cN:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout -> com.handmark.pulltorefresh.library.internal.FlipLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> h
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> m
com.handmark.pulltorefresh.library.internal.IndicatorLayout -> com.handmark.pulltorefresh.library.internal.IndicatorLayout:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> f
com.handmark.pulltorefresh.library.internal.LoadingLayout -> com.handmark.pulltorefresh.library.internal.LoadingLayout:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> n
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize() -> f
    void hideAllViews() -> g
    void onPull(float) -> b
    void pullToRefresh() -> h
    void refreshing() -> i
    void releaseToRefresh() -> j
    void reset() -> k
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    void showInvisibleViews() -> l
    int getDefaultDrawableResId() -> e
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> n
com.handmark.pulltorefresh.library.internal.RotateLoadingLayout -> com.handmark.pulltorefresh.library.internal.RotateLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> e
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove:
    android.view.animation.Interpolator sInterpolator -> a
    android.view.View mContent -> b
    int mCurItem -> c
    android.widget.Scroller mScroller -> d
    boolean mScrollingCacheEnabled -> e
    boolean mScrolling -> f
    boolean mIsBeingDragged -> g
    boolean mIsUnableToDrag -> h
    int mTouchSlop -> i
    float mInitialMotionX -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    int mActivePointerId -> m
    android.view.VelocityTracker mVelocityTracker -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mFlingDistance -> q
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> r
    boolean mEnabled -> s
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> t
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> u
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mClosedListener$2617e245 -> v
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOpenedListener$2011c35e -> w
    java.util.List mIgnoredViews -> x
    int mTouchMode -> y
    boolean mQuickReturn -> z
    float mScrollX -> A
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> a
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener$176cd553(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenedListener$176cd553
    void setOnClosedListener$4ae9f390(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnClosedListener$4ae9f390
    int getDestScrollX(int) -> a
    boolean isMenuOpen() -> d
    int getBehindWidth() -> e
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> b
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> b
    void completeScroll() -> f
    void setTouchMode(int) -> setTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> a
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> b
    void scrollTo(int,int) -> scrollTo
    float getPercentOpen() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> c
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> c
    boolean pageRight() -> h
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> cO:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> cP:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> cQ:
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> cR:
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind:
    int mTouchMode -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mTransformer$22a29405 -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    float mFadeDegree -> k
    android.graphics.Paint mFadePaint -> l
    float mScrollScale -> m
    android.graphics.drawable.Drawable mShadowDrawable -> n
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> o
    int mShadowWidth -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer$213e88a0(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setCanvasTransformer$213e88a0
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getBehindWidth() -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> b
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> c
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    void setScrollScale(float) -> setScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> d
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.R$styleable -> cS:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOpenListener$7800629d -> d
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCloseListener$51d99f2f -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> a
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> b
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> c
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setMode(int) -> setMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> d
    void showMenu(boolean) -> a
    void showSecondaryMenu(boolean) -> b
    void showContent() -> e
    void showContent(boolean) -> c
    boolean isMenuShowing() -> f
    boolean isSecondaryMenuShowing() -> g
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindCanvasTransformer$213e88a0(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setBehindCanvasTransformer$213e88a0
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener$3052752e(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenListener$3052752e
    void setOnCloseListener$4ce1fc6c(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnCloseListener$4ce1fc6c
    void setOnOpenedListener$176cd553(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenedListener$176cd553
    void setOnClosedListener$4ae9f390(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnClosedListener$4ae9f390
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$0$4a653a8a(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$1$3874688a(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> b
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> cT:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2 -> cU:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> cV:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> cW:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> cX:
    android.app.Activity mActivity -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> f
    boolean mEnableSlide -> e
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> cY:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> a
    boolean val$open -> b
    boolean val$secondary -> c
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity -> cZ:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> d
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.loopj.android.http.AsyncHttpClient -> da:
    int maxConnections -> b
    int timeout -> c
    org.apache.http.impl.client.DefaultHttpClient httpClient -> d
    org.apache.http.protocol.HttpContext httpContext -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Map requestMap -> g
    java.util.Map clientHeaderMap -> a
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest$ff13561(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
    void silentCloseInputStream(java.io.InputStream) -> a
    void silentCloseOutputStream(java.io.OutputStream) -> a
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    void endEntityViaReflection(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpClient$1 -> db:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> dc:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> dd:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> de:
    java.io.InputStream wrappedStream -> a
    java.io.PushbackInputStream pushbackStream -> b
    java.util.zip.GZIPInputStream gzippedStream -> c
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> df:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> d
    int executionCount -> e
    boolean isCancelled -> f
    boolean cancelIsNotified -> g
    boolean isFinished -> h
    void run() -> run
    boolean isCancelled() -> a
    boolean isDone() -> b
com.loopj.android.http.AsyncHttpResponseHandler -> dg:
    java.lang.String responseCharset -> a
    android.os.Handler handler -> c
    boolean useSynchronousMode -> b
    boolean getUseSynchronousMode() -> a
    void setUseSynchronousMode(boolean) -> a
    java.lang.String getCharset() -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    void sendProgressMessage(int,int) -> a
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void sendRetryMessage(int) -> a
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    void postRunnable(java.lang.Runnable) -> a
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    byte[] getResponseData(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> dh:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64$Coder -> di:
    byte[] output -> a
    int op -> b
com.loopj.android.http.Base64$Decoder -> dj:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
com.loopj.android.http.FileAsyncHttpResponseHandler -> dk:
    java.io.File mFile -> c
com.loopj.android.http.JsonHttpResponseHandler -> dl:
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    java.lang.Object parseResponse(byte[]) -> a
com.loopj.android.http.JsonHttpResponseHandler$1 -> dm:
    byte[] val$responseBytes -> d
    int val$statusCode -> a
    org.apache.http.Header[] val$headers -> b
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> c
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> dn:
    java.lang.Object val$jsonResponse -> a
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> do:
    org.json.JSONException val$ex -> a
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> dp:
    byte[] val$responseBytes -> e
    int val$statusCode -> a
    org.apache.http.Header[] val$headers -> b
    java.lang.Throwable val$throwable -> c
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> d
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> dq:
    java.lang.Object val$jsonResponse -> a
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> dr:
    org.json.JSONException val$ex -> a
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> b
    void run() -> run
com.loopj.android.http.MySSLSocketFactory -> ds:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.security.KeyStore getKeystore() -> b
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> a
com.loopj.android.http.MySSLSocketFactory$1 -> dt:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> du:
    long current -> d
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> a
com.loopj.android.http.RequestHandle -> dv:
    java.lang.ref.WeakReference request -> a
com.loopj.android.http.RequestParams -> dw:
    java.util.concurrent.ConcurrentHashMap urlParams -> a
    java.util.concurrent.ConcurrentHashMap streamParams -> b
    java.util.concurrent.ConcurrentHashMap fileParams -> c
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> d
    java.lang.String contentEncoding -> e
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> a
    org.apache.http.HttpEntity createFormEntity() -> a
    java.util.List getParamsList() -> b
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> b
com.loopj.android.http.RequestParams$FileWrapper -> dx:
    java.io.File file -> a
    java.lang.String contentType -> b
com.loopj.android.http.RequestParams$StreamWrapper -> dy:
    java.io.InputStream inputStream -> a
    java.lang.String name -> b
    java.lang.String contentType -> c
com.loopj.android.http.ResponseHandlerInterface -> dz:
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void sendProgressMessage(int,int) -> a
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendRetryMessage(int) -> a
    void setUseSynchronousMode(boolean) -> a
    boolean getUseSynchronousMode() -> a
com.loopj.android.http.RetryHandler -> dA:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    int retrySleepTimeMS -> d
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.loopj.android.http.SimpleMultipartEntity -> dB:
    byte[] CR_LF -> a
    byte[] TRANSFER_ENCODING_BINARY -> b
    char[] MULTIPART_CHARS -> c
    java.lang.String boundary -> d
    byte[] boundaryLine -> e
    byte[] boundaryEnd -> f
    boolean isRepeatable -> g
    java.util.List fileParts -> h
    java.io.ByteArrayOutputStream out -> i
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> j
    int bytesWritten -> k
    int totalSize -> l
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> a
    void addPart(java.lang.String,java.io.File,java.lang.String) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> a
    java.lang.String normalizeContentType(java.lang.String) -> a
    byte[] createContentType(java.lang.String) -> b
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> a
    void updateProgress(int) -> a
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> a
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> a
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> a
    byte[] access$300() -> a
    byte[] access$400() -> b
com.loopj.android.http.SimpleMultipartEntity$FilePart -> dC:
    java.io.File file -> a
    byte[] header -> b
    com.loopj.android.http.SimpleMultipartEntity this$0 -> c
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> a
com.loopj.android.http.SyncHttpClient -> dD:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
com.loopj.android.http.TextHttpResponseHandler -> dE:
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    java.lang.String getResponseString(byte[],java.lang.String) -> a
com.sina.sso.RemoteSSO -> dF:
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.sso.RemoteSSO$Stub -> dG:
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> dH:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
    java.lang.String getLoginUserName() -> c
com.sina.weibo.sdk.api.BaseMediaObject -> dI:
    java.lang.String actionUrl -> a
    java.lang.String schema -> e
    java.lang.String identify -> b
    java.lang.String title -> c
    java.lang.String description -> d
    byte[] thumbData -> f
    void setThumbImage(android.graphics.Bitmap) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject -> dJ:
    java.lang.String cmd -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.CmdObject$1 -> dK:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> dL:
    byte[] imageData -> e
    java.lang.String imagePath -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.ImageObject$1 -> dM:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> dN:
    java.lang.String text -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.TextObject$1 -> dO:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> dP:
    java.lang.String h5Url -> e
    java.lang.String dataUrl -> f
    java.lang.String dataHdUrl -> g
    int duration -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.VoiceObject$1 -> dQ:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> dR:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> a
    java.lang.String toExtraMediaString() -> b
com.sina.weibo.sdk.api.WebpageObject$1 -> dS:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> dT:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> a
    android.os.Bundle toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> a
com.sina.weibo.sdk.api.WeiboMultiMessage -> dU:
    com.sina.weibo.sdk.api.TextObject textObject -> a
    com.sina.weibo.sdk.api.ImageObject imageObject -> b
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> c
    android.os.Bundle toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> a
com.sina.weibo.sdk.api.share.ApiUtils -> dV:
    android.net.Uri WEIBO_NAME_URI -> a
    boolean isWeiboAppSupportAPI(int) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByPackage(android.content.Context,java.lang.String) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfo(android.content.Context) -> a
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByAsset(android.content.Context,java.lang.String) -> c
com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo -> dW:
    java.lang.String packageName -> a
    int supportApi -> b
    java.lang.String toString() -> toString
com.sina.weibo.sdk.api.share.Base -> dX:
    java.lang.String transaction -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.BaseRequest -> dY:
    void toBundle(android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.BaseResponse -> dZ:
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> ea:
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> eb:
    android.content.Context mContext -> a
    java.lang.String mAppKey -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo mWeiboInfo -> c
    boolean mNeedDownloadWeibo -> d
    android.app.Dialog mDownloadConfirmDialog -> e
    boolean isWeiboAppSupportAPI() -> a
    int getWeiboAppSupportAPI() -> b
    boolean registerApp() -> c
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> a
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> a
    boolean checkEnvironment(boolean) -> a
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> ec:
    com.sina.weibo.sdk.api.WeiboMessage message -> b
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> ed:
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> ee:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> b
    void toBundle(android.os.Bundle) -> a
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.VersionCheckHandler -> ef:
    java.lang.String mPackageName -> a
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> eg:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> eh:
    android.support.v4.app.FragmentManager$OnBackStackChangedListener val$listener$1cff5cb3 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.auth.Oauth2AccessToken -> ei:
    java.lang.String mUid -> a
    java.lang.String mAccessToken -> b
    java.lang.String mRefreshToken -> d
    long mExpiresTime -> c
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> a
    boolean isSessionValid() -> a
    java.lang.String toString() -> toString
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.WeiboAuth -> ej:
    android.content.Context mContext -> b
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> a
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> a
com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo -> ek:
    java.lang.String mAppKey -> a
    java.lang.String mRedirectUrl -> b
    java.lang.String mScope -> c
    java.lang.String mPackageName -> d
    java.lang.String mKeyHash -> e
    android.os.Bundle mBundle -> f
com.sina.weibo.sdk.auth.WeiboAuthListener -> el:
    void onComplete(android.os.Bundle) -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
    void onCancel() -> a
com.sina.weibo.sdk.auth.WeiboDialog -> em:
    android.content.Context mContext -> a
    android.widget.RelativeLayout mRootContainer -> b
    android.widget.RelativeLayout mWebViewContainer -> c
    android.app.ProgressDialog mLoadingDlg -> d
    android.webkit.WebView mWebView -> e
    boolean mIsDetached -> f
    java.lang.String mAuthUrl -> g
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> h
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> i
    int theme -> j
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCreate(android.os.Bundle) -> onCreate
    com.sina.weibo.sdk.auth.WeiboAuthListener access$0(com.sina.weibo.sdk.auth.WeiboDialog) -> a
    com.sina.weibo.sdk.auth.WeiboAuth access$1(com.sina.weibo.sdk.auth.WeiboDialog) -> b
    void access$2(com.sina.weibo.sdk.auth.WeiboDialog,java.lang.String) -> a
    boolean access$3(com.sina.weibo.sdk.auth.WeiboDialog) -> c
    android.app.ProgressDialog access$4(com.sina.weibo.sdk.auth.WeiboDialog) -> d
    android.webkit.WebView access$5(com.sina.weibo.sdk.auth.WeiboDialog) -> e
com.sina.weibo.sdk.auth.WeiboDialog$1 -> en:
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient -> eo:
    boolean isCallBacked -> a
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.sina.weibo.sdk.auth.sso.SsoHandler -> ep:
    com.sina.weibo.sdk.auth.WeiboAuth mWeiboAuth -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> b
    android.app.Activity mAuthActivity -> c
    int mSSOAuthRequestCode -> e
    android.content.ServiceConnection mConnection -> d
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> a
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> eq:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.exception.WeiboAuthException -> er:
com.sina.weibo.sdk.exception.WeiboDialogException -> es:
com.sina.weibo.sdk.exception.WeiboException -> et:
com.sina.weibo.sdk.exception.WeiboHttpException -> eu:
com.sina.weibo.sdk.exception.WeiboShareException -> ev:
com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult -> ew:
    java.lang.Object result -> a
    com.sina.weibo.sdk.exception.WeiboException error -> b
com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner -> ex:
    java.lang.String mUrl -> a
    com.sina.weibo.sdk.net.WeiboParameters mParams -> b
    java.lang.String mHttpMethod -> c
    com.sina.weibo.sdk.net.RequestListener mListener -> d
    com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult doInBackground$1798769c() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sina.weibo.sdk.net.HttpManager -> ey:
    java.lang.String BOUNDARY -> a
    java.lang.String MP_BOUNDARY -> b
    java.lang.String END_MP_BOUNDARY -> c
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> d
    java.lang.String openUrl(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> a
    org.apache.http.HttpResponse requestHttpExecute(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> b
    org.apache.http.client.HttpClient getNewHttpClient() -> a
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> a
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> a
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> b
com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory -> ez:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.sina.weibo.sdk.net.NetStateManager -> eA:
    org.apache.http.HttpHost getAPN() -> a
com.sina.weibo.sdk.net.NetStateManager$NetState -> eB:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> a
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> b
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> c
com.sina.weibo.sdk.net.RequestListener -> eC:
    void onComplete(java.lang.String) -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.sina.weibo.sdk.net.WeiboParameters -> eD:
    java.util.LinkedHashMap mParams -> a
    void put(java.lang.String,java.lang.String) -> a
    java.lang.Object get(java.lang.String) -> a
    java.lang.String encodeUrl() -> a
    boolean hasBinaryData() -> b
com.sina.weibo.sdk.openapi.AbsOpenAPI -> eE:
    java.lang.String TAG -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> b
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> a
com.sina.weibo.sdk.openapi.LogoutAPI -> eF:
    void logout(com.sina.weibo.sdk.net.RequestListener) -> a
com.sina.weibo.sdk.openapi.UsersAPI -> eG:
    android.util.SparseArray sAPIList -> a
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> a
com.sina.weibo.sdk.openapi.models.User -> eH:
    java.lang.String name -> a
    java.lang.String avatar_large -> b
    com.sina.weibo.sdk.openapi.models.User parse(java.lang.String) -> a
com.sina.weibo.sdk.utils.LogUtil -> eI:
    boolean sIsLogEnable -> a
    void d(java.lang.String,java.lang.String) -> a
    void i(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String) -> c
com.sina.weibo.sdk.utils.MD5 -> eJ:
    char[] hexDigits -> a
    java.lang.String hexdigest(java.lang.String) -> a
    java.lang.String hexdigest(byte[]) -> a
com.sina.weibo.sdk.utils.ResourceManager -> eK:
    java.lang.String TAG -> a
    android.util.SparseIntArray sLayoutMap -> b
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> c
    android.util.SparseArray sDrawableMap -> d
    java.util.HashMap sLanguageMap -> e
    java.lang.String getString$345a0d0(int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,int) -> b
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> a
    boolean isFileExisted(android.content.Context,java.lang.String) -> b
com.sina.weibo.sdk.widget.LoginButton -> com.sina.weibo.sdk.widget.LoginButton:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> c
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> d
    android.view.View$OnClickListener mExternalOnClickListener -> e
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setStyle(int) -> setStyle
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.widget.LoginoutButton -> com.sina.weibo.sdk.widget.LoginoutButton:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> c
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> d
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> e
    com.sina.weibo.sdk.net.RequestListener mLogoutListener -> f
    android.view.View$OnClickListener mExternalOnClickListener -> g
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setLogoutInfo(com.sina.weibo.sdk.auth.Oauth2AccessToken,com.sina.weibo.sdk.net.RequestListener) -> setLogoutInfo
    void setLogoutListener(com.sina.weibo.sdk.net.RequestListener) -> setLogoutListener
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onClick(android.view.View) -> onClick
    void access$0(com.sina.weibo.sdk.widget.LoginoutButton,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$1(com.sina.weibo.sdk.widget.LoginoutButton) -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener access$2(com.sina.weibo.sdk.widget.LoginoutButton) -> b
    com.sina.weibo.sdk.net.RequestListener access$3(com.sina.weibo.sdk.widget.LoginoutButton) -> c
com.sina.weibo.sdk.widget.LoginoutButton$1 -> eL:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onCancel() -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.sina.weibo.sdk.widget.LoginoutButton$2 -> eM:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> a
    void onComplete(java.lang.String) -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.tencent.b.a.a -> eN:
    com.tencent.b.a.b a -> c
    java.io.FileWriter b -> d
    java.io.File c -> e
    char[] d -> f
    com.tencent.b.a.d e -> g
    com.tencent.b.a.d f -> h
    com.tencent.b.a.d g -> i
    com.tencent.b.a.d h -> j
    boolean i -> k
    android.os.HandlerThread j -> l
    android.os.Handler k -> m
    void a() -> a
    void b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> c
    java.io.Writer h() -> d
    void i() -> e
    void j() -> f
com.tencent.b.a.b -> eO:
    java.text.SimpleDateFormat a -> a
    java.io.FileFilter b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    java.io.File h -> h
    int i -> i
    java.lang.String j -> j
    long k -> k
    java.io.FileFilter l -> l
    java.util.Comparator m -> m
    long a(java.io.File) -> a
    java.io.File a() -> a
    java.io.File e(java.io.File) -> c
    void b() -> b
    int f(java.io.File) -> d
    java.lang.String c() -> c
    int f() -> d
    long g() -> e
    int i() -> f
    java.lang.String j() -> g
    int d(java.io.File) -> b
com.tencent.b.a.b$1 -> eP:
    boolean accept(java.io.File) -> accept
com.tencent.b.a.b$2 -> eQ:
    com.tencent.b.a.b a -> a
    boolean accept(java.io.File) -> accept
com.tencent.b.a.b$3 -> eR:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.b.a.d -> eS:
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    void a(java.io.Writer,char[]) -> a
    void b() -> a
    java.util.Iterator iterator() -> iterator
com.tencent.b.a.e -> eT:
    com.tencent.b.a.e a -> a
com.tencent.b.a.f -> eU:
    int a -> a
    boolean b -> c
    com.tencent.b.a.e c -> b
com.tencent.b.a.g -> eV:
    com.tencent.b.a.g a -> c
    com.tencent.b.a.g a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void d(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b() -> b
com.tencent.b.a.h -> eW:
    com.tencent.b.a.b b -> a
    com.tencent.b.a.a d -> b
    boolean a -> c
    boolean e -> d
    boolean f -> e
    void b() -> b
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.tencent.b.b.a$a -> eX:
    java.lang.String a -> a
com.tencent.b.b.d -> eY:
    java.io.File a -> a
    long b -> b
    long c -> c
    java.lang.String toString() -> toString
com.tencent.connect.UserInfo -> eZ:
    void getUserInfo(com.tencent.tauth.IUiListener) -> a
com.tencent.connect.auth.AuthAgent -> fa:
    com.tencent.tauth.IUiListener a -> i
    java.lang.String b -> j
    android.app.Activity c -> k
    com.tencent.tauth.IUiListener d -> l
    android.os.Handler e -> m
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean,boolean) -> a
    void writeEncryToken(android.content.Context) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    com.tencent.connect.auth.QQToken a(com.tencent.connect.auth.AuthAgent) -> a
    com.tencent.connect.auth.QQToken b(com.tencent.connect.auth.AuthAgent) -> b
    com.tencent.connect.auth.QQToken c(com.tencent.connect.auth.AuthAgent) -> c
    com.tencent.connect.auth.QQToken d(com.tencent.connect.auth.AuthAgent) -> d
    void e(com.tencent.connect.auth.AuthAgent) -> e
    void a(com.tencent.connect.auth.AuthAgent,java.lang.String) -> a
    android.content.Context f(com.tencent.connect.auth.AuthAgent) -> f
    com.tencent.tauth.IUiListener g(com.tencent.connect.auth.AuthAgent) -> g
    android.os.Handler h(com.tencent.connect.auth.AuthAgent) -> h
    android.app.Activity i(com.tencent.connect.auth.AuthAgent) -> i
    android.os.Bundle j(com.tencent.connect.auth.AuthAgent) -> j
    com.tencent.connect.auth.QQToken k(com.tencent.connect.auth.AuthAgent) -> k
com.tencent.connect.auth.AuthAgent$1 -> fb:
    com.tencent.connect.auth.AuthAgent a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$2 -> fc:
    com.tencent.connect.auth.AuthAgent a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthAgent$FeedConfirmListener -> fd:
    com.tencent.tauth.IUiListener a -> c
    java.lang.String c -> d
    java.lang.String d -> e
    java.lang.String e -> a
    com.tencent.connect.auth.AuthAgent b -> b
    void onComplete(java.lang.Object) -> onComplete
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$1 -> fe:
    com.tencent.tauth.IUiListener a -> b
    java.lang.Object b -> c
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener c -> d
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$2 -> ff:
    com.tencent.tauth.IUiListener a -> b
    java.lang.Object b -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$3 -> fg:
    com.tencent.tauth.IUiListener a -> a
    java.lang.Object b -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$ButtonListener -> fh:
    android.app.Dialog d -> a
com.tencent.connect.auth.AuthAgent$RequestListener -> fi:
    com.tencent.connect.auth.AuthAgent a -> a
    void onUnknowException(java.lang.Exception) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onIOException(java.io.IOException) -> a
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onComplete(org.json.JSONObject) -> a
com.tencent.connect.auth.AuthAgent$TokenListener -> fj:
    com.tencent.tauth.IUiListener b -> a
    boolean c -> b
    android.content.Context d -> c
    com.tencent.connect.auth.AuthAgent a -> d
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthDialog -> fk:
    java.lang.ref.WeakReference a -> a
    java.lang.String b -> b
    com.tencent.connect.auth.AuthDialog$OnTimeListener c -> c
    com.tencent.tauth.IUiListener d -> d
    android.widget.FrameLayout f -> e
    android.widget.LinearLayout g -> f
    android.widget.FrameLayout h -> g
    android.widget.ProgressBar i -> h
    java.lang.String j -> i
    android.webkit.WebView k -> j
    java.lang.ref.WeakReference l -> k
    boolean m -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void callJs(java.lang.String,java.lang.String) -> a
    java.lang.ref.WeakReference a() -> a
    void a(android.content.Context,java.lang.String) -> a
    boolean a(com.tencent.connect.auth.AuthDialog,boolean) -> a
    boolean a(com.tencent.connect.auth.AuthDialog) -> a
    boolean b(com.tencent.connect.auth.AuthDialog) -> b
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.Object) -> a
    java.lang.String c(com.tencent.connect.auth.AuthDialog) -> c
    android.webkit.WebView d(com.tencent.connect.auth.AuthDialog) -> d
    com.tencent.connect.auth.AuthDialog$OnTimeListener e(com.tencent.connect.auth.AuthDialog) -> e
    java.lang.ref.WeakReference b() -> b
com.tencent.connect.auth.AuthDialog$JsListener -> fl:
com.tencent.connect.auth.AuthDialog$LoginWebViewClient -> fm:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.connect.auth.AuthDialog$OnTimeListener -> fn:
    java.lang.String d -> a
    java.lang.String a -> b
    java.lang.String b -> c
    com.tencent.tauth.IUiListener e -> d
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void a(com.tencent.connect.auth.AuthDialog$OnTimeListener,java.lang.String) -> a
com.tencent.connect.auth.AuthDialog$THandler -> fo:
    com.tencent.connect.auth.AuthDialog$OnTimeListener a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthMap -> fp:
    int b -> a
    com.tencent.connect.auth.AuthMap sInstance -> b
    java.util.HashMap authMap -> c
    boolean a -> d
    com.tencent.connect.auth.AuthMap getInstance() -> a
    com.tencent.connect.auth.AuthMap$Auth get(java.lang.String) -> a
    java.lang.String set(com.tencent.connect.auth.AuthMap$Auth) -> a
    void remove(java.lang.String) -> b
    java.lang.String makeKey() -> b
    java.lang.String decode(java.lang.String,java.lang.String) -> a
com.tencent.connect.auth.AuthMap$Auth -> fq:
    com.tencent.tauth.IUiListener listener -> a
    com.tencent.connect.auth.AuthDialog dialog -> b
    java.lang.String key -> c
com.tencent.connect.auth.QQAuth -> fr:
    com.tencent.connect.auth.AuthAgent a -> a
    com.tencent.connect.auth.QQToken b -> b
    java.util.HashMap c -> c
    com.tencent.connect.auth.QQAuth createInstance(java.lang.String,android.content.Context) -> a
    int loginWithOEM(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String,java.lang.String,java.lang.String) -> a
    com.tencent.connect.auth.QQToken getQQToken() -> a
    boolean isSessionValid() -> b
com.tencent.connect.auth.QQToken -> fs:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long e -> d
    boolean isSessionValid() -> a
    java.lang.String getAppId() -> b
    void setAccessToken(java.lang.String,java.lang.String) -> a
com.tencent.connect.avatar.b -> com.tencent.connect.avatar.b:
    android.graphics.Rect a -> a
    android.graphics.Paint b -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.tencent.connect.avatar.c -> com.tencent.connect.avatar.c:
    android.graphics.Matrix c -> a
    android.graphics.Matrix d -> b
    int e -> c
    float f -> d
    float g -> e
    android.graphics.Bitmap h -> f
    boolean i -> g
    android.graphics.PointF l -> h
    android.graphics.PointF m -> i
    float n -> j
    float o -> k
    android.graphics.Rect p -> l
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    float a(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void b() -> a
    void a(com.tencent.connect.avatar.c) -> a
    boolean a(com.tencent.connect.avatar.c,boolean) -> a
com.tencent.connect.avatar.c$1 -> ft:
    com.tencent.connect.avatar.c a -> a
    void run() -> run
com.tencent.connect.avatar.c$1$1 -> fu:
    com.tencent.connect.avatar.c$1 a -> a
    void run() -> run
com.tencent.connect.common.AssistActivity -> com.tencent.connect.common.AssistActivity:
    com.tencent.connect.common.BaseApi sApiObject -> a
    com.tencent.connect.common.BaseApi mAPiObject -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setApiObject(com.tencent.connect.common.BaseApi) -> a
com.tencent.connect.common.BaseApi -> fv:
    com.tencent.connect.auth.QQToken mToken -> a
    android.content.Context mContext -> b
    java.util.List mTaskList -> c
    android.content.Intent mActivityIntent -> d
    int sRequestCode -> i
    java.lang.String registerChannel -> e
    java.lang.String installChannel -> f
    java.lang.String businessId -> g
    boolean isOEM -> h
    void onActivityResult(int,int,android.content.Intent) -> a
    android.content.Intent getActivityIntent() -> a
    android.os.Bundle composeCGIParams() -> b
    android.os.Bundle composeActivityParams() -> c
    void startAssitActivity(android.app.Activity,com.tencent.tauth.IUiListener) -> a
    boolean hasActivityForIntent() -> d
    android.content.Intent getTargetActivityIntent(java.lang.String) -> a
com.tencent.connect.common.BaseApi$ApiTask -> fw:
    int mRequestCode -> a
    com.tencent.tauth.IUiListener mListener -> b
com.tencent.connect.common.BaseApi$TempRequestListener -> fx:
    com.tencent.tauth.IUiListener mListener -> a
    android.os.Handler mHandler -> b
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
com.tencent.connect.common.BaseApi$TempRequestListener$1 -> fy:
    com.tencent.connect.common.BaseApi$TempRequestListener this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.common.Constants -> fz:
    java.lang.String PACKAGE_QZONE -> a
    java.lang.String PACKAGE_QQ -> b
    java.lang.String SIGNATRUE_QZONE -> c
com.tencent.connect.share.QQShare -> fA:
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void b(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    void a(com.tencent.connect.share.QQShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QQShare$1 -> fB:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QQShare$2 -> fC:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.QzoneShare -> fD:
    boolean a -> i
    boolean b -> j
    boolean c -> k
    boolean d -> l
    void shareToQzone(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void a(com.tencent.connect.share.QzoneShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QzoneShare$1 -> fE:
    android.os.Bundle a -> a
    android.app.Activity b -> b
    com.tencent.tauth.IUiListener c -> c
    com.tencent.connect.share.QzoneShare d -> d
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.connect.share.a$1 -> fF:
    com.tencent.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$2 -> fG:
    java.lang.String a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.connect.share.a$3 -> fH:
    com.tencent.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$4 -> fI:
    java.util.ArrayList a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.mm.sdk.a -> fJ:
    android.content.ContentResolver a -> a
    java.lang.String[] b -> b
    java.util.HashMap c -> c
    com.tencent.mm.sdk.a$a d -> d
    java.lang.Object getValue(java.lang.String) -> a
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.a$a -> fK:
    java.util.Map e -> a
    java.util.Set f -> b
    boolean g -> c
    android.content.ContentResolver a -> d
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.a.a$a -> fL:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    int flags -> d
    android.os.Bundle k -> e
com.tencent.mm.sdk.a.a.a$a -> fM:
    java.lang.String l -> a
    java.lang.String m -> b
    java.lang.String j -> c
com.tencent.mm.sdk.b.a -> fN:
    int level -> a
    com.tencent.mm.sdk.b.a$a o -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int a() -> a
com.tencent.mm.sdk.b.a$a -> fO:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void f(java.lang.String,java.lang.String) -> c
    int b() -> a
com.tencent.mm.sdk.b.c -> fP:
    boolean a(java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> fQ:
    android.net.Uri CONTENT_URI -> a
com.tencent.mm.sdk.modelbase.BaseReq -> fR:
    java.lang.String transaction -> a
    java.lang.String openId -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelbase.BaseResp -> fS:
    int errCode -> a
    java.lang.String errStr -> b
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> fT:
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> fU:
    int getType() -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> fV:
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req -> fW:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> b
    int scene -> c
    int getType() -> a
    void fromBundle(android.os.Bundle) -> b
    void toBundle(android.os.Bundle) -> a
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> fX:
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> fY:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> b
    int getType() -> a
    void toBundle(android.os.Bundle) -> a
    void fromBundle(android.os.Bundle) -> b
    boolean checkArgs() -> b
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> fZ:
    int sdkVer -> a
    java.lang.String title -> b
    java.lang.String description -> c
    byte[] thumbData -> d
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> e
    java.lang.String mediaTagName -> f
    java.lang.String messageAction -> g
    java.lang.String messageExt -> h
    boolean checkArgs() -> a
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> ga:
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> c
    boolean checkArgs() -> d
com.tencent.mm.sdk.modelmsg.WXWebpageObject -> gb:
    java.lang.String webpageUrl -> a
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
    int type() -> c
    boolean checkArgs() -> d
com.tencent.mm.sdk.modelpay.PayResp -> gc:
    void fromBundle(android.os.Bundle) -> a
com.tencent.mm.sdk.openapi.IWXAPI -> gd:
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> ge:
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> a
com.tencent.mm.sdk.openapi.WXApiImplV10 -> gf:
    android.content.Context context -> a
    java.lang.String appId -> b
    boolean checkSignature -> c
    boolean detached -> d
    java.lang.String wxappPayEntryClassname -> e
    boolean registerApp(java.lang.String) -> a
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> a
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> a
com.tencent.open.PKDialog -> com.tencent.open.PKDialog:
    java.lang.String TAG -> TAG
    int WEBVIEW_HEIGHT -> WEBVIEW_HEIGHT
    int MSG_COMPLETE -> MSG_COMPLETE
    int MSG_CANCEL -> MSG_CANCEL
    int MSG_SHOW_TIPS -> MSG_SHOW_TIPS
    int MSG_ON_LOAD -> MSG_ON_LOAD
    int MSG_SHOW_PROCESS -> MSG_SHOW_PROCESS
    java.lang.String mUrl -> mUrl
    com.tencent.tauth.IUiListener listener -> listener
    com.tencent.open.PKDialog$OnTimeListener mListener -> mListener
    android.os.Handler mHandler -> mHandler
    com.tencent.open.b.a mFlMain -> mFlMain
    android.webkit.WebView mWebView -> mWebView
    java.lang.ref.WeakReference sWeakContext -> sWeakContext
    int mWebviewHeight -> mWebviewHeight
    android.widget.Toast sToast -> sToast
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void createViews() -> createViews
    void initViews() -> initViews
    void callJs(java.lang.String,java.lang.String) -> callJs
    void showTips(android.content.Context,java.lang.String) -> showTips
    void showProcessDialog(android.content.Context,java.lang.String) -> showProcessDialog
    void loadUrlWithBrowser(java.lang.String,java.lang.String,java.lang.String) -> loadUrlWithBrowser
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
    android.os.Handler access$200(com.tencent.open.PKDialog) -> access$200
    java.lang.String access$300() -> access$300
    java.lang.ref.WeakReference access$400() -> access$400
    com.tencent.open.PKDialog$OnTimeListener access$500(com.tencent.open.PKDialog) -> access$500
    android.webkit.WebView access$600(com.tencent.open.PKDialog) -> access$600
    void access$800(android.content.Context,java.lang.String) -> access$800
    void access$900(android.content.Context,java.lang.String) -> access$900
com.tencent.open.PKDialog$1 -> com.tencent.open.PKDialog$1:
com.tencent.open.PKDialog$FbWebViewClient -> com.tencent.open.PKDialog$FbWebViewClient:
    com.tencent.open.PKDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.PKDialog$JsListener -> com.tencent.open.PKDialog$JsListener:
    com.tencent.open.PKDialog this$0 -> this$0
    void onComplete(java.lang.String) -> onComplete
    void onCancel(java.lang.String) -> onCancel
    void showMsg(java.lang.String) -> showMsg
    void onLoad(java.lang.String) -> onLoad
com.tencent.open.PKDialog$OnTimeListener -> com.tencent.open.PKDialog$OnTimeListener:
    java.lang.ref.WeakReference mWeakCtx -> mWeakCtx
    java.lang.String mAction -> mAction
    java.lang.String mUrl -> mUrl
    java.lang.String mAppid -> mAppid
    com.tencent.tauth.IUiListener mWeakL -> mWeakL
    void onComplete(java.lang.String) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$700(com.tencent.open.PKDialog$OnTimeListener,java.lang.String) -> access$700
com.tencent.open.PKDialog$THandler -> com.tencent.open.PKDialog$THandler:
    com.tencent.open.PKDialog$OnTimeListener mL -> mL
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.TDialog -> com.tencent.open.TDialog:
    android.widget.FrameLayout$LayoutParams a -> a
    java.lang.ref.WeakReference d -> b
    java.lang.ref.WeakReference e -> c
    android.widget.FrameLayout i -> d
    android.webkit.WebView j -> e
    android.widget.FrameLayout k -> f
    android.widget.ProgressBar l -> g
    android.widget.Toast b -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
    java.lang.ref.WeakReference a() -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.ref.WeakReference b() -> b
    void b(android.content.Context,java.lang.String) -> b
    android.os.Handler a(com.tencent.open.TDialog) -> a
    com.tencent.open.TDialog$OnTimeListener b(com.tencent.open.TDialog) -> b
    android.webkit.WebView c(com.tencent.open.TDialog) -> c
com.tencent.open.TDialog$1 -> com.tencent.open.TDialog$1:
com.tencent.open.TDialog$FbWebViewClient -> com.tencent.open.TDialog$FbWebViewClient:
    com.tencent.open.TDialog this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.TDialog$JsListener -> com.tencent.open.TDialog$JsListener:
    com.tencent.open.TDialog this$0 -> this$0
    void onAddShare(java.lang.String) -> onAddShare
    void onInvite(java.lang.String) -> onInvite
    void onCancelAddShare(java.lang.String) -> onCancelAddShare
    void onCancelLogin() -> onCancelLogin
    void onCancelInvite() -> onCancelInvite
    void onComplete(java.lang.String) -> onComplete
    void onCancel(java.lang.String) -> onCancel
    void showMsg(java.lang.String) -> showMsg
    void onLoad(java.lang.String) -> onLoad
com.tencent.open.TDialog$OnTimeListener -> com.tencent.open.TDialog$OnTimeListener:
    java.lang.ref.WeakReference mWeakCtx -> mWeakCtx
    java.lang.String mAction -> mAction
    java.lang.String mUrl -> mUrl
    java.lang.String mAppid -> mAppid
    com.tencent.tauth.IUiListener mWeakL -> mWeakL
    void onComplete(java.lang.String) -> onComplete
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$000(com.tencent.open.TDialog$OnTimeListener,java.lang.String) -> access$000
com.tencent.open.TDialog$THandler -> com.tencent.open.TDialog$THandler:
    com.tencent.open.TDialog$OnTimeListener mL -> mL
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.a -> gg:
    java.util.HashMap a -> a
    void a(com.tencent.open.a$b,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.util.List,com.tencent.open.a$a) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
com.tencent.open.a$a -> gh:
    java.lang.ref.WeakReference a -> a
    long b -> b
    void a() -> a
com.tencent.open.a$b -> gi:
    void call(java.lang.String,java.util.List,com.tencent.open.a$a) -> call
    boolean customCallback() -> customCallback
com.tencent.open.a.a -> gj:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> c
    java.lang.String b(android.content.Context) -> a
    java.lang.String c(android.content.Context) -> b
com.tencent.open.a.b -> gk:
    android.content.Context a -> b
    android.database.sqlite.SQLiteDatabase b -> c
    com.tencent.open.a.b$a c -> d
    int d -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,int,long,long,long,java.lang.String) -> a
    int a(java.util.ArrayList) -> a
    boolean a() -> a
    boolean b() -> b
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
com.tencent.open.a.b$a -> gl:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.open.a.c -> gm:
    com.tencent.open.a.c a -> a
    long b -> b
    int c -> c
    boolean d -> d
    java.util.Random e -> e
    com.tencent.open.a.b f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    com.tencent.open.a.c a() -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String,java.lang.String,java.lang.String) -> a
    int b(android.content.Context,int) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    int a(com.tencent.open.a.c,int) -> a
    int a(com.tencent.open.a.c) -> a
    boolean a(com.tencent.open.a.c,boolean) -> a
    java.util.ArrayList b(com.tencent.open.a.c) -> b
    com.tencent.open.a.b c(com.tencent.open.a.c) -> c
com.tencent.open.a.c$1 -> gn:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Bundle c -> c
    com.tencent.open.a.c d -> d
    void run() -> run
com.tencent.open.a.d -> go:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
com.tencent.open.b -> gp:
    com.tencent.open.a jsBridge -> jsBridge
    android.webkit.WebChromeClient mChromeClient -> mChromeClient
    void onCreate(android.os.Bundle) -> onCreate
    void onConsoleMessage(java.lang.String) -> onConsoleMessage
com.tencent.open.b$1 -> gq:
    com.tencent.open.b a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
com.tencent.open.b.a -> com.tencent.open.b.a:
    android.graphics.Rect b -> a
    com.tencent.open.b.a$a d -> b
    void a(com.tencent.open.b.a$a) -> a
    void onMeasure(int,int) -> onMeasure
com.tencent.open.b.a$a -> gr:
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
com.tencent.stat.MtaSDkException -> gs:
com.tencent.stat.StatConfig -> gt:
    com.tencent.stat.common.StatLogger logger -> e
    com.tencent.stat.StatConfig$OnlineConfig userCfg -> a
    com.tencent.stat.StatConfig$OnlineConfig sdkCfg -> b
    com.tencent.stat.StatReportStrategy statSendStrategy -> f
    boolean enableStatService -> g
    int sessionTimoutMillis -> h
    int maxStoreEventCount -> i
    int maxLoadEventCount -> j
    int maxSendRetryCount -> k
    int maxBatchReportCount -> l
    java.lang.String HIBERNATE -> c
    java.lang.String ta_http_proxy -> m
    java.lang.String appkey -> n
    java.lang.String installChannel -> o
    java.lang.String qq -> d
    int sendPeriodMinutes -> p
    boolean enableSmartReporting -> q
    boolean isAutoExceptionCaught -> r
    java.lang.String statReportUrl -> s
    int maxSessionStatReportCount -> t
    int curSessionStatReportCount -> u
    int maxDaySessionNumbers -> v
    int currentDaySessionNumbers -> w
    int maxReportEventLength -> x
    com.tencent.stat.StatReportStrategy getStatSendStrategy() -> a
    void setStatSendStrategy(com.tencent.stat.StatReportStrategy) -> a
    boolean isDebugEnable() -> b
    boolean isEnableStatService() -> c
    void setEnableStatService(boolean) -> a
    int getMaxBatchReportCount() -> d
    int getMaxSendRetryCount() -> e
    int getMaxLoadEventCount() -> f
    int getMaxStoreEventCount() -> g
    void updateOnlineConfig(org.json.JSONObject) -> a
    void updateCfg(com.tencent.stat.StatConfig$OnlineConfig,org.json.JSONObject) -> a
    void updateReportStrategy(org.json.JSONObject) -> b
    void setConfig(com.tencent.stat.StatConfig$OnlineConfig) -> a
    org.apache.http.HttpHost getStatHttpProxy() -> h
    java.lang.String getAppKey(android.content.Context) -> a
    boolean updateAppkeys(java.lang.String) -> c
    void setAppKey(android.content.Context,java.lang.String) -> a
    java.lang.String getInstallChannel(android.content.Context) -> b
    void setInstallChannel(java.lang.String) -> a
    java.lang.String getQQ() -> i
    void setSendPeriodMinutes(int) -> a
    int getSendPeriodMinutes() -> j
    boolean isEnableSmartReporting() -> k
    void setEnableSmartReporting(boolean) -> b
    boolean isAutoExceptionCaught() -> l
    void setAutoExceptionCaught(boolean) -> c
    java.lang.String getStatReportUrl() -> m
    void setStatReportUrl(java.lang.String) -> b
    int getMaxSessionStatReportCount() -> n
    int getCurSessionStatReportCount() -> o
    void setCurSessionStatReportCount(int) -> b
    void incCurSessionStatReportCount() -> p
    int getMaxDaySessionNumbers() -> q
    void incCurrentDaySessionNumbers() -> r
    void setCurrentDaySessionNumbers(int) -> c
    int getCurrentDaySessionNumbers() -> s
    int getMaxReportEventLength() -> t
com.tencent.stat.StatConfig$OnlineConfig -> gu:
    int type -> a
    org.json.JSONObject props -> b
    java.lang.String md5sum -> c
    int version -> d
com.tencent.stat.StatDispatchCallback -> gv:
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatDispatcher -> gw:
    com.tencent.stat.common.StatLogger logger -> a
    org.apache.http.impl.client.DefaultHttpClient client -> b
    android.os.Handler handler -> c
    com.tencent.stat.StatDispatcher instance -> d
    android.content.Context applicationContext -> e
    void setApplicationContext(android.content.Context) -> a
    android.content.Context getApplicationContext() -> a
    com.tencent.stat.StatDispatcher getInstance() -> b
    void sendHttpPost(java.util.List,com.tencent.stat.StatDispatchCallback) -> a
    void send(java.util.List,com.tencent.stat.StatDispatchCallback) -> b
    void send(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> a
com.tencent.stat.StatDispatcher$1 -> gx:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.stat.StatDispatcher$2 -> gy:
    java.util.List val$evs -> a
    com.tencent.stat.StatDispatchCallback val$cb -> b
    com.tencent.stat.StatDispatcher this$0 -> c
    void run() -> run
com.tencent.stat.StatReportStrategy -> gz:
    com.tencent.stat.StatReportStrategy INSTANT -> a
    com.tencent.stat.StatReportStrategy ONLY_WIFI -> b
    com.tencent.stat.StatReportStrategy BATCH -> c
    com.tencent.stat.StatReportStrategy APP_LAUNCH -> d
    com.tencent.stat.StatReportStrategy DEVELOPER -> e
    com.tencent.stat.StatReportStrategy PERIOD -> f
    com.tencent.stat.StatReportStrategy ONLY_WIFI_NO_CACHE -> g
    int v -> h
    com.tencent.stat.StatReportStrategy[] $VALUES -> i
    com.tencent.stat.StatReportStrategy[] values() -> a
    com.tencent.stat.StatReportStrategy getStatReportStrategy(int) -> a
com.tencent.stat.StatService -> gA:
    android.os.Handler handler -> a
    long lastActivityTimestamp -> b
    long nextDayStartTimestamp -> c
    int sessionId -> d
    java.lang.String last_pageId -> e
    java.lang.String lastReferPageId -> f
    com.tencent.stat.common.StatLogger logger -> g
    java.lang.Thread$UncaughtExceptionHandler originalExceptionHandler -> h
    boolean firstSession -> i
    android.os.Handler getHandler(android.content.Context) -> a
    org.json.JSONObject getEncodeConfig() -> c
    int getSessionID(android.content.Context,boolean) -> a
    void reportQQ(android.content.Context,java.lang.String) -> a
    boolean startStatService(android.content.Context,java.lang.String,java.lang.String) -> a
    void reportSdkSelfException(android.content.Context,java.lang.Throwable) -> a
    void trackCustomEvent(android.content.Context,java.lang.String,java.lang.String[]) -> a
    com.tencent.stat.common.StatLogger access$000() -> a
    java.lang.Thread$UncaughtExceptionHandler access$100() -> b
com.tencent.stat.StatService$1 -> gB:
    android.content.Context val$tempContext -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.stat.StatService$2 -> gC:
    int[] $SwitchMap$com$tencent$stat$StatReportStrategy -> a
com.tencent.stat.StatService$StatTask -> gD:
    com.tencent.stat.event.Event ev -> a
    com.tencent.stat.StatReportStrategy strategy -> b
    void sendEvents() -> a
    void sendEventsNow(boolean) -> a
    void run() -> run
    com.tencent.stat.event.Event access$200(com.tencent.stat.StatService$StatTask) -> a
com.tencent.stat.StatService$StatTask$1 -> gE:
    com.tencent.stat.StatService$StatTask this$0 -> a
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatService$StatTask$2 -> gF:
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatStore -> gG:
    com.tencent.stat.StatStore$StatStoreHelper helper -> b
    android.os.Handler handler -> c
    int numStoredEvents -> a
    com.tencent.stat.common.User user -> d
    com.tencent.stat.common.StatLogger logger -> e
    com.tencent.stat.StatStore instance -> f
    java.util.HashMap kvMap -> g
    int getNumStoredEvents() -> a
    com.tencent.stat.StatStore getInstance(android.content.Context) -> a
    com.tencent.stat.StatStore getInstance() -> b
    com.tencent.stat.common.User getUser(android.content.Context) -> b
    void directDeleteEvents(java.util.List) -> b
    void directUpdateEvents(java.util.List,int) -> b
    void updateEvents(java.util.List,int) -> a
    void deleteEvents(java.util.List) -> a
    void directStoreEvent(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> a
    void storeEvent(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> b
    void storeCfg(com.tencent.stat.StatConfig$OnlineConfig) -> a
    void loadEvents(int) -> a
    void loadKeyValues() -> d
    void access$000(com.tencent.stat.StatStore) -> a
    void access$100(com.tencent.stat.StatStore,java.util.List,int) -> a
    void access$200(com.tencent.stat.StatStore,java.util.List) -> a
    com.tencent.stat.StatStore$StatStoreHelper access$300(com.tencent.stat.StatStore) -> b
    com.tencent.stat.common.StatLogger access$400() -> c
    void access$500(com.tencent.stat.StatStore,java.util.List,int) -> b
com.tencent.stat.StatStore$1 -> gH:
    com.tencent.stat.StatStore this$0 -> a
    void run() -> run
com.tencent.stat.StatStore$2 -> gI:
    java.util.List val$evs -> a
    int val$status -> b
    com.tencent.stat.StatStore this$0 -> c
    void run() -> run
com.tencent.stat.StatStore$3 -> gJ:
    java.util.List val$evs -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$4 -> gK:
    com.tencent.stat.event.Event val$ev -> a
    com.tencent.stat.StatDispatchCallback val$cb -> b
    com.tencent.stat.StatStore this$0 -> c
    void run() -> run
com.tencent.stat.StatStore$5 -> gL:
    com.tencent.stat.StatConfig$OnlineConfig val$cfg -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$6 -> gM:
    com.tencent.stat.StatStore this$0 -> a
    void run() -> run
com.tencent.stat.StatStore$7 -> gN:
    int val$maxNumber -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$7$1 -> gO:
    java.util.List val$evs -> a
    int val$loadNumber -> b
    com.tencent.stat.StatStore$7 this$1 -> c
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatStore$StatStoreHelper -> gP:
    java.lang.String DATABASE_NAME -> a
    int DATABASE_VERSION -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void upgradeUserToVer3(android.database.sqlite.SQLiteDatabase) -> a
    void upgradeEventsToVer3(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.stat.StatStore$StoredEvent -> gQ:
    long id -> a
    java.lang.String content -> b
    int send_count -> c
com.tencent.stat.common.Env -> gR:
    com.tencent.stat.common.Env$BasicEnv basicEnv -> a
    java.lang.Integer tel_network -> b
    java.lang.String conn -> c
    org.json.JSONObject attr_json -> d
    void encode(org.json.JSONObject) -> a
com.tencent.stat.common.Env$BasicEnv -> gS:
    java.lang.String appVersion -> a
    java.lang.String sdkVersion -> b
    android.util.DisplayMetrics display -> c
    int osVersion -> d
    java.lang.String model -> e
    java.lang.String manufacture -> f
    java.lang.String language -> g
    java.lang.String channel -> h
    java.lang.String operator -> i
    java.lang.String timezone -> j
    java.lang.String sd -> k
    int jb -> l
com.tencent.stat.common.RC4 -> gT:
    byte[] key -> a
    byte[] encrypt(byte[]) -> a
    byte[] decrypt(byte[]) -> b
    byte[] encrypt(byte[],byte[]) -> a
com.tencent.stat.common.SdkProtection -> gU:
    long valueNotSet -> a
    long getPreferencesValue(android.content.Context,java.lang.String) -> a
    boolean beginCheck(android.content.Context) -> a
    void endCheck(android.content.Context) -> b
com.tencent.stat.common.StatBase64 -> gV:
    boolean $assertionsDisabled -> a
    byte[] decode(byte[],int) -> a
    byte[] encode(byte[],int) -> b
com.tencent.stat.common.StatBase64$Coder -> gW:
    byte[] output -> a
    int op -> b
com.tencent.stat.common.StatBase64$Decoder -> gX:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
com.tencent.stat.common.StatBase64$Encoder -> gY:
    byte[] ENCODE -> f
    byte[] ENCODE_WEBSAFE -> g
    byte[] tail -> h
    int tailLen -> i
    int count -> j
    boolean do_padding -> c
    boolean do_newline -> d
    boolean do_cr -> e
    byte[] alphabet -> k
    boolean $assertionsDisabled -> l
    boolean process(byte[],int,int,boolean) -> a
com.tencent.stat.common.StatCommonHelper -> gZ:
    java.lang.String userId -> a
    java.lang.String appkey -> b
    java.lang.String macId -> c
    java.util.Random random -> d
    com.tencent.stat.common.StatLogger logger -> e
    java.util.Random getRandom() -> e
    int getNextSessionID() -> a
    byte[] deocdeGZipContent(byte[]) -> a
    java.lang.String md5sum(java.lang.String) -> a
    org.apache.http.HttpHost getHttpProxy(android.content.Context) -> a
    java.lang.String getUserID(android.content.Context) -> b
    java.lang.String getMacId(android.content.Context) -> c
    android.util.DisplayMetrics getDisplayMetrics(android.content.Context) -> d
    boolean checkPermission(android.content.Context,java.lang.String) -> a
    boolean isWiFiActive(android.content.Context) -> e
    java.lang.String getWifiMacAddress(android.content.Context) -> q
    boolean isWifiNet(android.content.Context) -> f
    boolean isNetworkAvailable(android.content.Context) -> g
    java.lang.String getAppKey(android.content.Context) -> h
    java.lang.String getInstallChannel(android.content.Context) -> i
    java.lang.String getDeviceID(android.content.Context) -> j
    java.lang.String getSimOperator(android.content.Context) -> k
    java.lang.String getCurAppVersion(android.content.Context) -> l
    boolean checkPhoneState(android.content.Context) -> r
    java.lang.String getLinkedWay(android.content.Context) -> m
    java.lang.Integer getTelephonyNetworkType(android.content.Context) -> n
    java.lang.String getAppVersion(android.content.Context) -> o
    void jsonPut(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    int hasRootAccess$faab21a() -> b
    com.tencent.stat.common.StatLogger getLogger() -> c
    long getTomorrowStartMilliseconds() -> d
    java.lang.Long convertStringToLong(java.lang.String,java.lang.String,int,int,java.lang.Long) -> a
    long getSDKLongVersion(java.lang.String) -> b
    java.lang.String getExternalStorageInfo(android.content.Context) -> p
    java.lang.String getDateFormat(long) -> a
    java.lang.String encode(java.lang.String) -> c
    java.lang.String decode(java.lang.String) -> d
com.tencent.stat.common.StatCommonHelper$RootCmd -> ha:
    int systemRootState -> a
    boolean isRootSystem() -> a
com.tencent.stat.common.StatLogger -> hb:
    java.lang.String tag -> b
    boolean debugEnable -> a
    int logLevel -> c
    java.lang.String getLoggerClassInfo() -> a
    void i(java.lang.Object) -> a
    void warn(java.lang.Object) -> b
    void w(java.lang.Object) -> c
    void error(java.lang.Object) -> d
    void e(java.lang.Object) -> e
    void e(java.lang.Exception) -> a
    void debug(java.lang.Object) -> f
    void d(java.lang.Object) -> g
com.tencent.stat.common.StatPreferences -> hc:
    android.content.SharedPreferences defaultPerferences -> a
    android.content.SharedPreferences getInstance(android.content.Context) -> a
    long getLong(android.content.Context,java.lang.String,long) -> a
    void putLong(android.content.Context,java.lang.String,long) -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> a
    void putString(android.content.Context,java.lang.String,java.lang.String) -> b
com.tencent.stat.common.User -> hd:
    java.lang.String uid -> a
    java.lang.String mac -> b
    int type -> c
com.tencent.stat.event.AdditionEvent -> he:
    java.util.Map map -> b
    com.tencent.stat.event.EventType getType() -> a
    boolean onEncode(org.json.JSONObject) -> a
com.tencent.stat.event.CustomEvent -> hf:
    com.tencent.stat.event.CustomEvent$Key key -> b
    long duration -> c
    void setArgs(java.lang.String[]) -> a
    com.tencent.stat.event.EventType getType() -> a
    boolean onEncode(org.json.JSONObject) -> a
com.tencent.stat.event.CustomEvent$Key -> hg:
    java.lang.String id -> a
    java.lang.String[] args -> b
    java.util.Properties prop -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.tencent.stat.event.ErrorEvent -> hh:
    java.lang.String error -> b
    int errorAttr -> c
    int maxErrorLength -> d
    com.tencent.stat.event.EventType getType() -> a
    boolean onEncode(org.json.JSONObject) -> a
com.tencent.stat.event.Event -> hi:
    java.lang.String appkey -> b
    long timestamp -> c
    int sessionId -> d
    com.tencent.stat.common.User user -> a
    android.content.Context ctx -> e
    long getTimestamp() -> b
    android.content.Context getContext() -> c
    com.tencent.stat.event.EventType getType() -> a
    boolean onEncode(org.json.JSONObject) -> a
    boolean encode(org.json.JSONObject) -> b
    java.lang.String toJsonString() -> d
com.tencent.stat.event.EventType -> hj:
    com.tencent.stat.event.EventType PAGE_VIEW -> e
    com.tencent.stat.event.EventType SESSION_ENV -> a
    com.tencent.stat.event.EventType ERROR -> b
    com.tencent.stat.event.EventType CUSTOM -> c
    com.tencent.stat.event.EventType ADDITION -> d
    com.tencent.stat.event.EventType MONITOR_STAT -> f
    int v -> g
    int GetIntValue() -> a
com.tencent.stat.event.SessionEnv -> hk:
    com.tencent.stat.common.Env env -> b
    org.json.JSONObject cfgJson -> c
    com.tencent.stat.event.EventType getType() -> a
    boolean onEncode(org.json.JSONObject) -> a
com.tencent.tauth.AuthActivity -> com.tencent.tauth.AuthActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void execAuthCallback(android.os.Bundle,java.lang.String) -> a
    void execShareToQQCallback(android.os.Bundle) -> a
com.tencent.tauth.IRequestListener -> hl:
    void onComplete(org.json.JSONObject) -> a
    void onIOException(java.io.IOException) -> a
    void onMalformedURLException(java.net.MalformedURLException) -> a
    void onJSONException(org.json.JSONException) -> a
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> a
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> a
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> a
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> a
    void onUnknowException(java.lang.Exception) -> a
com.tencent.tauth.IUiListener -> hm:
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.tauth.Tencent -> hn:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    com.tencent.tauth.Tencent createInstance(java.lang.String,android.content.Context) -> a
    boolean checkManifestConfig(android.content.Context,java.lang.String) -> a
com.tencent.tauth.UiError -> ho:
    int errorCode -> a
    java.lang.String errorMessage -> b
    java.lang.String errorDetail -> c
com.tencent.utils.AsynLoadImg -> hp:
    java.lang.String b -> a
    com.tencent.utils.AsynLoadImgBack c -> b
    java.lang.String d -> c
    long e -> d
    android.os.Handler f -> e
    java.lang.Runnable g -> f
    boolean saveFile(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getbitmap(java.lang.String) -> a
com.tencent.utils.AsynLoadImg$1 -> hq:
    com.tencent.utils.AsynLoadImg a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.utils.AsynLoadImg$2 -> hr:
    com.tencent.utils.AsynLoadImg a -> a
    void run() -> run
com.tencent.utils.AsynLoadImgBack -> hs:
    void saved(int,java.lang.String) -> a
    void batchSaved(int,java.util.ArrayList) -> a
com.tencent.utils.HttpUtils$1 -> ht:
    com.tencent.connect.auth.QQToken a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    android.os.Bundle d -> d
    java.lang.String e -> e
    com.tencent.tauth.IRequestListener f -> f
    void run() -> run
com.tencent.utils.HttpUtils$CustomSSLSocketFactory -> hu:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.tencent.utils.HttpUtils$HttpStatusException -> hv:
com.tencent.utils.HttpUtils$MyX509TrustManager -> hw:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.tencent.utils.HttpUtils$NetworkProxy -> hx:
    java.lang.String host -> a
    int port -> b
com.tencent.utils.HttpUtils$NetworkUnavailableException -> hy:
com.tencent.utils.OpenConfig -> hz:
    java.util.HashMap a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    org.json.JSONObject e -> e
    long f -> f
    int g -> g
    boolean h -> h
    com.tencent.utils.OpenConfig getInstance(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> e
    void b() -> a
    void c() -> b
    java.lang.String getString(java.lang.String) -> a
    int getInt(java.lang.String) -> b
    long getLong(java.lang.String) -> c
    boolean getBoolean(java.lang.String) -> d
    void b(java.lang.String) -> f
    android.content.Context a(com.tencent.utils.OpenConfig) -> a
    void a(com.tencent.utils.OpenConfig,org.json.JSONObject) -> a
    int a(com.tencent.utils.OpenConfig,int) -> a
com.tencent.utils.OpenConfig$1 -> hA:
    android.os.Bundle a -> a
    com.tencent.utils.OpenConfig b -> b
    void run() -> run
com.tencent.utils.ServerSetting -> hB:
    java.lang.String a -> a
    com.tencent.utils.ServerSetting b -> b
    java.lang.ref.WeakReference c -> c
    com.tencent.utils.ServerSetting getInstance() -> a
    java.lang.String getEnvUrl(android.content.Context,java.lang.String) -> a
com.tencent.utils.TemporaryStorage -> hC:
    java.util.HashMap a -> a
    java.lang.Object set(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
com.tencent.utils.Util -> hD:
    boolean b -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> a
    org.json.JSONObject decodeUrlToJson(org.json.JSONObject,java.lang.String) -> a
    android.os.Bundle parseUrl(java.lang.String) -> b
    org.json.JSONObject parseUrlToJson(java.lang.String) -> c
    org.json.JSONObject parseJson(java.lang.String) -> d
    void logd(java.lang.String,java.lang.String) -> a
    java.lang.String getUserIp() -> a
    boolean isEmpty(java.lang.String) -> e
    boolean a(android.content.Context) -> c
    boolean openBrowser(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isMobileQQSupportShare(android.content.Context) -> a
    java.lang.String encrypt(java.lang.String) -> f
    char a(int) -> a
    void reportBernoulli(android.content.Context,java.lang.String,long,java.lang.String) -> a
    boolean hasSDCard() -> b
    java.lang.String toHexString(byte[]) -> a
    java.lang.String getApplicationLable(android.content.Context) -> b
    boolean isValidUrl(java.lang.String) -> g
    boolean isValidPath(java.lang.String) -> h
    boolean fileExists(java.lang.String) -> i
    java.lang.String subString(java.lang.String,int,java.lang.String,java.lang.String) -> a
com.tencent.utils.Util$1 -> hE:
    android.content.Context a -> a
    android.os.Bundle b -> b
    void run() -> run
com.tencent.utils.Util$Statistic -> hF:
    java.lang.String response -> a
    long reqSize -> b
    long rspSize -> c
com.yingshi.toutiao.FavoritesActivity -> com.yingshi.toutiao.FavoritesActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.yingshi.toutiao.FavoritesActivity$1 -> hG:
    com.yingshi.toutiao.FavoritesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment -> hH:
    com.yingshi.toutiao.actions.GetFavoritesAction mGetFavoritesAction -> N
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> O
    boolean mIsLoaded -> P
    void onActivityCreated(android.os.Bundle) -> c
    void onCreate(android.os.Bundle) -> b
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void access$0(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,boolean) -> a
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$1(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> a
    void access$2(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$3(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> b
    void access$4(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> c
    com.yingshi.toutiao.actions.GetFavoritesAction access$5(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> d
    void access$6(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,com.yingshi.toutiao.actions.GetFavoritesAction) -> a
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment$1 -> hI:
    com.yingshi.toutiao.FavoritesActivity$FavoritesFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment$2 -> hJ:
    com.yingshi.toutiao.FavoritesActivity$FavoritesFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.LoginActivity -> com.yingshi.toutiao.LoginActivity:
    com.yingshi.toutiao.social.ISocialProvider mAuthProvider -> a
    com.yingshi.toutiao.TouTiaoApp mApp -> b
    void onCreate(android.os.Bundle) -> onCreate
    void loginQQ(android.view.View) -> loginQQ
    void loginWeibo(android.view.View) -> loginWeibo
    void loginWeixin(android.view.View) -> loginWeixin
    void enter(android.view.View) -> enter
    void onLoginSuccess(com.yingshi.toutiao.social.AccountInfo) -> a
    void onFailure(java.lang.String) -> a
    void onGetAccountInfo(com.yingshi.toutiao.social.AccountInfo) -> b
    void showHomeActivity() -> a
    com.yingshi.toutiao.TouTiaoApp access$0(com.yingshi.toutiao.LoginActivity) -> a
com.yingshi.toutiao.LoginActivity$1 -> hK:
    com.yingshi.toutiao.LoginActivity this$0 -> a
    com.yingshi.toutiao.social.AccountInfo val$accountInfo -> b
    java.lang.Void doInBackground$10299ca() -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainActivity -> com.yingshi.toutiao.MainActivity:
    java.util.List mTabs -> f
    android.widget.TabHost mTabHost -> g
    android.widget.HorizontalScrollView mTabScrollView -> h
    android.support.v4.view.ViewPager mViewPager -> i
    android.view.View mLoadingView -> j
    com.yingshi.toutiao.MainUserCenterFragment mUserCenterFragment -> k
    com.yingshi.toutiao.storage.CategoryDAO mcategoryDAO -> l
    android.widget.TabHost$TabContentFactory mEmptyTabContentFactory -> m
    void onCreate(android.os.Bundle) -> onCreate
    void highlightTab(int) -> a
    com.yingshi.toutiao.storage.CategoryDAO access$0(com.yingshi.toutiao.MainActivity) -> a
    void access$1(com.yingshi.toutiao.MainActivity,java.util.List) -> a
    void access$2(com.yingshi.toutiao.MainActivity) -> b
    android.support.v4.view.ViewPager access$3(com.yingshi.toutiao.MainActivity) -> c
    android.widget.TabHost access$4(com.yingshi.toutiao.MainActivity) -> d
    java.util.List access$5(com.yingshi.toutiao.MainActivity) -> e
    android.widget.HorizontalScrollView access$6(com.yingshi.toutiao.MainActivity) -> f
    void access$7(com.yingshi.toutiao.MainActivity,int) -> a
com.yingshi.toutiao.MainActivity$1 -> hL:
    com.yingshi.toutiao.MainActivity this$0 -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
com.yingshi.toutiao.MainActivity$2 -> hM:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainActivity$3 -> hN:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainActivity$4 -> hO:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainActivity$5 -> hP:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainActivity$6 -> hQ:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainActivity$7 -> hR:
    com.yingshi.toutiao.MainActivity this$0 -> a
    java.util.List val$categories -> b
    void onTabChanged(java.lang.String) -> onTabChanged
com.yingshi.toutiao.MainActivity$8 -> hS:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onPageSelected(int) -> a
com.yingshi.toutiao.MainActivity$MainPagerAdapter -> hT:
    java.util.List mCategories -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.yingshi.toutiao.MainFragment -> hU:
    java.lang.String mCategory -> N
    com.yingshi.toutiao.view.PhotoPager mPhotoPager -> O
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> P
    java.util.List mFocusNews -> Q
    com.yingshi.toutiao.storage.NewsDAO mNewsDAO -> R
    com.yingshi.toutiao.storage.HeadNewsDAO mHeadNewsDAO -> S
    com.yingshi.toutiao.actions.GetNewsAction mGetnewsAction -> T
    boolean mFocusLoadedFromServer -> U
    boolean mNewsLoadedFromServer -> V
    int mAsyncTaskCount -> W
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> b
    void onActivityCreated(android.os.Bundle) -> c
    void loadFocusFromServer() -> G
    void loadNewsFromServer() -> H
    void loadFocusFromDB() -> I
    void loadNewsFromDB() -> J
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onResume() -> o
    void onViewStateRestored(android.os.Bundle) -> d
    void onStart() -> n
    void onPause() -> p
    void onStop() -> q
    void onDestroyView() -> r
    void onDestroy() -> s
    void onDetach() -> u
    void access$0(android.content.Context,com.yingshi.toutiao.model.News) -> a
    java.lang.String access$1(com.yingshi.toutiao.MainFragment) -> a
    com.yingshi.toutiao.storage.HeadNewsDAO access$2(com.yingshi.toutiao.MainFragment) -> b
    com.yingshi.toutiao.storage.NewsDAO access$3(com.yingshi.toutiao.MainFragment) -> c
    void access$4(com.yingshi.toutiao.MainFragment,boolean) -> a
    void access$5(com.yingshi.toutiao.MainFragment,java.util.List) -> a
    com.yingshi.toutiao.view.PhotoPager access$6(com.yingshi.toutiao.MainFragment) -> d
    void access$7(com.yingshi.toutiao.MainFragment,int) -> a
    void access$8(com.yingshi.toutiao.MainFragment) -> e
    void access$9(com.yingshi.toutiao.MainFragment) -> f
    void access$10(com.yingshi.toutiao.MainFragment,boolean) -> b
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$11(com.yingshi.toutiao.MainFragment) -> g
    void access$12(com.yingshi.toutiao.MainFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$13(com.yingshi.toutiao.MainFragment) -> h
    java.util.List access$14(com.yingshi.toutiao.MainFragment) -> i
    void access$15(com.yingshi.toutiao.MainFragment,com.yingshi.toutiao.actions.GetNewsAction) -> a
    com.yingshi.toutiao.actions.GetNewsAction access$16(com.yingshi.toutiao.MainFragment) -> j
com.yingshi.toutiao.MainFragment$1 -> hV:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$10 -> hW:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPageSelected(int) -> a
com.yingshi.toutiao.MainFragment$2 -> hX:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$3 -> hY:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$4 -> hZ:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$5 -> ia:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainFragment$6 -> ib:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainFragment$7 -> ic:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$8 -> id:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$9 -> ie:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainFragment$NewsArrayAdapter -> if:
    android.view.LayoutInflater mInflater -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.yingshi.toutiao.MainFragment$NewsArrayAdapter$1 -> ig:
    com.yingshi.toutiao.MainFragment$NewsArrayAdapter this$1 -> a
    com.yingshi.toutiao.model.News val$news -> b
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainFragment$NewsArrayAdapter$ViewHolder -> ih:
    com.yingshi.toutiao.view.CustomizeImageView newsThumbnail -> a
    android.widget.TextView newsTitle -> b
    android.view.View newsVideoSign -> c
    android.view.View newsSpecialSign -> d
com.yingshi.toutiao.MainFragment$PhotoPagerAdapter -> ii:
    java.util.List news -> a
    com.yingshi.toutiao.MainFragment this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.yingshi.toutiao.MainPhotoFragment -> ij:
    com.yingshi.toutiao.model.News mNews -> M
    com.yingshi.toutiao.view.CustomizeImageView mImageView -> N
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void onActivityCreated(android.os.Bundle) -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.model.News access$0(com.yingshi.toutiao.MainPhotoFragment) -> a
com.yingshi.toutiao.MainPhotoFragment$1 -> ik:
    com.yingshi.toutiao.MainPhotoFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment -> il:
    com.yingshi.toutiao.TouTiaoApp mApp -> M
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> N
    android.view.View mView -> O
    android.widget.ImageButton mReturnBtn -> P
    com.yingshi.toutiao.view.CustomizeImageView mUserPhoto -> Q
    android.widget.TextView mUserName -> R
    android.view.View mBtnFavorites -> S
    android.view.View mBtnDownloads -> T
    android.view.View mBtnClearCache -> U
    com.yingshi.toutiao.MainUserCenterFragment$PhotoUpdateBroadcastReceiver mReceiver -> V
    void onCreate(android.os.Bundle) -> b
    void onResume() -> o
    void onPause() -> p
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void loadUserInfo() -> E
    void access$0(com.yingshi.toutiao.MainUserCenterFragment) -> a
    com.yingshi.toutiao.TouTiaoApp access$1(com.yingshi.toutiao.MainUserCenterFragment) -> b
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$2(com.yingshi.toutiao.MainUserCenterFragment) -> c
com.yingshi.toutiao.MainUserCenterFragment$1 -> im:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$2 -> in:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$3 -> io:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$4 -> ip:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$5 -> iq:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.yingshi.toutiao.MainUserCenterFragment access$0(com.yingshi.toutiao.MainUserCenterFragment$5) -> a
com.yingshi.toutiao.MainUserCenterFragment$5$1 -> ir:
    com.yingshi.toutiao.MainUserCenterFragment$5 this$1 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainUserCenterFragment$PhotoUpdateBroadcastReceiver -> is:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yingshi.toutiao.NewsDetailActivity -> com.yingshi.toutiao.NewsDetailActivity:
    android.view.View mShareNewsWidget -> a
    android.widget.LinearLayout mCommentsList -> b
    android.widget.ImageButton mShowCommentsBtn -> c
    android.widget.EditText mCommentTextView -> d
    com.yingshi.toutiao.view.CustomizeImageView mImageView -> e
    com.yingshi.toutiao.model.News mNews -> f
    com.yingshi.toutiao.actions.GetCommentsAction mGetCommentsAction -> g
    com.tencent.mm.sdk.openapi.IWXAPI mWxapi -> h
    com.tencent.tauth.Tencent mTencent -> i
    com.sina.weibo.sdk.api.share.IWeiboShareAPI mWeiboShareAPI -> j
    void onCreate(android.os.Bundle) -> onCreate
    void showLonginConfirmDialog() -> a
    void playVideo(android.view.View) -> playVideo
    void share(android.view.View) -> share
    void addToFavorites(android.view.View) -> addToFavorites
    void loadComments(android.view.View) -> loadComments
    void fillItems(android.widget.LinearLayout,java.util.List) -> a
    void shareWeiChat(android.view.View) -> shareWeiChat
    android.graphics.Bitmap getNewsImage() -> b
    java.lang.String getNewsUrl() -> c
    void shareWeibo(android.view.View) -> shareWeibo
    void shareQQ(android.view.View) -> shareQQ
    void cancelShare(android.view.View) -> cancelShare
    void access$0(com.yingshi.toutiao.NewsDetailActivity) -> a
    void access$1(com.yingshi.toutiao.NewsDetailActivity) -> b
    void access$2(com.yingshi.toutiao.NewsDetailActivity) -> c
    com.yingshi.toutiao.model.News access$3(com.yingshi.toutiao.NewsDetailActivity) -> d
    android.widget.LinearLayout access$4(com.yingshi.toutiao.NewsDetailActivity) -> e
    android.widget.ImageButton access$5(com.yingshi.toutiao.NewsDetailActivity) -> f
    com.tencent.tauth.Tencent access$6(com.yingshi.toutiao.NewsDetailActivity) -> g
com.yingshi.toutiao.NewsDetailActivity$1 -> it:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.NewsDetailActivity$2 -> iu:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.NewsDetailActivity$3 -> iv:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.yingshi.toutiao.NewsDetailActivity$4 -> iw:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.yingshi.toutiao.NewsDetailActivity$5 -> ix:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.yingshi.toutiao.NewsDetailActivity$6 -> iy:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> c
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
com.yingshi.toutiao.NewsDetailActivity$7 -> iz:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.NewsDetailActivity$8 -> iA:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDetailActivity$9 -> iB:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    android.os.Bundle val$params -> b
    void run() -> run
com.yingshi.toutiao.NewsDetailActivity$9$1 -> iC:
    void onCancel() -> onCancel
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
com.yingshi.toutiao.NewsDownloader -> iD:
    java.util.concurrent.ThreadPoolExecutor mExecutor -> a
    com.yingshi.toutiao.TouTiaoApp mApp -> b
    int mTaskCount -> c
    com.yingshi.toutiao.NewsDownloader mInstance -> d
    void access$1(com.yingshi.toutiao.NewsDownloader,java.util.List) -> a
    void access$2(com.yingshi.toutiao.NewsDownloader) -> a
com.yingshi.toutiao.NewsDownloader$1 -> iE:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.yingshi.toutiao.NewsDownloader$2 -> iF:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$3 -> iG:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$4 -> iH:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.NewsDownloader$5 -> iI:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    com.yingshi.toutiao.model.Category val$category -> b
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$6 -> iJ:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$7 -> iK:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    com.yingshi.toutiao.model.Category val$category -> b
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$8 -> iL:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity -> com.yingshi.toutiao.SearchActivity:
    android.widget.EditText mKeywordText -> e
    com.yingshi.toutiao.SearchActivity$SearchFragment mSearchFragment -> f
    void onCreate(android.os.Bundle) -> onCreate
    void doSearch(android.view.View) -> doSearch
com.yingshi.toutiao.SearchActivity$1 -> iM:
    com.yingshi.toutiao.SearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SearchActivity$SearchFragment -> iN:
    java.lang.String mKeyword -> N
    com.yingshi.toutiao.actions.SearchAction mSearchAction -> O
    com.yingshi.toutiao.storage.NewsDAO mNewsDAO -> P
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> Q
    void onCreate(android.os.Bundle) -> b
    void doSearch(java.lang.String) -> doSearch
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.storage.NewsDAO access$0(com.yingshi.toutiao.SearchActivity$SearchFragment) -> a
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$1(com.yingshi.toutiao.SearchActivity$SearchFragment) -> b
    void access$2(com.yingshi.toutiao.SearchActivity$SearchFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$3(com.yingshi.toutiao.SearchActivity$SearchFragment) -> c
    void access$4(com.yingshi.toutiao.SearchActivity$SearchFragment) -> d
com.yingshi.toutiao.SearchActivity$SearchFragment$1 -> iO:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity$SearchFragment$2 -> iP:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity$SearchFragment$3 -> iQ:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsActivity -> com.yingshi.toutiao.SpecialNewsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.yingshi.toutiao.SpecialNewsActivity$1 -> iR:
    com.yingshi.toutiao.SpecialNewsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SpecialNewsFragment -> iS:
    java.lang.String mSpecialName -> N
    com.yingshi.toutiao.view.SpecialHeader mSpecialHeader -> O
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter mSpecialNewsArrayAdapter -> P
    com.yingshi.toutiao.actions.GetSpecialNewsAction mGetSpecialNewsAction -> Q
    int mAsyncTaskCount -> R
    void onCreate(android.os.Bundle) -> b
    void onActivityCreated(android.os.Bundle) -> c
    void loadPage(boolean) -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.view.SpecialHeader access$0(com.yingshi.toutiao.SpecialNewsFragment) -> a
    int access$1(com.yingshi.toutiao.SpecialNewsFragment) -> b
    void access$2(com.yingshi.toutiao.SpecialNewsFragment,int) -> a
    void access$3(com.yingshi.toutiao.SpecialNewsFragment) -> c
    void access$4(com.yingshi.toutiao.SpecialNewsFragment) -> d
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter access$5(com.yingshi.toutiao.SpecialNewsFragment) -> e
    void access$6(com.yingshi.toutiao.SpecialNewsFragment,com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter) -> a
    com.yingshi.toutiao.actions.GetSpecialNewsAction access$7(com.yingshi.toutiao.SpecialNewsFragment) -> f
    void access$8(com.yingshi.toutiao.SpecialNewsFragment,com.yingshi.toutiao.actions.GetSpecialNewsAction) -> a
com.yingshi.toutiao.SpecialNewsFragment$1 -> iT:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$2 -> iU:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$3 -> iV:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter -> iW:
    android.view.LayoutInflater mInflater -> a
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.yingshi.toutiao.SpecialNewsFragment access$0(com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter) -> a
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter$1 -> iX:
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter this$1 -> a
    com.yingshi.toutiao.model.News val$news -> b
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter$ViewHolder -> iY:
    com.yingshi.toutiao.view.CustomizeImageView newsThumbnail -> a
    android.widget.TextView newsTitle -> b
    android.widget.TextView newsSummary -> c
    android.view.View newsVideoSign -> d
com.yingshi.toutiao.TouTiaoApp -> com.yingshi.toutiao.TouTiaoApp:
    com.yingshi.toutiao.storage.NewsDAO mNewsDao -> a
    com.yingshi.toutiao.storage.HeadNewsDAO mHeadNewsDAO -> b
    com.yingshi.toutiao.storage.FavoritesDAO mFavoritesDAO -> c
    com.yingshi.toutiao.storage.CategoryDAO mCategoryDAO -> d
    com.yingshi.toutiao.storage.DatabaseHelper mDatabaseHelper -> e
    com.yingshi.toutiao.social.AccountInfo mUserInfo -> f
    java.lang.String mCachePath -> g
    void onCreate() -> onCreate
    com.yingshi.toutiao.storage.NewsDAO getNewsDAO() -> a
    com.yingshi.toutiao.storage.HeadNewsDAO getHeadNewsDAO() -> b
    com.yingshi.toutiao.storage.FavoritesDAO getFavoritesDAO() -> c
    com.yingshi.toutiao.storage.CategoryDAO getCategoryDAO() -> d
    void setUserInfo(com.yingshi.toutiao.social.AccountInfo) -> a
    com.yingshi.toutiao.social.AccountInfo getUserInfo() -> e
    java.lang.String getCachePath() -> f
com.yingshi.toutiao.WXEntryActivity -> com.yingshi.toutiao.WXEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> a
com.yingshi.toutiao.WelcomeActivity -> com.yingshi.toutiao.WelcomeActivity:
    com.yingshi.toutiao.TouTiaoApp mApp -> a
    void onCreate(android.os.Bundle) -> onCreate
    com.yingshi.toutiao.TouTiaoApp access$0(com.yingshi.toutiao.WelcomeActivity) -> a
com.yingshi.toutiao.WelcomeActivity$1 -> iZ:
    com.yingshi.toutiao.WelcomeActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.WelcomeActivity$2 -> ja:
    com.yingshi.toutiao.WelcomeActivity this$0 -> a
    java.lang.Void doInBackground$10299ca() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.actions.AbstractAction -> jb:
    java.lang.String mServiceId -> a
    android.content.Context mAppContext -> b
    com.yingshi.toutiao.actions.AbstractAction$UICallBack mUICallback -> d
    com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack mBackgroundCallBack -> e
    com.yingshi.toutiao.actions.AbstractAction$IBackgroundProcessor mBackgroundProcessor -> c
    boolean mCancelled -> f
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground(java.lang.Void[]) -> a
    void execute() -> a
    void execute(com.yingshi.toutiao.actions.AbstractAction$UICallBack) -> a
    void execute(com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack,com.yingshi.toutiao.actions.AbstractAction$UICallBack) -> a
    void executeOnExecutor(com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack,com.yingshi.toutiao.actions.AbstractAction$UICallBack,java.util.concurrent.Executor) -> a
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object createRespObject(org.json.JSONObject) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    org.json.JSONObject access$2(com.yingshi.toutiao.actions.AbstractAction) -> a
    com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack access$3(com.yingshi.toutiao.actions.AbstractAction) -> b
com.yingshi.toutiao.actions.AbstractAction$ActionError -> jc:
com.yingshi.toutiao.actions.AbstractAction$ActionResult -> jd:
    com.yingshi.toutiao.actions.AbstractAction$ActionError mError -> a
    java.lang.Object mObject -> b
    boolean hasError() -> a
com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack -> je:
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.actions.AbstractAction$ErrorCode -> jf:
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode INVALID_REQUEST -> a
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode INVALID_RESPONSE -> b
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode SERVER_ERROR -> c
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_TIMEOUT -> e
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_DISCONNECTED -> f
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_ERROR -> d
com.yingshi.toutiao.actions.AbstractAction$IBackgroundProcessor -> jg:
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor -> jh:
    com.yingshi.toutiao.actions.AbstractAction$ActionResult mResult -> a
    com.yingshi.toutiao.actions.AbstractAction this$0 -> b
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor$1 -> ji:
    com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor this$1 -> c
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
com.yingshi.toutiao.actions.AbstractAction$UICallBack -> jj:
    void onSuccess(java.lang.Object) -> a
    void onFailure$30c4fd98() -> a
com.yingshi.toutiao.actions.GetCategoryAction -> jk:
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
com.yingshi.toutiao.actions.GetCommentsAction -> jl:
    java.lang.String mNewsId -> f
    java.lang.String mCategory -> g
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.GetFavoritesAction -> jm:
    com.yingshi.toutiao.storage.FavoritesDAO mFavoritesDAO -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.GetFavoritesAction cloneCurrentPageAction() -> c
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    com.yingshi.toutiao.storage.FavoritesDAO access$2(com.yingshi.toutiao.actions.GetFavoritesAction) -> a
com.yingshi.toutiao.actions.GetFavoritesAction$DBBackgroundProcessor -> jn:
    com.yingshi.toutiao.actions.GetFavoritesAction this$0 -> a
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.GetFocusAction -> jo:
    java.lang.String mCategory -> d
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object createRespObject(org.json.JSONObject) -> b
com.yingshi.toutiao.actions.GetNewsAction -> jp:
    java.lang.String mCategory -> f
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.GetSpecialAction -> jq:
    java.lang.String mSpecialName -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
com.yingshi.toutiao.actions.GetSpecialNewsAction -> jr:
    java.lang.String mSpecialName -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.GetSpecialNewsAction cloneCurrentPageAction() -> c
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.PaginationAction -> js:
    int mPageIndex -> d
    int mPageSize -> e
    int mTotalCount -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.model.Pagination createRespObject(org.json.JSONObject) -> d
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground(java.lang.Void[]) -> a
    boolean hasMore() -> d
    com.yingshi.toutiao.actions.PaginationAction getNextPageAction() -> e
    com.yingshi.toutiao.actions.PaginationAction getPreviousPageAction() -> f
    int getPageIndex() -> g
    int getPageSize() -> h
    void setTotalCount(int) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    java.lang.Object createRespObject(org.json.JSONObject) -> b
com.yingshi.toutiao.actions.ParallelTask -> jt:
    void execute() -> a
com.yingshi.toutiao.actions.SearchAction -> ju:
    java.lang.String mKeyword -> f
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.model.BaseModel -> jv:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long _id -> a
    java.lang.String id -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    long get_id() -> a
    void set_id(long) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
com.yingshi.toutiao.model.BaseModel$1 -> jw:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.yingshi.toutiao.model.Category -> jx:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    com.yingshi.toutiao.model.Category fromJSON(org.json.JSONObject) -> a
com.yingshi.toutiao.model.Comment -> jy:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String content -> c
    java.lang.String photoUrl -> d
    com.yingshi.toutiao.model.Comment fromJSON(org.json.JSONObject) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
    java.lang.String getName() -> c
    java.lang.String getContent() -> d
    java.lang.String getPhotoUrl() -> e
com.yingshi.toutiao.model.News -> jz:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String name -> a
    java.lang.String summary -> b
    long time -> c
    java.lang.String content -> d
    java.lang.String category -> e
    java.lang.String contact -> f
    int likes -> g
    boolean isSpecial -> h
    java.lang.String specialName -> i
    boolean hasVideo -> j
    java.lang.String videoUrl -> k
    java.lang.String videoPhotoUrl -> l
    java.lang.String author -> m
    java.util.List photoUrls -> n
    java.util.List thumbnailUrls -> o
    java.lang.String videoPhotoFilePath -> p
    java.lang.String photoFilePath -> q
    java.lang.String thumbnailFilePath -> r
    boolean isFocus -> s
    boolean isUserCache -> t
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.yingshi.toutiao.model.News fromJSON(org.json.JSONObject) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    java.lang.String getSummary() -> d
    void setSummary(java.lang.String) -> c
    long getTime() -> e
    void setTime(long) -> b
    java.lang.String getContent() -> f
    void setContent(java.lang.String) -> d
    java.lang.String getCategory() -> g
    void setCategory(java.lang.String) -> e
    java.lang.String getContact() -> h
    void setContact(java.lang.String) -> f
    int getLikes() -> i
    void setLikes(int) -> a
    boolean isSpecial() -> j
    void setSpecial(boolean) -> a
    java.lang.String getSpecialName() -> k
    void setSpecialName(java.lang.String) -> g
    boolean isHasVideo() -> l
    void setHasVideo(boolean) -> b
    java.lang.String getVideoUrl() -> m
    void setVideoUrl(java.lang.String) -> h
    java.lang.String getVideoPhotoUrl() -> n
    void setVideoPhotoUrl(java.lang.String) -> i
    java.lang.String getAuthor() -> o
    void setAuthor(java.lang.String) -> j
    java.util.List getPhotoUrls() -> p
    void setPhotoUrls(java.util.List) -> a
    java.util.List getThumbnailUrls() -> q
    void setThumbnailUrls(java.util.List) -> b
    java.lang.String getVideoPhotoFilePath() -> r
    void setVideoPhotoFilePath(java.lang.String) -> k
    java.lang.String getPhotoFilePath() -> s
    void setPhotoFilePath(java.lang.String) -> l
    java.lang.String getThumbnailFilePath() -> t
    void setThumbnailFilePath(java.lang.String) -> m
    boolean isFocus() -> u
    void setFocus(boolean) -> c
    boolean isUserCache() -> v
    void setUserCache(boolean) -> d
com.yingshi.toutiao.model.News$1 -> jA:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.yingshi.toutiao.model.Pagination -> jB:
    int totalCounts -> a
    java.util.List items -> b
com.yingshi.toutiao.model.Special -> jC:
    java.lang.String summary -> a
    java.util.List photoUrls -> b
    java.lang.String getSummary() -> c
    java.util.List getPhotoUrls() -> d
    com.yingshi.toutiao.model.Special fromJSON(org.json.JSONObject) -> a
com.yingshi.toutiao.social.AccountInfo -> jD:
    java.lang.String provider -> a
    java.lang.String userName -> b
    java.lang.String photoUrl -> c
    java.lang.String photoBase64 -> d
    java.lang.String openId -> e
    java.lang.String token -> f
    long expiresIn -> g
    java.lang.String getProvider() -> c
    void setProvider(java.lang.String) -> b
    java.lang.String getUserName() -> d
    void setUserName(java.lang.String) -> c
    java.lang.String getPhotoUrl() -> e
    void setPhotoUrl(java.lang.String) -> d
    java.lang.String getPhotoBase64() -> f
    void setPhotoBase64(java.lang.String) -> e
    java.lang.String getOpenId() -> g
    void setOpenId(java.lang.String) -> f
    java.lang.String getToken() -> h
    void setToken(java.lang.String) -> g
    long getExpiresIn() -> i
    void setExpiresIn(long) -> b
com.yingshi.toutiao.social.ISocialProvider -> jE:
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.SinaSocialProvider -> jF:
    android.app.Activity mActivity -> b
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> a
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.SinaSocialProvider$1 -> jG:
    com.yingshi.toutiao.social.SinaSocialProvider this$0 -> a
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> b
    void onComplete(android.os.Bundle) -> a
    void onCancel() -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.yingshi.toutiao.social.SinaSocialProvider$2 -> jH:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onComplete(java.lang.String) -> a
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> a
com.yingshi.toutiao.social.SocialResponseListener -> jI:
    void onLoginSuccess(com.yingshi.toutiao.social.AccountInfo) -> a
    void onFailure(java.lang.String) -> a
    void onGetAccountInfo(com.yingshi.toutiao.social.AccountInfo) -> b
com.yingshi.toutiao.social.TecentSocialProvider -> jJ:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    com.tencent.tauth.Tencent mTencent -> b
    com.tencent.connect.UserInfo mInfo -> c
    android.app.Activity mActivity -> d
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.TecentSocialProvider$1 -> jK:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onCancel() -> onCancel
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
com.yingshi.toutiao.social.TecentSocialProvider$2 -> jL:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.yingshi.toutiao.storage.BaseDAO -> jM:
    com.yingshi.toutiao.storage.adapters.BaseAdapter mDbAdapter -> a
    void save(java.util.List) -> a
    void delete() -> a
    java.util.List getAll(java.lang.String) -> a
com.yingshi.toutiao.storage.CategoryDAO -> jN:
com.yingshi.toutiao.storage.DatabaseHelper -> jO:
    java.lang.String CREATE_DATABASE_NEWS -> a
    java.lang.String CREATE_DATABASE_HEADNEWS -> b
    java.lang.String CREATE_DATABASE_FAVORITES -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.yingshi.toutiao.storage.FavoritesDAO -> jP:
com.yingshi.toutiao.storage.HeadNewsDAO -> jQ:
    int deleteHeadNews() -> b
    int deleteHeadFocus() -> c
com.yingshi.toutiao.storage.NewsDAO -> jR:
    int deleteFocusByCategory(java.lang.String) -> b
    int deleteNewsByCategory(java.lang.String) -> c
com.yingshi.toutiao.storage.adapters.BaseAdapter -> jS:
    android.database.sqlite.SQLiteDatabase mDb -> a
    java.lang.String mTableName -> b
    java.lang.String[] mColumnNames -> c
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    long insert(com.yingshi.toutiao.model.BaseModel) -> b
    int delete(java.lang.String) -> a
    java.util.List fetchAll(java.lang.String) -> b
    java.util.List fetchAll(java.lang.String,java.lang.String) -> a
    java.util.List fetchPage(int,int,java.lang.String,java.lang.String) -> a
    int count(java.lang.String) -> c
    java.util.List toObjectList(android.database.Cursor) -> b
com.yingshi.toutiao.storage.adapters.CategoryDBAdapter -> jT:
    java.lang.String[] CATEGORY_COLUMNS -> d
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
com.yingshi.toutiao.storage.adapters.FavoritesDBAdapter -> jU:
    java.util.List findFavorites(int,int) -> a
com.yingshi.toutiao.storage.adapters.HeadNewsDBAdapter -> jV:
com.yingshi.toutiao.storage.adapters.NewsDBAdapter -> jW:
    java.lang.String[] NEWS_COLUMNS -> d
    com.yingshi.toutiao.model.News fetchOneByNewsId(java.lang.String) -> d
    com.yingshi.toutiao.model.News toObject(android.database.Cursor) -> b
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    long insert(com.yingshi.toutiao.model.BaseModel) -> b
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
com.yingshi.toutiao.util.Utils -> jX:
    java.text.SimpleDateFormat sdf -> a
    java.lang.String formatDate(java.lang.String,long) -> a
    java.util.Date parseDate(java.lang.String,java.lang.String) -> a
    java.lang.String encode(java.lang.String,java.lang.String) -> b
    java.lang.String getDecodedValue(org.json.JSONObject,java.lang.String) -> a
    boolean removeFile(java.lang.String) -> a
    void saveDataToFile(java.io.InputStream,java.lang.String) -> a
com.yingshi.toutiao.view.CommentListRow -> com.yingshi.toutiao.view.CommentListRow:
    com.yingshi.toutiao.view.CustomizeImageView mAuthorImg -> a
    android.widget.TextView mAuthorTxt -> b
    android.widget.TextView mCommentText -> c
    void setProduct(com.yingshi.toutiao.model.Comment) -> setProduct
com.yingshi.toutiao.view.CustomizeImageView -> com.yingshi.toutiao.view.CustomizeImageView:
    java.lang.String IMAGE_CACHE_PATH -> a
    void loadImage(java.lang.String) -> a
    java.lang.String getCachedImagePath(java.lang.String) -> b
    void loadImage(byte[]) -> a
    java.lang.String access$0() -> a
com.yingshi.toutiao.view.CustomizeImageView$1 -> jY:
    com.yingshi.toutiao.view.CustomizeImageView this$0 -> a
    java.lang.String val$url -> b
    android.support.v4.app.FragmentManager$OnBackStackChangedListener val$mLoadImageCallback$2ddfbc12 -> c
    android.graphics.drawable.Drawable doInBackground$3775178d() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.view.CustomizeImageView$2 -> jZ:
    com.yingshi.toutiao.view.CustomizeImageView this$0 -> a
    byte[] val$data -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.view.HeaderView -> com.yingshi.toutiao.view.HeaderView:
    android.widget.ImageButton mLeftBtn -> a
    android.widget.ImageButton mRightBtn -> b
    android.widget.TextView mTitle -> c
    void setLeftImage(int,android.view.View$OnClickListener) -> setLeftImage
    void setRightImage(int,android.view.View$OnClickListener) -> setRightImage
    void setTitle(int) -> setTitle
com.yingshi.toutiao.view.LoadMoreView -> com.yingshi.toutiao.view.LoadMoreView:
    android.widget.LinearLayout mProgressView -> a
    android.widget.TextView mStatusText -> b
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$1d5617e4 -> c
    com.yingshi.toutiao.actions.PaginationAction mAction -> d
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus mStatus -> e
    void setOnMoreResultReturnListener$6b713d6f(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnMoreResultReturnListener$6b713d6f
    void setPaginationAction(com.yingshi.toutiao.actions.PaginationAction) -> setPaginationAction
    void access$0(com.yingshi.toutiao.view.LoadMoreView) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$1$48ae838c(com.yingshi.toutiao.view.LoadMoreView) -> b
    void access$2(com.yingshi.toutiao.view.LoadMoreView) -> c
    void access$3(com.yingshi.toutiao.view.LoadMoreView) -> d
com.yingshi.toutiao.view.LoadMoreView$1 -> ka:
    com.yingshi.toutiao.view.LoadMoreView this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.view.LoadMoreView$2 -> kb:
    com.yingshi.toutiao.view.LoadMoreView this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.view.LoadMoreView$LoadStatus -> kc:
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus IDLE -> a
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus LOADING -> b
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus NOMORE -> c
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus FAILED -> d
com.yingshi.toutiao.view.OuterViewPager -> com.yingshi.toutiao.view.OuterViewPager:
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
com.yingshi.toutiao.view.PhotoPager -> com.yingshi.toutiao.view.PhotoPager:
    android.widget.TextView getPhotoNumView() -> a
    android.widget.TextView getPhotoDescriptionView() -> b
    android.support.v4.view.ViewPager getPhotoViewPager() -> c
com.yingshi.toutiao.view.ShareNewsWidget -> com.yingshi.toutiao.view.ShareNewsWidget:
com.yingshi.toutiao.view.SpecialHeader -> com.yingshi.toutiao.view.SpecialHeader:
    com.yingshi.toutiao.view.CustomizeImageView getHeaderImageView() -> a
    android.widget.TextView getSummaryView() -> b
com.yingshi.toutiao.view.ptr.CustomizedPTRListView -> com.yingshi.toutiao.view.ptr.CustomizedPTRListView:
    android.widget.LinearLayout mListViewHeader -> n
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    void addViewToListHeader(android.view.View,int) -> a
com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment -> kd:
    android.view.View mLayout -> N
    com.yingshi.toutiao.view.ptr.CustomizedPTRListView mListView -> M
    android.view.View mLoadingView -> O
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> a
    void setAdapter(android.widget.ListAdapter) -> a
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void showLoadingView() -> E
    void showListView() -> F
com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder -> ke:
    android.view.View headerView -> a
    int height -> b
com.yingshi.toutiao.view.ptr.PTRListAdapter -> kf:
    java.util.List mObjects -> a
    void addMore(java.util.Collection) -> a
