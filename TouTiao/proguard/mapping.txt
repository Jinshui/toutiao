android.support.v4.app.ActivityCompatHoneycomb -> a:
    android.support.v4.app.ActivityCompatHoneycomb next$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb prev$fe619d5 -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    void warnDeprecation(java.lang.String,java.lang.String) -> a
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> a
    boolean validateAppSignature$5b18787d(android.content.pm.Signature[],boolean) -> a
    android.app.AlertDialog createDialog(android.content.Context,int,int,int,int,android.content.DialogInterface$OnClickListener,int,android.content.DialogInterface$OnClickListener) -> a
    void saveStringMap(android.content.Context,java.util.Map) -> a
    void saveString(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> b
    void removeKey(android.content.Context,java.lang.String) -> a
android.support.v4.app.BackStackRecord -> b:
    android.support.v4.app.FragmentManagerImpl mManager -> l
    android.support.v4.app.ActivityCompatHoneycomb mHead$fe619d5 -> a
    android.support.v4.app.ActivityCompatHoneycomb mTail$fe619d5 -> m
    int mNumOp -> b
    int mTransition -> c
    int mTransitionStyle -> d
    boolean mAddToBackStack -> e
    java.lang.String mName -> f
    boolean mCommitted -> n
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp$568ae146(android.support.v4.app.ActivityCompatHoneycomb) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> b
    void run() -> run
    void popFromBackStack(boolean) -> a
android.support.v4.app.BackStackState -> c:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> d:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> e:
    android.support.v4.util.SimpleArrayMap sClassMap -> M
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mMenuVisible -> D
    boolean mCalled -> E
    int mNextAnim -> F
    android.view.ViewGroup mContainer -> G
    android.view.View mView -> H
    android.view.View mInnerView -> I
    boolean mDeferStart -> J
    boolean mUserVisibleHint -> K
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> L
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    android.support.v4.app.FragmentManager getChildFragmentManager() -> d
    boolean isDetached() -> e
    boolean isResumed() -> f
    void onHiddenChanged$1385ff() -> g
    void setMenuVisibility(boolean) -> a
    void setUserVisibleHint(boolean) -> b
    void startActivity(android.content.Intent) -> a
    void onActivityResult$6eb84b52() -> h
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> i
    void onInflate$423a76cd() -> j
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation$24236ca7() -> k
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void onViewCreated$65f1d89() -> l
    android.view.View getView() -> m
    void onActivityCreated(android.os.Bundle) -> c
    void onViewStateRestored(android.os.Bundle) -> d
    void onStart() -> n
    void onResume() -> o
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> p
    void onStop() -> q
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> r
    void onDestroy() -> s
    void initState() -> t
    void onDetach() -> u
    void onDestroyOptionsMenu() -> v
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> E
    void performCreate(android.os.Bundle) -> f
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void performActivityCreated(android.os.Bundle) -> g
    void performStart() -> w
    void performResume() -> x
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> y
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> h
    void performPause() -> z
    void performStop() -> A
    void performReallyStop() -> B
    void performDestroyView() -> C
    void performDestroy() -> D
android.support.v4.app.Fragment$1 -> f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> g:
android.support.v4.app.Fragment$SavedState -> h:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> i:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> j:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> e
    boolean mCreated -> f
    boolean mResumed -> g
    boolean mStopped -> c
    boolean mReallyStopped -> h
    boolean mRetaining -> d
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> k:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> l:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> m:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> n:
    java.util.ArrayList fragments -> a
    android.support.v4.util.SimpleArrayMap loaders -> b
android.support.v4.app.FragmentContainer -> o:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> p:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> q:
android.support.v4.app.FragmentManagerImpl -> r:
    boolean DEBUG -> a
    boolean HONEYCOMB -> f
    java.util.ArrayList mPendingActions -> g
    java.lang.Runnable[] mTmpActions -> h
    boolean mExecutingActions -> i
    java.util.ArrayList mActive -> b
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mAvailIndices -> j
    java.util.ArrayList mBackStack -> k
    java.util.ArrayList mCreatedMenus -> l
    java.util.ArrayList mBackStackIndices -> m
    java.util.ArrayList mAvailBackStackIndices -> n
    int mCurState -> d
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> e
    boolean mHavePendingDeferredStart -> u
    android.os.Bundle mStateBundle -> v
    android.util.SparseArray mStateArray -> w
    java.lang.Runnable mExecCommit -> x
    android.view.animation.Interpolator DECELERATE_QUINT -> y
    android.view.animation.Interpolator DECELERATE_CUBIC -> z
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> d
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> e
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> s:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> u:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> v:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> w:
    java.lang.String mClassName -> c
    int mIndex -> d
    boolean mFromLayout -> e
    int mFragmentId -> f
    int mContainerId -> g
    java.lang.String mTag -> h
    boolean mRetainInstance -> i
    boolean mDetached -> j
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> a
    android.support.v4.app.Fragment mInstance -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> x:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> y:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> z:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> A:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> B:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> e
    int slide_in_from_bottom -> f
    int slide_in_from_top -> g
    int slide_out_to_bottom -> h
    int slide_out_to_top -> i
    int indicator_internal_padding -> j
    int indicator_right_padding -> k
    int default_ptr_flip -> l
    int default_ptr_rotate -> m
    int indicator_arrow -> n
    int indicator_bg_bottom -> o
    int indicator_bg_top -> p
    int fl_inner -> q
    int gridview -> r
    int pull_to_refresh_image -> s
    int pull_to_refresh_progress -> t
    int pull_to_refresh_sub_text -> u
    int pull_to_refresh_text -> v
    int scrollview -> w
    int webview -> x
    int pull_to_refresh_header_horizontal -> y
    int pull_to_refresh_header_vertical -> z
    int selected_view -> A
    int slidingmenumain -> B
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> a
android.support.v4.app.FragmentTransaction -> C:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> D:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl -> E:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> f
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> g
    java.lang.String mWho -> b
    android.support.v4.app.FragmentActivity mActivity -> c
    boolean mStarted -> d
    boolean mRetaining -> e
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> F:
    int mId -> a
    android.os.Bundle mArgs -> j
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCallbacks$641e715d -> b
    android.support.v4.content.Loader mLoader -> c
    boolean mHaveData -> k
    boolean mDeliveredData -> d
    java.lang.Object mData -> l
    boolean mStarted -> e
    boolean mRetaining -> f
    boolean mRetainingStarted -> g
    boolean mReportNextStart -> h
    boolean mDestroyed -> m
    boolean mListenerRegistered -> i
    void stop() -> a
    void destroy() -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> G:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> H:
android.support.v4.content.Loader -> I:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    java.lang.String toString() -> toString
android.support.v4.content.Loader$OnLoadCompleteListener -> J:
android.support.v4.os.ParcelableCompat$CompatCreator -> K:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> L:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> M:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.ArrayMap -> N:
    android.support.v4.util.MapCollections mCollections -> d
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> O:
    android.support.v4.util.ArrayMap this$0 -> d
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> P:
    int[] EMPTY_INTS -> a
    java.lang.Object[] EMPTY_OBJECTS -> b
    int idealIntArraySize(int) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.LogWriter -> Q:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> R:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> a
    android.support.v4.util.MapCollections$KeySet mKeySet -> b
    android.support.v4.util.MapCollections$ValuesCollection mValues -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> S:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> T:
    android.support.v4.util.MapCollections this$0 -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> U:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> V:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> W:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> X:
    java.lang.Object[] mBaseCache -> d
    int mBaseCacheSize -> e
    java.lang.Object[] mTwiceBaseCache -> f
    int mTwiceBaseCacheSize -> g
    int[] mHashes -> a
    java.lang.Object[] mArray -> b
    int mSize -> c
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> d
    java.lang.Object valueAt(int) -> b
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> Y:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> Z:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> b
    java.lang.Object mBridge -> c
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> aa:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> ab:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> ac:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> ad:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> ae:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> af:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> ag:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> ah:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> ai:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> aj:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> ak:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> al:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> am:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> an:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> ao:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
android.support.v4.view.MotionEventCompat -> ap:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> aq:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> ar:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> as:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> at:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> g
    int mIndicatorHeight -> h
    int mMinPaddingBottom -> i
    int mMinTextSpacing -> j
    int mMinStripHeight -> k
    int mTabPadding -> l
    android.graphics.Paint mTabPaint -> m
    android.graphics.Rect mTempRect -> n
    int mTabAlpha -> o
    boolean mDrawFullUnderline -> p
    boolean mDrawFullUnderlineSet -> q
    int mFullUnderlineHeight -> r
    boolean mIgnoreTap -> s
    float mInitialMotionX -> t
    float mInitialMotionY -> u
    int mTouchSlop -> v
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> au:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> av:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> g
    float mLastKnownPositionOffset -> h
    int mScaledTextSpacing -> e
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> f
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> aw:
    int mScrollState -> a
    android.support.v4.view.PagerTitleStrip this$0 -> b
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> ax:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> ay:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> az:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> aA:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> aB:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> aC:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> aD:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> aE:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> aF:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> aG:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> aH:
    int getOverScrollMode(android.view.View) -> b
android.support.v4.view.ViewCompat$HCViewCompatImpl -> aI:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> aJ:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> aK:
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> aL:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> aM:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$ViewCompatImpl -> aN:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> g
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> a
    long getFrameTime() -> a
android.support.v4.view.ViewConfigurationCompat -> aO:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> aP:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> aQ:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> aR:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> aS:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> aT:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> aU:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> aV:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> aW:
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> O
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> P
    boolean mFirstLayout -> Q
    boolean mCalledSuper -> R
    int mDecorChildCount -> S
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> T
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> U
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> V
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mPageTransformer$26346444 -> W
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> Z
    int mDrawingOrder -> aa
    java.util.ArrayList mDrawingOrderedChildren -> ab
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ac
    java.lang.Runnable mEndScrollRunnable -> ad
    int mScrollState -> ae
    void initViewPager() -> f
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> g
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer$382b7817(boolean,android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setPageTransformer$382b7817
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> d
    void populate(int) -> b
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> b
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> c
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> k
    boolean pageRight() -> l
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> aX:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> aY:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> aZ:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> ba:
android.support.v4.view.ViewPager$ItemInfo -> bb:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> bc:
    android.support.v4.view.ViewPager this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> bd:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> be:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> bf:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> bg:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> bh:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> bi:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> bj:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> bk:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> d
    void setFocusable(boolean) -> a
    boolean isFocused() -> e
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> f
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> g
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> h
    void setSelected(boolean) -> e
    boolean isClickable() -> i
    void setClickable(boolean) -> f
    boolean isLongClickable() -> j
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> k
    void setEnabled(boolean) -> h
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> l
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> m
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> n
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> bl:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> bm:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> bn:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> bo:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> bp:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> bq:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> br:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> bs:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> bt:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> bu:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> bv:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> bw:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> bx:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> by:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> bz:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> bA:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> bB:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> bC:
android.support.v4.widget.BakedBezierInterpolator -> bD:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> a
    float[] VALUES -> b
    float STEP_SIZE -> c
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> a
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    boolean mDismissed -> a
    java.lang.Runnable mDelayedHide -> b
    java.lang.Runnable mDelayedShow -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> bE:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> bF:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$314e12f3 -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    java.lang.CharSequence mTitleLeft -> v
    java.lang.CharSequence mTitleRight -> w
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener$1b20c458(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setDrawerListener$1b20c458
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> b
    int getDrawerViewAbsoluteGravity(android.view.View) -> c
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findDrawerWithGravity(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> g
    boolean isDrawerView(android.view.View) -> d
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> c
    void cancelChildViewTouch() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> b
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> a
    boolean access$300(android.view.View) -> f
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> bG:
    android.graphics.Rect mTmpRect -> a
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> bH:
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> bI:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> bJ:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> bK:
    int mAbsGravity -> a
    android.support.v4.widget.ViewDragHelper mDragger -> b
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> c
    void removeCallbacks() -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void closeOtherDrawer() -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> c
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> bL:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> bM:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> bN:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> bO:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> bP:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> bQ:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    int getCurrX() -> a
    int getCurrY() -> b
    void abortAnimation() -> c
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> bR:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> bS:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> bT:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> bU:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> a
    int mCoveredFadeColor -> b
    android.graphics.drawable.Drawable mShadowDrawableLeft -> c
    android.graphics.drawable.Drawable mShadowDrawableRight -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mPanelSlideListener$c9bd230 -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> u
    void setParallaxDistance(int) -> setParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    void setPanelSlideListener$14b5545(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setPanelSlideListener$14b5545
    void dispatchOnPanelOpened(android.view.View) -> a
    void dispatchOnPanelClosed(android.view.View) -> b
    void updateObscuredViewsVisibility(android.view.View) -> c
    void setAllChildrenVisible() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> e
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean isDimmed(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> b
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> bV:
    android.graphics.Rect mTmpRect -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> bW:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> bX:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
    void onEdgeDragStarted(int,int) -> a
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$SavedState -> bY:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> bZ:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> ca:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> cb:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> cc:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SwipeProgressBar -> cd:
    android.view.animation.Interpolator INTERPOLATOR -> a
    android.graphics.Paint mPaint -> b
    android.graphics.RectF mClipRect -> c
    float mTriggerPercentage -> d
    long mStartTime -> e
    long mFinishTime -> f
    boolean mRunning -> g
    int mColor1 -> h
    int mColor2 -> i
    int mColor3 -> j
    int mColor4 -> k
    android.view.View mParent -> l
    android.graphics.Rect mBounds -> m
    void setColorScheme(int,int,int,int) -> a
    void setTriggerPercentage(float) -> a
    void start() -> a
    void stop() -> b
    void draw(android.graphics.Canvas) -> a
    void drawTrigger(android.graphics.Canvas,int,int) -> a
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> a
    void setBounds(int,int,int,int) -> b
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> a
    android.support.v4.widget.SwipeProgressBar mProgressBar -> b
    android.view.View mTarget -> c
    int mOriginalOffsetTop -> d
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$615ae962 -> e
    int mFrom -> f
    boolean mRefreshing -> g
    int mTouchSlop -> h
    float mDistanceToTriggerSync -> i
    int mMediumAnimationDuration -> j
    float mFromPercentage -> k
    float mCurrPercentage -> l
    int mProgressBarHeight -> m
    int mCurrentTargetOffsetTop -> n
    float mInitialMotionY -> o
    float mLastMotionY -> p
    boolean mIsBeingDragged -> q
    int mActivePointerId -> r
    boolean mReturningToStart -> s
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> u
    int[] LAYOUT_ATTRS -> v
    android.view.animation.Animation mAnimateToStartPosition -> w
    android.view.animation.Animation mShrinkTrigger -> x
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> y
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> z
    java.lang.Runnable mReturnToStartPosition -> A
    java.lang.Runnable mCancel -> B
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnRefreshListener$200abd6d(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnRefreshListener$200abd6d
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setColorSchemeResources(int,int,int,int) -> setColorSchemeResources
    void setColorSchemeColors(int,int,int,int) -> setColorSchemeColors
    void ensureTarget() -> a
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTargetOffsetTopAndBottom(int) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> e
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> a
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> f
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> a
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> h
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> j
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> k
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> l
android.support.v4.widget.SwipeRefreshLayout$1 -> ce:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> cf:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> cg:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> ch:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> ci:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> cj:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> ck:
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.ViewDragHelper -> cl:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> d
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    void releaseViewForPointerUp() -> g
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> b
android.support.v4.widget.ViewDragHelper$1 -> cm:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> cn:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> co:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged$5b6f797d(android.view.View,int) -> a
    void onViewCaptured$5359dc9a(android.view.View) -> b
    void onViewReleased$17e2ac03(android.view.View,float) -> a
    void onEdgeTouched$255f295() -> c
    void onEdgeDragStarted(int,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> c
    boolean tryCaptureView$5359dc96(android.view.View) -> a
    int clampViewPositionHorizontal$17e143b0(android.view.View,int) -> b
    int clampViewPositionVertical$17e143b0(android.view.View) -> d
com.handmark.pulltorefresh.library.ILoadingLayout -> cp:
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.LoadingLayoutProxy -> cq:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase -> com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> j
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> k
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOnLastItemVisibleListener$4c5a67d6 -> l
    android.view.View mEmptyView -> m
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvTop -> n
    com.handmark.pulltorefresh.library.internal.IndicatorLayout mIndicatorIvBottom -> o
    boolean mShowIndicator -> p
    boolean mScrollEmptyView -> q
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> r
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnLastItemVisibleListener$35462a35(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnLastItemVisibleListener$35462a35
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setScrollEmptyView(boolean) -> setScrollEmptyView
    void setShowIndicator(boolean) -> setShowIndicator
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> n
    boolean getShowIndicatorInternal() -> o
    void removeIndicatorViews() -> p
    void updateIndicatorViewsVisibility() -> q
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> r
com.handmark.pulltorefresh.library.PullToRefreshBase -> com.handmark.pulltorefresh.library.PullToRefreshBase:
    int mTouchSlop -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    boolean mIsBeingDragged -> o
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mState -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mCurrentMode -> c
    android.view.View mRefreshableView -> d
    android.widget.FrameLayout mRefreshableViewWrapper -> e
    boolean mShowViewWhileRefreshing -> f
    boolean mScrollingWhileRefreshingEnabled -> p
    boolean mFilterTouchEvents -> q
    boolean mOverScrollEnabled -> r
    boolean mLayoutVisibilityChangesEnabled -> g
    android.view.animation.Interpolator mScrollAnimationInterpolator -> s
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> t
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLayout -> h
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLayout -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOnPullEventListener$4b6ae16a -> w
    com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy() -> n
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode() -> g
    android.view.View getRefreshableView() -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$State getState() -> i
    boolean isPullToRefreshOverScrollEnabled() -> j
    boolean isRefreshing() -> k
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> l
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> setScrollingWhileRefreshingEnabled
    void setDisableScrollingWhileRefreshing(boolean) -> setDisableScrollingWhileRefreshing
    void setFilterTouchEvents(boolean) -> setFilterTouchEvents
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setLoadingDrawable
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setMode
    void setOnPullEventListener$3c7bf85f(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnPullEventListener$3c7bf85f
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2) -> setOnRefreshListener
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setPullLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setPullLabel
    void setPullToRefreshEnabled(boolean) -> setPullToRefreshEnabled
    void setPullToRefreshOverScrollEnabled(boolean) -> setPullToRefreshOverScrollEnabled
    void setRefreshing() -> setRefreshing
    void setRefreshing(boolean) -> setRefreshing
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setRefreshingLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setReleaseLabel(java.lang.CharSequence,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> setReleaseLabel
    void setScrollAnimationInterpolator(android.view.animation.Interpolator) -> setScrollAnimationInterpolator
    void setShowViewWhileRefreshing(boolean) -> setShowViewWhileRefreshing
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]) -> setState
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> a
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> o
    void setHeaderScroll(int) -> setHeaderScroll
    void smoothScrollTo(int) -> a
    void smoothScrollTo(int,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void callRefreshListener() -> p
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> q
    int getMaximumPullScroll() -> r
    void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    android.view.animation.Interpolator access$0(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> s
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$State() -> t
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> u
    void access$4(com.handmark.pulltorefresh.library.PullToRefreshBase) -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$2 -> cr:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void run() -> run
com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle -> cs:
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle ROTATE -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle FLIP -> b
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$AnimationStyle() -> b
com.handmark.pulltorefresh.library.PullToRefreshBase$Mode -> ct:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode DISABLED -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_START -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode PULL_FROM_END -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode BOTH -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> e
    int mIntValue -> f
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] ENUM$VALUES -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int) -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault() -> a
    boolean permitsPullToRefresh() -> b
    boolean showHeaderLoadingLayout() -> c
    boolean showFooterLoadingLayout() -> d
    int getIntValue() -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values() -> f
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener -> cu:
    void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase) -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener2 -> cv:
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener -> cw:
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation -> cx:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation VERTICAL -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation HORIZONTAL -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] ENUM$VALUES -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable -> cy:
    android.view.animation.Interpolator mInterpolator -> a
    int mScrollToY -> b
    int mScrollFromY -> c
    long mDuration -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> e
    boolean mContinueRunning -> f
    long mStartTime -> g
    int mCurrentY -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase this$0 -> i
    void run() -> run
    void stop() -> a
com.handmark.pulltorefresh.library.PullToRefreshBase$State -> cz:
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RESET -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State PULL_TO_REFRESH -> b
    com.handmark.pulltorefresh.library.PullToRefreshBase$State RELEASE_TO_REFRESH -> c
    com.handmark.pulltorefresh.library.PullToRefreshBase$State REFRESHING -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$State MANUAL_REFRESHING -> e
    com.handmark.pulltorefresh.library.PullToRefreshBase$State OVERSCROLLING -> f
    int mIntValue -> g
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] ENUM$VALUES -> h
    com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int) -> a
    int getIntValue() -> a
    com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values() -> b
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView -> com.handmark.pulltorefresh.library.PullToRefreshExpandableListView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListView -> cA:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshExpandableListView$InternalExpandableListViewSDK9 -> cB:
    com.handmark.pulltorefresh.library.PullToRefreshExpandableListView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshGridView -> com.handmark.pulltorefresh.library.PullToRefreshGridView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridView -> cC:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> a
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshGridView$InternalGridViewSDK9 -> cD:
    com.handmark.pulltorefresh.library.PullToRefreshGridView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView -> com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView$InternalHorizontalScrollViewSDK9 -> cE:
    com.handmark.pulltorefresh.library.PullToRefreshHorizontalScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshListView -> com.handmark.pulltorefresh.library.PullToRefreshListView:
    com.handmark.pulltorefresh.library.internal.LoadingLayout mHeaderLoadingView -> j
    com.handmark.pulltorefresh.library.internal.LoadingLayout mFooterLoadingView -> k
    android.widget.FrameLayout mLvFooterLoadingFrame -> l
    boolean mListViewExtrasEnabled -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> n
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    void onRefreshing(boolean) -> a
    void onReset() -> c
    com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> a
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> n
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView -> com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView:
    boolean mAddedLvFooter -> a
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> b
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 -> cF:
    com.handmark.pulltorefresh.library.PullToRefreshListView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshScrollView -> com.handmark.pulltorefresh.library.PullToRefreshScrollView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshScrollView$CustomScrollView -> cG:
    android.view.GestureDetector mGestureDetector -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.handmark.pulltorefresh.library.PullToRefreshScrollView$CustomScrollView$YScrollDetector -> cH:
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
com.handmark.pulltorefresh.library.PullToRefreshScrollView$InternalScrollViewSDK9 -> cI:
    com.handmark.pulltorefresh.library.PullToRefreshScrollView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.PullToRefreshWebView -> com.handmark.pulltorefresh.library.PullToRefreshWebView:
    com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener defaultOnRefreshListener -> j
    android.webkit.WebChromeClient defaultWebChromeClient -> k
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> m
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
com.handmark.pulltorefresh.library.PullToRefreshWebView$2 -> cJ:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.handmark.pulltorefresh.library.PullToRefreshWebView$InternalWebViewSDK9 -> cK:
    com.handmark.pulltorefresh.library.PullToRefreshWebView this$0 -> a
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.handmark.pulltorefresh.library.R$styleable -> cL:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_ptrAdapterViewBackground -> PullToRefresh_ptrAdapterViewBackground
    int PullToRefresh_ptrAnimationStyle -> PullToRefresh_ptrAnimationStyle
    int PullToRefresh_ptrDrawable -> PullToRefresh_ptrDrawable
    int PullToRefresh_ptrDrawableBottom -> PullToRefresh_ptrDrawableBottom
    int PullToRefresh_ptrDrawableEnd -> PullToRefresh_ptrDrawableEnd
    int PullToRefresh_ptrDrawableStart -> PullToRefresh_ptrDrawableStart
    int PullToRefresh_ptrDrawableTop -> PullToRefresh_ptrDrawableTop
    int PullToRefresh_ptrHeaderBackground -> PullToRefresh_ptrHeaderBackground
    int PullToRefresh_ptrHeaderSubTextColor -> PullToRefresh_ptrHeaderSubTextColor
    int PullToRefresh_ptrHeaderTextAppearance -> PullToRefresh_ptrHeaderTextAppearance
    int PullToRefresh_ptrHeaderTextColor -> PullToRefresh_ptrHeaderTextColor
    int PullToRefresh_ptrListViewExtrasEnabled -> PullToRefresh_ptrListViewExtrasEnabled
    int PullToRefresh_ptrMode -> PullToRefresh_ptrMode
    int PullToRefresh_ptrOverScroll -> PullToRefresh_ptrOverScroll
    int PullToRefresh_ptrRefreshableViewBackground -> PullToRefresh_ptrRefreshableViewBackground
    int PullToRefresh_ptrRotateDrawableWhilePulling -> PullToRefresh_ptrRotateDrawableWhilePulling
    int PullToRefresh_ptrScrollingWhileRefreshingEnabled -> PullToRefresh_ptrScrollingWhileRefreshingEnabled
    int PullToRefresh_ptrShowIndicator -> PullToRefresh_ptrShowIndicator
    int PullToRefresh_ptrSubHeaderTextAppearance -> PullToRefresh_ptrSubHeaderTextAppearance
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2 -> com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2:
    com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback mJsCallback -> j
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullDown -> k
    java.util.concurrent.atomic.AtomicBoolean mIsReadyForPullUp -> l
    android.webkit.WebView createRefreshableView(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
com.handmark.pulltorefresh.library.extras.PullToRefreshWebView2$JsValueCallback -> cM:
com.handmark.pulltorefresh.library.internal.EmptyViewMethodAccessor -> cN:
    void setEmptyViewInternal(android.view.View) -> setEmptyViewInternal
com.handmark.pulltorefresh.library.internal.FlipLoadingLayout -> com.handmark.pulltorefresh.library.internal.FlipLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> h
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> m
com.handmark.pulltorefresh.library.internal.IndicatorLayout -> com.handmark.pulltorefresh.library.internal.IndicatorLayout:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> f
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> f
com.handmark.pulltorefresh.library.internal.LoadingLayout -> com.handmark.pulltorefresh.library.internal.LoadingLayout:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mMode -> d
    com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode -> n
    void setHeight(int) -> setHeight
    void setWidth(int) -> setWidth
    int getContentSize() -> f
    void hideAllViews() -> g
    void onPull(float) -> b
    void pullToRefresh() -> h
    void refreshing() -> i
    void releaseToRefresh() -> j
    void reset() -> k
    void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    void setPullLabel(java.lang.CharSequence) -> setPullLabel
    void setRefreshingLabel(java.lang.CharSequence) -> setRefreshingLabel
    void setReleaseLabel(java.lang.CharSequence) -> setReleaseLabel
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    void showInvisibleViews() -> l
    int getDefaultDrawableResId() -> e
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Orientation() -> m
    int[] $SWITCH_TABLE$com$handmark$pulltorefresh$library$PullToRefreshBase$Mode() -> n
com.handmark.pulltorefresh.library.internal.RotateLoadingLayout -> com.handmark.pulltorefresh.library.internal.RotateLoadingLayout:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> e
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove:
    android.view.animation.Interpolator sInterpolator -> a
    android.view.View mContent -> b
    int mCurItem -> c
    android.widget.Scroller mScroller -> d
    boolean mScrollingCacheEnabled -> e
    boolean mScrolling -> f
    boolean mIsBeingDragged -> g
    boolean mIsUnableToDrag -> h
    int mTouchSlop -> i
    float mInitialMotionX -> j
    float mLastMotionX -> k
    float mLastMotionY -> l
    int mActivePointerId -> m
    android.view.VelocityTracker mVelocityTracker -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mFlingDistance -> q
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> r
    boolean mEnabled -> s
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> t
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> u
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mClosedListener$2617e245 -> v
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOpenedListener$2011c35e -> w
    java.util.List mIgnoredViews -> x
    int mTouchMode -> y
    boolean mQuickReturn -> z
    float mScrollX -> A
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> a
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener$176cd553(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenedListener$176cd553
    void setOnClosedListener$4ae9f390(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnClosedListener$4ae9f390
    int getDestScrollX(int) -> a
    boolean isMenuOpen() -> d
    int getBehindWidth() -> e
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> b
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> b
    void completeScroll() -> f
    void setTouchMode(int) -> setTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> a
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> b
    void scrollTo(int,int) -> scrollTo
    float getPercentOpen() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> c
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> c
    boolean pageRight() -> h
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> cO:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> cP:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> cQ:
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> cR:
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind:
    int mTouchMode -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mTransformer$22a29405 -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    float mFadeDegree -> k
    android.graphics.Paint mFadePaint -> l
    float mScrollScale -> m
    android.graphics.drawable.Drawable mShadowDrawable -> n
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> o
    int mShadowWidth -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer$213e88a0(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setCanvasTransformer$213e88a0
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getBehindWidth() -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> b
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> c
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    void setScrollScale(float) -> setScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> d
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.R$styleable -> cS:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mOpenListener$7800629d -> d
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mCloseListener$51d99f2f -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> a
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> b
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> c
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setMode(int) -> setMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> d
    void showMenu(boolean) -> a
    void showSecondaryMenu(boolean) -> b
    void showContent() -> e
    void showContent(boolean) -> c
    boolean isMenuShowing() -> f
    boolean isSecondaryMenuShowing() -> g
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindCanvasTransformer$213e88a0(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setBehindCanvasTransformer$213e88a0
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener$3052752e(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenListener$3052752e
    void setOnCloseListener$4ce1fc6c(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnCloseListener$4ce1fc6c
    void setOnOpenedListener$176cd553(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnOpenedListener$176cd553
    void setOnClosedListener$4ae9f390(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnClosedListener$4ae9f390
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$0$4a653a8a(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$1$3874688a(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> b
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> cT:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageSelected(int) -> a
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$2 -> cU:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> a
    int val$layerType -> b
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> cV:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> cW:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> cX:
    android.app.Activity mActivity -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> f
    boolean mEnableSlide -> e
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> cY:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> a
    boolean val$open -> b
    boolean val$secondary -> c
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity -> cZ:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> d
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.loopj.android.http.AsyncHttpClient -> da:
    int maxConnections -> b
    int timeout -> c
    org.apache.http.impl.client.DefaultHttpClient httpClient -> d
    org.apache.http.protocol.HttpContext httpContext -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Map requestMap -> g
    java.util.Map clientHeaderMap -> a
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest$ff13561(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
    void silentCloseInputStream(java.io.InputStream) -> a
    void silentCloseOutputStream(java.io.OutputStream) -> a
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    void endEntityViaReflection(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpClient$1 -> db:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> dc:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> dd:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> de:
    java.io.InputStream wrappedStream -> a
    java.io.PushbackInputStream pushbackStream -> b
    java.util.zip.GZIPInputStream gzippedStream -> c
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> df:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> d
    int executionCount -> e
    boolean isCancelled -> f
    boolean cancelIsNotified -> g
    boolean isFinished -> h
    void run() -> run
    boolean isCancelled() -> a
    boolean isDone() -> b
com.loopj.android.http.AsyncHttpResponseHandler -> dg:
    java.lang.String responseCharset -> a
    android.os.Handler handler -> c
    boolean useSynchronousMode -> b
    boolean getUseSynchronousMode() -> a
    void setUseSynchronousMode(boolean) -> a
    java.lang.String getCharset() -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    void sendProgressMessage(int,int) -> a
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void sendRetryMessage(int) -> a
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    void postRunnable(java.lang.Runnable) -> a
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    byte[] getResponseData(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> dh:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64$Coder -> di:
    byte[] output -> a
    int op -> b
com.loopj.android.http.Base64$Decoder -> dj:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
com.loopj.android.http.FileAsyncHttpResponseHandler -> dk:
    java.io.File mFile -> c
com.loopj.android.http.JsonHttpResponseHandler -> dl:
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    java.lang.Object parseResponse(byte[]) -> a
com.loopj.android.http.JsonHttpResponseHandler$1 -> dm:
    byte[] val$responseBytes -> d
    int val$statusCode -> a
    org.apache.http.Header[] val$headers -> b
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> c
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> dn:
    java.lang.Object val$jsonResponse -> a
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> do:
    org.json.JSONException val$ex -> a
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> dp:
    byte[] val$responseBytes -> e
    int val$statusCode -> a
    org.apache.http.Header[] val$headers -> b
    java.lang.Throwable val$throwable -> c
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> d
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> dq:
    java.lang.Object val$jsonResponse -> a
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> b
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> dr:
    org.json.JSONException val$ex -> a
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> b
    void run() -> run
com.loopj.android.http.MySSLSocketFactory -> ds:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.security.KeyStore getKeystore() -> b
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> a
com.loopj.android.http.MySSLSocketFactory$1 -> dt:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> du:
    long current -> d
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> a
com.loopj.android.http.RequestHandle -> dv:
    java.lang.ref.WeakReference request -> a
com.loopj.android.http.RequestParams -> dw:
    java.util.concurrent.ConcurrentHashMap urlParams -> a
    java.util.concurrent.ConcurrentHashMap streamParams -> b
    java.util.concurrent.ConcurrentHashMap fileParams -> c
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> d
    java.lang.String contentEncoding -> e
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> a
    org.apache.http.HttpEntity createFormEntity() -> a
    java.util.List getParamsList() -> b
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> b
com.loopj.android.http.RequestParams$FileWrapper -> dx:
    java.io.File file -> a
    java.lang.String contentType -> b
com.loopj.android.http.RequestParams$StreamWrapper -> dy:
    java.io.InputStream inputStream -> a
    java.lang.String name -> b
    java.lang.String contentType -> c
com.loopj.android.http.ResponseHandlerInterface -> dz:
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void sendStartMessage() -> c
    void sendFinishMessage() -> d
    void sendProgressMessage(int,int) -> a
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void sendRetryMessage(int) -> a
    void setUseSynchronousMode(boolean) -> a
    boolean getUseSynchronousMode() -> a
com.loopj.android.http.RetryHandler -> dA:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    int retrySleepTimeMS -> d
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.loopj.android.http.SimpleMultipartEntity -> dB:
    byte[] CR_LF -> a
    byte[] TRANSFER_ENCODING_BINARY -> b
    char[] MULTIPART_CHARS -> c
    java.lang.String boundary -> d
    byte[] boundaryLine -> e
    byte[] boundaryEnd -> f
    boolean isRepeatable -> g
    java.util.List fileParts -> h
    java.io.ByteArrayOutputStream out -> i
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> j
    int bytesWritten -> k
    int totalSize -> l
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> a
    void addPart(java.lang.String,java.io.File,java.lang.String) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> a
    java.lang.String normalizeContentType(java.lang.String) -> a
    byte[] createContentType(java.lang.String) -> b
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> a
    void updateProgress(int) -> a
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> a
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> a
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> a
    byte[] access$300() -> a
    byte[] access$400() -> b
com.loopj.android.http.SimpleMultipartEntity$FilePart -> dC:
    java.io.File file -> a
    byte[] header -> b
    com.loopj.android.http.SimpleMultipartEntity this$0 -> c
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> a
com.loopj.android.http.SyncHttpClient -> dD:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
com.loopj.android.http.TextHttpResponseHandler -> dE:
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
    java.lang.String getResponseString(byte[],java.lang.String) -> a
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> dF:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.weibo.sdk.BuildConfig -> com.sina.weibo.sdk.BuildConfig:
    boolean DEBUG -> DEBUG
com.sina.weibo.sdk.R -> com.sina.weibo.sdk.R:
com.sina.weibo.sdk.R$color -> com.sina.weibo.sdk.R$color:
    int com_sina_weibo_sdk_blue -> com_sina_weibo_sdk_blue
    int com_sina_weibo_sdk_loginview_text_color -> com_sina_weibo_sdk_loginview_text_color
com.sina.weibo.sdk.R$dimen -> com.sina.weibo.sdk.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int com_sina_weibo_sdk_loginview_compound_drawable_padding -> com_sina_weibo_sdk_loginview_compound_drawable_padding
    int com_sina_weibo_sdk_loginview_padding -> com_sina_weibo_sdk_loginview_padding
    int com_sina_weibo_sdk_loginview_padding_bottom -> com_sina_weibo_sdk_loginview_padding_bottom
    int com_sina_weibo_sdk_loginview_padding_left -> com_sina_weibo_sdk_loginview_padding_left
    int com_sina_weibo_sdk_loginview_padding_right -> com_sina_weibo_sdk_loginview_padding_right
    int com_sina_weibo_sdk_loginview_padding_top -> com_sina_weibo_sdk_loginview_padding_top
    int com_sina_weibo_sdk_loginview_text_size -> com_sina_weibo_sdk_loginview_text_size
com.sina.weibo.sdk.R$drawable -> com.sina.weibo.sdk.R$drawable:
    int com_sina_weibo_sdk_button_blue -> com_sina_weibo_sdk_button_blue
    int com_sina_weibo_sdk_button_grey -> com_sina_weibo_sdk_button_grey
    int com_sina_weibo_sdk_login_button_with_account_text -> com_sina_weibo_sdk_login_button_with_account_text
    int com_sina_weibo_sdk_login_button_with_frame_logo -> com_sina_weibo_sdk_login_button_with_frame_logo
    int com_sina_weibo_sdk_login_button_with_original_logo -> com_sina_weibo_sdk_login_button_with_original_logo
    int ic_com_sina_weibo_sdk_button_blue_focused -> ic_com_sina_weibo_sdk_button_blue_focused
    int ic_com_sina_weibo_sdk_button_blue_normal -> ic_com_sina_weibo_sdk_button_blue_normal
    int ic_com_sina_weibo_sdk_button_blue_pressed -> ic_com_sina_weibo_sdk_button_blue_pressed
    int ic_com_sina_weibo_sdk_button_grey_focused -> ic_com_sina_weibo_sdk_button_grey_focused
    int ic_com_sina_weibo_sdk_button_grey_normal -> ic_com_sina_weibo_sdk_button_grey_normal
    int ic_com_sina_weibo_sdk_button_grey_pressed -> ic_com_sina_weibo_sdk_button_grey_pressed
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_focused
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_normal
    int ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed -> ic_com_sina_weibo_sdk_login_button_with_frame_logo_pressed
    int ic_com_sina_weibo_sdk_login_with_account_text_focused -> ic_com_sina_weibo_sdk_login_with_account_text_focused
    int ic_com_sina_weibo_sdk_login_with_account_text_normal -> ic_com_sina_weibo_sdk_login_with_account_text_normal
    int ic_com_sina_weibo_sdk_login_with_account_text_pressed -> ic_com_sina_weibo_sdk_login_with_account_text_pressed
    int ic_com_sina_weibo_sdk_login_with_text -> ic_com_sina_weibo_sdk_login_with_text
    int ic_com_sina_weibo_sdk_logo -> ic_com_sina_weibo_sdk_logo
com.sina.weibo.sdk.R$string -> com.sina.weibo.sdk.R$string:
    int com_sina_weibo_sdk_login -> com_sina_weibo_sdk_login
    int com_sina_weibo_sdk_login_with_weibo_account -> com_sina_weibo_sdk_login_with_weibo_account
    int com_sina_weibo_sdk_logout -> com_sina_weibo_sdk_logout
com.sina.weibo.sdk.R$style -> com.sina.weibo.sdk.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int com_sina_weibo_sdk_loginview_default_style -> com_sina_weibo_sdk_loginview_default_style
    int com_sina_weibo_sdk_loginview_silver_style -> com_sina_weibo_sdk_loginview_silver_style
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    int MEDIA_TYPE_TEXT -> MEDIA_TYPE_TEXT
    int MEDIA_TYPE_IMAGE -> MEDIA_TYPE_IMAGE
    int MEDIA_TYPE_MUSIC -> MEDIA_TYPE_MUSIC
    int MEDIA_TYPE_VIDEO -> MEDIA_TYPE_VIDEO
    int MEDIA_TYPE_WEBPAGE -> MEDIA_TYPE_WEBPAGE
    int MEDIA_TYPE_VOICE -> MEDIA_TYPE_VOICE
    int MEDIA_TYPE_CMD -> MEDIA_TYPE_CMD
    java.lang.String actionUrl -> actionUrl
    java.lang.String schema -> schema
    java.lang.String identify -> identify
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getObjType() -> getObjType
    boolean checkArgs() -> checkArgs
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> cmd
    java.lang.String CMD_HOME -> CMD_HOME
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.CmdObject$1 -> dG:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> setImageObject
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.ImageObject$1 -> dH:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.MusicObject$1 -> dI:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> text
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.TextObject$1 -> dJ:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.VideoObject$1 -> dK:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.VoiceObject$1 -> dL:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> a
    java.lang.String toExtraMediaString() -> a
com.sina.weibo.sdk.api.WebpageObject$1 -> dM:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> com.sina.weibo.sdk.api.WeiboMessage:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.WeiboMultiMessage:
    com.sina.weibo.sdk.api.TextObject textObject -> textObject
    com.sina.weibo.sdk.api.ImageObject imageObject -> imageObject
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMultiMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.share.ApiUtils -> com.sina.weibo.sdk.api.share.ApiUtils:
    int BUILD_INT -> BUILD_INT
    int BUILD_INT_VER_2_2 -> BUILD_INT_VER_2_2
    int BUILD_INT_VER_2_3 -> BUILD_INT_VER_2_3
    int BUILD_INT_VER_2_5 -> BUILD_INT_VER_2_5
    android.net.Uri WEIBO_NAME_URI -> a
    boolean isWeiboAppSupportAPI(int) -> isWeiboAppSupportAPI
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByPackage(android.content.Context,java.lang.String) -> queryWeiboInfoByPackage
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfo(android.content.Context) -> queryWeiboInfo
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> validateWeiboSign
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> a
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo queryWeiboInfoByAsset(android.content.Context,java.lang.String) -> a
com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo -> com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo:
    java.lang.String packageName -> packageName
    int supportApi -> supportApi
    java.lang.String toString() -> toString
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.share.Base:
    java.lang.String transaction -> transaction
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.share.BaseRequest:
    java.lang.String packageName -> packageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.share.BaseResponse:
    int errCode -> errCode
    java.lang.String errMsg -> errMsg
    java.lang.String reqPackageName -> reqPackageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.share.IWeiboDownloadListener:
    void onCancel() -> onCancel
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.share.IWeiboHandler:
com.sina.weibo.sdk.api.share.IWeiboHandler$Request -> com.sina.weibo.sdk.api.share.IWeiboHandler$Request:
    void onRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> onRequest
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.share.IWeiboHandler$Response:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.share.IWeiboShareAPI:
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> a
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.share.VersionCheckHandler:
    java.lang.String mPackageName -> a
    void setPackageName(java.lang.String) -> setPackageName
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMessage) -> check
    boolean check(android.content.Context,com.sina.weibo.sdk.api.WeiboMultiMessage) -> check
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.share.WeiboDownloader:
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> createDownloadConfirmDialog
    void access$0(android.content.Context) -> a
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> dN:
    android.content.Context val$context -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> dO:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> dP:
    android.content.Context mContext -> a
    java.lang.String mAppKey -> b
    com.sina.weibo.sdk.api.share.ApiUtils$WeiboInfo mWeiboInfo -> c
    boolean mNeedDownloadWeibo -> d
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> e
    android.app.Dialog mDownloadConfirmDialog -> f
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo() -> launchWeibo
    boolean sendRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> a
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.share.WeiboShareSDK:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> createWeiboAPI
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> createWeiboAPI
com.sina.weibo.sdk.auth.Oauth2AccessToken -> com.sina.weibo.sdk.auth.Oauth2AccessToken:
    java.lang.String mUid -> a
    java.lang.String mAccessToken -> b
    java.lang.String mRefreshToken -> c
    long mExpiresTime -> d
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(java.lang.String) -> parseAccessToken
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> parseAccessToken
    boolean isSessionValid() -> isSessionValid
    android.os.Bundle toBundle() -> toBundle
    java.lang.String toString() -> toString
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getRefreshToken() -> getRefreshToken
    void setRefreshToken(java.lang.String) -> setRefreshToken
    long getExpiresTime() -> getExpiresTime
    void setExpiresTime(long) -> setExpiresTime
    void setExpiresIn(java.lang.String) -> setExpiresIn
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.WeiboAuth -> com.sina.weibo.sdk.auth.WeiboAuth:
    java.lang.String TAG -> TAG
    int OBTAIN_AUTH_CODE -> OBTAIN_AUTH_CODE
    int OBTAIN_AUTH_TOKEN -> OBTAIN_AUTH_TOKEN
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo getAuthInfo() -> getAuthInfo
    void setAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> setAuthInfo
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> anthorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> authorize
com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo -> com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo:
    java.lang.String mAppKey -> a
    java.lang.String mRedirectUrl -> b
    java.lang.String mScope -> c
    java.lang.String mPackageName -> d
    java.lang.String mKeyHash -> e
    android.os.Bundle mBundle -> f
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getRedirectUrl() -> getRedirectUrl
    java.lang.String getScope() -> getScope
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getKeyHash() -> getKeyHash
    android.os.Bundle getAuthBundle() -> getAuthBundle
    java.lang.String access$0(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> a
    java.lang.String access$1(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> b
    java.lang.String access$2(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> c
    java.lang.String access$3(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> d
    java.lang.String access$4(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo) -> e
com.sina.weibo.sdk.auth.WeiboAuthListener -> com.sina.weibo.sdk.auth.WeiboAuthListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onCancel() -> onCancel
com.sina.weibo.sdk.auth.WeiboDialog -> com.sina.weibo.sdk.auth.WeiboDialog:
    android.content.Context mContext -> a
    android.widget.RelativeLayout mRootContainer -> b
    android.widget.RelativeLayout mWebViewContainer -> c
    android.app.ProgressDialog mLoadingDlg -> d
    android.webkit.WebView mWebView -> e
    boolean mIsDetached -> f
    java.lang.String mAuthUrl -> g
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> h
    com.sina.weibo.sdk.auth.WeiboAuth mWeibo -> i
    int theme -> j
    void onBackPressed() -> onBackPressed
    void dismiss() -> dismiss
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onCreate(android.os.Bundle) -> onCreate
    com.sina.weibo.sdk.auth.WeiboAuthListener access$0(com.sina.weibo.sdk.auth.WeiboDialog) -> a
    com.sina.weibo.sdk.auth.WeiboAuth access$1(com.sina.weibo.sdk.auth.WeiboDialog) -> b
    void access$2(com.sina.weibo.sdk.auth.WeiboDialog,java.lang.String) -> a
    boolean access$3(com.sina.weibo.sdk.auth.WeiboDialog) -> c
    android.app.ProgressDialog access$4(com.sina.weibo.sdk.auth.WeiboDialog) -> d
    android.webkit.WebView access$5(com.sina.weibo.sdk.auth.WeiboDialog) -> e
com.sina.weibo.sdk.auth.WeiboDialog$1 -> dQ:
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.auth.WeiboDialog$WeiboWebViewClient -> dR:
    boolean isCallBacked -> a
    com.sina.weibo.sdk.auth.WeiboDialog this$0 -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.sina.weibo.sdk.auth.sso.SsoHandler -> com.sina.weibo.sdk.auth.sso.SsoHandler:
    com.sina.weibo.sdk.auth.WeiboAuth mWeiboAuth -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> b
    android.app.Activity mAuthActivity -> c
    int mSSOAuthRequestCode -> d
    android.content.ServiceConnection mConnection -> e
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorize(int,com.sina.weibo.sdk.auth.WeiboAuthListener,java.lang.String) -> authorize
    void authorizeCallBack(int,int,android.content.Intent) -> authorizeCallBack
    android.content.ComponentName isServiceExisted(android.content.Context,java.lang.String) -> isServiceExisted
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> a
    com.sina.weibo.sdk.auth.WeiboAuth access$0(com.sina.weibo.sdk.auth.sso.SsoHandler) -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener access$1(com.sina.weibo.sdk.auth.sso.SsoHandler) -> b
    android.app.Activity access$2(com.sina.weibo.sdk.auth.sso.SsoHandler) -> c
    android.content.ServiceConnection access$3(com.sina.weibo.sdk.auth.sso.SsoHandler) -> d
    boolean access$4(com.sina.weibo.sdk.auth.sso.SsoHandler,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> dS:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.codestyle.CodingRuler -> com.sina.weibo.sdk.codestyle.CodingRuler:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    void doSomething(int,float,java.lang.String) -> doSomething
com.sina.weibo.sdk.codestyle.SampleCode -> com.sina.weibo.sdk.codestyle.SampleCode:
    java.lang.String ACTION_MAIN -> ACTION_MAIN
    void doSomething(int,float,java.lang.String) -> doSomething
com.sina.weibo.sdk.constant.WBAuthErrorCode -> com.sina.weibo.sdk.constant.WBAuthErrorCode:
    int redirect_uri_mismatch -> redirect_uri_mismatch
    int invalid_request -> invalid_request
    int invalid_client -> invalid_client
    int invalid_grant -> invalid_grant
    int unauthorized_client -> unauthorized_client
    int expired_token -> expired_token
    int unsupported_grant_type -> unsupported_grant_type
    int unsupported_response_type -> unsupported_response_type
    int access_denied -> access_denied
    int temporarily_unavailable -> temporarily_unavailable
    int appkey_permission_denied -> appkey_permission_denied
com.sina.weibo.sdk.constant.WBConstants -> com.sina.weibo.sdk.constant.WBConstants:
    java.lang.String AUTH_PARAMS_CLIENT_ID -> AUTH_PARAMS_CLIENT_ID
    java.lang.String AUTH_PARAMS_RESPONSE_TYPE -> AUTH_PARAMS_RESPONSE_TYPE
    java.lang.String AUTH_PARAMS_REDIRECT_URL -> AUTH_PARAMS_REDIRECT_URL
    java.lang.String AUTH_PARAMS_DISPLAY -> AUTH_PARAMS_DISPLAY
    java.lang.String AUTH_PARAMS_SCOPE -> AUTH_PARAMS_SCOPE
    java.lang.String AUTH_PARAMS_PACKAGE_NAME -> AUTH_PARAMS_PACKAGE_NAME
    java.lang.String AUTH_PARAMS_KEY_HASH -> AUTH_PARAMS_KEY_HASH
    java.lang.String AUTH_PARAMS_CLIENT_SECRET -> AUTH_PARAMS_CLIENT_SECRET
    java.lang.String AUTH_PARAMS_GRANT_TYPE -> AUTH_PARAMS_GRANT_TYPE
    java.lang.String AUTH_PARAMS_CODE -> AUTH_PARAMS_CODE
    java.lang.String AUTH_ACCESS_TOKEN -> AUTH_ACCESS_TOKEN
    java.lang.String SSO_APP_KEY -> SSO_APP_KEY
    java.lang.String SSO_REDIRECT_URL -> SSO_REDIRECT_URL
    java.lang.String SSO_USER_SCOPE -> SSO_USER_SCOPE
    java.lang.String SSO_PACKAGE_NAME -> SSO_PACKAGE_NAME
    java.lang.String SSO_KEY_HASH -> SSO_KEY_HASH
    int WEIBO_SDK_VERSION -> WEIBO_SDK_VERSION
    java.lang.String WEIBO_SDK_VERSION_NAME -> WEIBO_SDK_VERSION_NAME
    java.lang.String ACTION_WEIBO_REGISTER -> ACTION_WEIBO_REGISTER
    java.lang.String ACTION_WEIBO_RESPONSE -> ACTION_WEIBO_RESPONSE
    java.lang.String ACTION_WEIBO_SDK_PERMISSION -> ACTION_WEIBO_SDK_PERMISSION
    java.lang.String ACTIVITY_WEIBO -> ACTIVITY_WEIBO
    java.lang.String ACTIVITY_REQ_SDK -> ACTIVITY_REQ_SDK
    java.lang.String ACTIVITY_RESP_SDK -> ACTIVITY_RESP_SDK
    java.lang.String ACTIVITY_WEIBO_PAY -> ACTIVITY_WEIBO_PAY
    java.lang.String ACTIVITY_WEIBO_PAY_REQ -> ACTIVITY_WEIBO_PAY_REQ
    int SDK_ACTIVITY_FOR_RESULT_CODE -> SDK_ACTIVITY_FOR_RESULT_CODE
    java.lang.String WEIBO_DOWNLOAD_URL -> WEIBO_DOWNLOAD_URL
    int COMMAND_TO_WEIBO -> COMMAND_TO_WEIBO
    int COMMAND_FROM_WEIBO -> COMMAND_FROM_WEIBO
    int COMMAND_SSO -> COMMAND_SSO
    int COMMAND_PAY -> COMMAND_PAY
    java.lang.String COMMAND_TYPE_KEY -> COMMAND_TYPE_KEY
    java.lang.String TRAN -> TRAN
    java.lang.String SIGN -> SIGN
    int WEIBO_FLAG_SDK -> WEIBO_FLAG_SDK
com.sina.weibo.sdk.constant.WBConstants$Base -> com.sina.weibo.sdk.constant.WBConstants$Base:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String APP_PKG -> APP_PKG
    java.lang.String APP_KEY -> APP_KEY
com.sina.weibo.sdk.constant.WBConstants$ErrorCode -> com.sina.weibo.sdk.constant.WBConstants$ErrorCode:
    int ERR_OK -> ERR_OK
    int ERR_CANCEL -> ERR_CANCEL
    int ERR_FAIL -> ERR_FAIL
com.sina.weibo.sdk.constant.WBConstants$Media -> com.sina.weibo.sdk.constant.WBConstants$Media:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String TITLE -> TITLE
    java.lang.String DESC -> DESC
    java.lang.String THUMB_DATA -> THUMB_DATA
    java.lang.String URL -> URL
com.sina.weibo.sdk.constant.WBConstants$Msg -> com.sina.weibo.sdk.constant.WBConstants$Msg:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE -> IMAGE
    java.lang.String MEDIA -> MEDIA
    java.lang.String TEXT_EXTRA -> TEXT_EXTRA
    java.lang.String IMAGE_EXTRA -> IMAGE_EXTRA
    java.lang.String MEDIA_EXTRA -> MEDIA_EXTRA
    java.lang.String IDENTIFY -> IDENTIFY
com.sina.weibo.sdk.constant.WBConstants$Response -> com.sina.weibo.sdk.constant.WBConstants$Response:
    java.lang.String ERRCODE -> ERRCODE
    java.lang.String ERRMSG -> ERRMSG
com.sina.weibo.sdk.constant.WBConstants$SDK -> com.sina.weibo.sdk.constant.WBConstants$SDK:
    java.lang.String FLAG -> FLAG
com.sina.weibo.sdk.exception.WeiboAuthException -> com.sina.weibo.sdk.exception.WeiboAuthException:
    java.lang.String DEFAULT_AUTH_ERROR_CODE -> DEFAULT_AUTH_ERROR_CODE
    java.lang.String DEFAULT_AUTH_ERROR_DESC -> DEFAULT_AUTH_ERROR_DESC
    java.lang.String DEFAULT_AUTH_ERROR_TYPE -> DEFAULT_AUTH_ERROR_TYPE
    java.lang.String mErrorType -> a
    java.lang.String mErrorCode -> b
    java.lang.String getErrorType() -> getErrorType
    java.lang.String getErrorCode() -> getErrorCode
com.sina.weibo.sdk.exception.WeiboDialogException -> com.sina.weibo.sdk.exception.WeiboDialogException:
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
    int getErrorCode() -> getErrorCode
    java.lang.String getFailingUrl() -> getFailingUrl
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.exception.WeiboException:
com.sina.weibo.sdk.exception.WeiboHttpException -> com.sina.weibo.sdk.exception.WeiboHttpException:
    int mStatusCode -> a
    int getStatusCode() -> getStatusCode
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.exception.WeiboShareException:
com.sina.weibo.sdk.net.AsyncWeiboRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner:
    void requestByThread(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestByThread
    java.lang.String request(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> request
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
com.sina.weibo.sdk.net.AsyncWeiboRunner$1 -> dT:
    java.lang.String val$url -> a
    java.lang.String val$httpMethod -> b
    com.sina.weibo.sdk.net.WeiboParameters val$params -> c
    com.sina.weibo.sdk.net.RequestListener val$listener -> d
    void run() -> run
com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult -> dU:
    java.lang.Object result -> a
    com.sina.weibo.sdk.exception.WeiboException error -> b
com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner -> dV:
    java.lang.String mUrl -> a
    com.sina.weibo.sdk.net.WeiboParameters mParams -> b
    java.lang.String mHttpMethod -> c
    com.sina.weibo.sdk.net.RequestListener mListener -> d
    com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult doInBackground$1798769c() -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sina.weibo.sdk.net.HttpManager -> dW:
    java.lang.String BOUNDARY -> a
    java.lang.String MP_BOUNDARY -> b
    java.lang.String END_MP_BOUNDARY -> c
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> d
    java.lang.String openUrl(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> a
    org.apache.http.HttpResponse requestHttpExecute(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> b
    org.apache.http.client.HttpClient getNewHttpClient() -> a
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> a
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> a
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> b
com.sina.weibo.sdk.net.HttpManager$MySSLSocketFactory -> dX:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.sina.weibo.sdk.net.NetStateManager -> com.sina.weibo.sdk.net.NetStateManager:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.net.NetStateManager$NetState CUR_NETSTATE -> CUR_NETSTATE
    org.apache.http.HttpHost getAPN() -> getAPN
    void access$0(android.content.Context) -> a
com.sina.weibo.sdk.net.NetStateManager$NetState -> com.sina.weibo.sdk.net.NetStateManager$NetState:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> Mobile
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> WIFI
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> NOWAY
    com.sina.weibo.sdk.net.NetStateManager$NetState[] ENUM$VALUES -> a
    com.sina.weibo.sdk.net.NetStateManager$NetState[] values() -> values
    com.sina.weibo.sdk.net.NetStateManager$NetState valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.net.NetStateManager$NetStateReceive -> com.sina.weibo.sdk.net.NetStateManager$NetStateReceive:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sina.weibo.sdk.net.RequestListener -> com.sina.weibo.sdk.net.RequestListener:
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.net.WeiboParameters -> com.sina.weibo.sdk.net.WeiboParameters:
    java.util.LinkedHashMap mParams -> a
    java.util.LinkedHashMap getParams() -> getParams
    void setParams(java.util.LinkedHashMap) -> setParams
    void add(java.lang.String,java.lang.String) -> add
    void add(java.lang.String,int) -> add
    void add(java.lang.String,long) -> add
    void add(java.lang.String,java.lang.Object) -> add
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,android.graphics.Bitmap) -> put
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.lang.String) -> containsValue
    int size() -> size
    java.lang.String encodeUrl() -> encodeUrl
    boolean hasBinaryData() -> hasBinaryData
com.sina.weibo.sdk.openapi.AbsOpenAPI -> com.sina.weibo.sdk.openapi.AbsOpenAPI:
    java.lang.String TAG -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> b
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> a
    java.lang.String requestSync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> a
com.sina.weibo.sdk.openapi.CommentsAPI -> com.sina.weibo.sdk.openapi.CommentsAPI:
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    android.util.SparseArray sAPIList -> a
    void show(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> show
    void byME(long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> byME
    void toME(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> toME
    void timeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void mentions(long,long,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void showBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> showBatch
    void create(java.lang.String,long,boolean,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void reply(long,long,java.lang.String,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> reply
    java.lang.String showSync(long,long,long,int,int,int) -> showSync
    java.lang.String byMESync(long,long,int,int,int) -> byMESync
    java.lang.String toMESync(long,long,int,int,int,int) -> toMESync
    java.lang.String timelineSync(long,long,int,int,boolean) -> timelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int) -> mentionsSync
    java.lang.String showBatchSync(long[]) -> showBatchSync
    java.lang.String createSync(java.lang.String,long,boolean) -> createSync
    java.lang.String destroySync(long) -> destroySync
    java.lang.String destroyBatchSync(long[]) -> destroyBatchSync
    java.lang.String replySync(long,long,java.lang.String,boolean,boolean) -> replySync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildShowOrDestoryBatchParams(long[]) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildCreateParams(java.lang.String,long,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildReplyParams(long,long,java.lang.String,boolean,boolean) -> a
com.sina.weibo.sdk.openapi.InviteAPI -> com.sina.weibo.sdk.openapi.InviteAPI:
    java.lang.String TAG -> a
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_URL -> KEY_URL
    java.lang.String KEY_INVITE_LOGO -> KEY_INVITE_LOGO
    void sendInvite(java.lang.String,org.json.JSONObject,com.sina.weibo.sdk.net.RequestListener) -> sendInvite
com.sina.weibo.sdk.openapi.LogoutAPI -> com.sina.weibo.sdk.openapi.LogoutAPI:
    void logout(com.sina.weibo.sdk.net.RequestListener) -> logout
com.sina.weibo.sdk.openapi.StatusesAPI -> com.sina.weibo.sdk.openapi.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    android.util.SparseArray sAPIList -> a
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    java.lang.String friendsTimelineSync(long,long,int,int,boolean,int,boolean) -> friendsTimelineSync
    java.lang.String mentionsSync(long,long,int,int,int,int,int,boolean) -> mentionsSync
    java.lang.String updateSync(java.lang.String,java.lang.String,java.lang.String) -> updateSync
    java.lang.String uploadSync(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String) -> uploadSync
    java.lang.String uploadUrlTextSync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> uploadUrlTextSync
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int,boolean,boolean,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildMentionsParams(long,long,int,int,int,int,int,boolean) -> a
com.sina.weibo.sdk.openapi.UsersAPI -> com.sina.weibo.sdk.openapi.UsersAPI:
    android.util.SparseArray sAPIList -> a
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void domainShow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> domainShow
    void counts(long[],com.sina.weibo.sdk.net.RequestListener) -> counts
    java.lang.String showSync(long) -> showSync
    java.lang.String showSync(java.lang.String) -> showSync
    java.lang.String domainShowSync(java.lang.String) -> domainShowSync
    java.lang.String countsSync(long[]) -> countsSync
    com.sina.weibo.sdk.net.WeiboParameters buildCountsParams(long[]) -> a
com.sina.weibo.sdk.openapi.legacy.AccountAPI -> com.sina.weibo.sdk.openapi.legacy.AccountAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    void getPrivacy(com.sina.weibo.sdk.net.RequestListener) -> getPrivacy
    void schoolList(int,int,int,int,com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> schoolList
    void rateLimitStatus(com.sina.weibo.sdk.net.RequestListener) -> rateLimitStatus
    void getUid(com.sina.weibo.sdk.net.RequestListener) -> getUid
    void endSession(com.sina.weibo.sdk.net.RequestListener) -> endSession
com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL A -> A
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL B -> B
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL C -> C
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL D -> D
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL E -> E
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL F -> F
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL G -> G
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL H -> H
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL I -> I
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL J -> J
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL K -> K
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL L -> L
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL M -> M
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL N -> N
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL O -> O
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL P -> P
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Q -> Q
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL R -> R
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL S -> S
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL T -> T
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL U -> U
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL V -> V
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL W -> W
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL X -> X
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Y -> Y
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL Z -> Z
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] ENUM$VALUES -> a
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.AccountAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI -> com.sina.weibo.sdk.openapi.legacy.ActivityInvokeAPI:
    void openSendWeibo(android.app.Activity,java.lang.String) -> openSendWeibo
    void openSendWeibo(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> openSendWeibo
    void openNearbyPeople(android.app.Activity) -> openNearbyPeople
    void openNearbyWeibo(android.app.Activity) -> openNearbyWeibo
    void openUserInfoByNickName(android.app.Activity,java.lang.String) -> openUserInfoByNickName
    void openUserInfoByUid(android.app.Activity,java.lang.String) -> openUserInfoByUid
    void openWeiboBrowser(android.app.Activity,java.lang.String) -> openWeiboBrowser
    void openWeibo(android.app.Activity) -> openWeibo
    void openShake(android.app.Activity) -> openShake
    void openContact(android.app.Activity) -> openContact
    void openUserTrends(android.app.Activity,java.lang.String) -> openUserTrends
    void openMessageListByUid(android.app.Activity,java.lang.String) -> openMessageListByUid
    void openMessageListByNickName(android.app.Activity,java.lang.String) -> openMessageListByNickName
    void openDetail(android.app.Activity,java.lang.String) -> openDetail
com.sina.weibo.sdk.openapi.legacy.CommonAPI -> com.sina.weibo.sdk.openapi.legacy.CommonAPI:
    java.lang.String LANGUAGE_ZH_CN -> LANGUAGE_ZH_CN
    java.lang.String LANGUAGE_ZH_TW -> LANGUAGE_ZH_TW
    java.lang.String LANGUAGE_EN -> LANGUAGE_EN
    void getCity(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCity
    void getCountry(com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getCountry
    void getTimezone(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> getTimezone
com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL -> com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL:
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL a -> a
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL b -> b
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL c -> c
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL d -> d
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL e -> e
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL f -> f
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL g -> g
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL h -> h
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL i -> i
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL j -> j
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL k -> k
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL l -> l
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL m -> m
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL n -> n
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL o -> o
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL p -> p
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL q -> q
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL r -> r
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL s -> s
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL t -> t
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL u -> u
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL v -> v
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL w -> w
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL x -> x
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL y -> y
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL z -> z
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] ENUM$VALUES -> A
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.CommonAPI$CAPITAL valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.FavoritesAPI -> com.sina.weibo.sdk.openapi.legacy.FavoritesAPI:
    void favorites(int,int,com.sina.weibo.sdk.net.RequestListener) -> favorites
    void ids(int,int,com.sina.weibo.sdk.net.RequestListener) -> ids
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void byTags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTags
    void tags(int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void byTagsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> byTagsIds
    void create(long,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(long[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
    void tagsUpdate(long,java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsUpdate
    void tagsUpdateBatch(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> tagsUpdateBatch
    void tagsDestroyBatch(long,com.sina.weibo.sdk.net.RequestListener) -> tagsDestroyBatch
    com.sina.weibo.sdk.net.WeiboParameters buildCountPage(int,int) -> a
com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI -> com.sina.weibo.sdk.openapi.legacy.FriendshipsAPI:
    void friends(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void friends(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friends
    void inCommon(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> inCommon
    void bilateral(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateral
    void bilateralIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> bilateralIds
    void friendsIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void friendsIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> friendsIds
    void followers(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> followers
    void followersIds(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersIds(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> followersIds
    void followersActive(long,int,com.sina.weibo.sdk.net.RequestListener) -> followersActive
    void chainFollowers(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> chainFollowers
    void show(long,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> show
    void show(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> show
    void create(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void create(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroy(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> destroy
    com.sina.weibo.sdk.net.WeiboParameters buildFriendsParam(int,int,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildFriendIDParam(long,int) -> a
com.sina.weibo.sdk.openapi.legacy.GroupAPI -> com.sina.weibo.sdk.openapi.legacy.GroupAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    void groups(com.sina.weibo.sdk.net.RequestListener) -> groups
    void timeline(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> timeline
    void timelineIds() -> timelineIds
    void members(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> members
    void membersIds() -> membersIds
    void memberDescriptionPatch() -> memberDescriptionPatch
    void isMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> isMember
    void listed() -> listed
    void showGroup(long,com.sina.weibo.sdk.net.RequestListener) -> showGroup
    void showGroupBatch(java.lang.String,long,com.sina.weibo.sdk.net.RequestListener) -> showGroupBatch
    void create(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> create
    void update(long,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void deleteGroup(long,com.sina.weibo.sdk.net.RequestListener) -> deleteGroup
    void addMember(long,long,com.sina.weibo.sdk.net.RequestListener) -> addMember
    void addMemberBatch(long,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> addMemberBatch
    void updateMembers(long,long,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> updateMembers
    void deleteMembers(long,long,com.sina.weibo.sdk.net.RequestListener) -> deleteMembers
    void order(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> order
    com.sina.weibo.sdk.net.WeiboParameters buildeMembersParams(long,long) -> a
com.sina.weibo.sdk.openapi.legacy.LocationAPI -> com.sina.weibo.sdk.openapi.legacy.LocationAPI:
    android.util.SparseArray sAPIList -> a
    void gps2Offset(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> gps2Offset
    void searchPoisByGeo(java.lang.Double,java.lang.Double,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> searchPoisByGeo
    void geo2Address(java.lang.Double,java.lang.Double,com.sina.weibo.sdk.net.RequestListener) -> geo2Address
    java.lang.String gps2OffsetSync(java.lang.Double,java.lang.Double) -> gps2OffsetSync
    java.lang.String searchPoisByGeoSync(java.lang.Double,java.lang.Double,java.lang.String) -> searchPoisByGeoSync
    java.lang.String geo2AddressSync(java.lang.Double,java.lang.Double) -> geo2AddressSync
    com.sina.weibo.sdk.net.WeiboParameters buildGPS2OffsetParams(java.lang.Double,java.lang.Double) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildSerarPoiByGeoParmas(java.lang.Double,java.lang.Double,java.lang.String) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildGeo2AddressParam(java.lang.Double,java.lang.Double) -> b
com.sina.weibo.sdk.openapi.legacy.PlaceAPI -> com.sina.weibo.sdk.openapi.legacy.PlaceAPI:
    int SORT_BY_TIME -> SORT_BY_TIME
    int SORT_BY_DISTENCE -> SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_WEIGHT -> NEARBY_POIS_SORT_BY_WEIGHT
    int NEARBY_POIS_SORT_BY_DISTENCE -> NEARBY_POIS_SORT_BY_DISTENCE
    int NEARBY_POIS_SORT_BY_CHECKIN_NUMBER -> NEARBY_POIS_SORT_BY_CHECKIN_NUMBER
    int POIS_SORT_BY_TIME -> POIS_SORT_BY_TIME
    int POIS_SORT_BY_HOT -> POIS_SORT_BY_HOT
    int RELATIONSHIP_FILTER_ALL -> RELATIONSHIP_FILTER_ALL
    int RELATIONSHIP_FILTER_STRANGER -> RELATIONSHIP_FILTER_STRANGER
    int RELATIONSHIP_FILTER_FOLLOW -> RELATIONSHIP_FILTER_FOLLOW
    int GENDER_ALL -> GENDER_ALL
    int GENDER_MAN -> GENDER_MAN
    int GENDER_WOMAM -> GENDER_WOMAM
    int USER_LEVEL_ALL -> USER_LEVEL_ALL
    int USER_LEVEL_NORMAL -> USER_LEVEL_NORMAL
    int USER_LEVEL_VIP -> USER_LEVEL_VIP
    int USER_LEVEL_STAR -> USER_LEVEL_STAR
    int NEARBY_USER_SORT_BY_TIME -> NEARBY_USER_SORT_BY_TIME
    int NEARBY_USER_SORT_BY_DISTANCE -> NEARBY_USER_SORT_BY_DISTANCE
    int NEARBY_USER_SORT_BY_SOCIAL_SHIP -> NEARBY_USER_SORT_BY_SOCIAL_SHIP
    void pulicTimeline(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> pulicTimeline
    void friendsTimeline(long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void userTimeline(long,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void poiTimeline(java.lang.String,long,long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poiTimeline
    void nearbyTimeline(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyTimeline
    void statusesShow(long,com.sina.weibo.sdk.net.RequestListener) -> statusesShow
    void usersShow(long,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersShow
    void usersCheckins(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersCheckins
    void usersPhotos(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersPhotos
    void usersTips(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTips
    void usersTodo(long,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> usersTodo
    void poisShow(java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisShow
    void poisUsers(java.lang.String,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisUsers
    void poisPhotos(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisPhotos
    void poisTips(java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisTips
    void poisSearch(java.lang.String,java.lang.String,java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> poisSearch
    void poisCategory(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisCategory
    void nearbyPois(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPois
    void nearbyUsers(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsers
    void nearbyPhotos(java.lang.String,java.lang.String,int,long,long,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyPhotos
    void nearbyUserList(java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> nearbyUserList
    void poisCreate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> poisCreate
    void poisAddCheckin(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddCheckin
    void poisAddPhoto(java.lang.String,java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddPhoto
    void poisAddTip(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTip
    void poisAddTodo(java.lang.String,java.lang.String,boolean,com.sina.weibo.sdk.net.RequestListener) -> poisAddTodo
    void nearbyUsersCreate(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersCreate
    void nearbyUsersDestroy(com.sina.weibo.sdk.net.RequestListener) -> nearbyUsersDestroy
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineParamsBase(long,long,int,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildUserParams(long,int,int,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildNearbyParams(java.lang.String,java.lang.String,int,int,int,int,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildPoiis(java.lang.String,java.lang.String,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildPoisParams(java.lang.String,int,int,boolean) -> a
com.sina.weibo.sdk.openapi.legacy.RegisterAPI -> com.sina.weibo.sdk.openapi.legacy.RegisterAPI:
    void suggestions(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> suggestions
com.sina.weibo.sdk.openapi.legacy.SearchAPI -> com.sina.weibo.sdk.openapi.legacy.SearchAPI:
    int SCHOOL_TYPE_COLLEGE -> SCHOOL_TYPE_COLLEGE
    int SCHOOL_TYPE_SENIOR -> SCHOOL_TYPE_SENIOR
    int SCHOOL_TYPE_TECHNICAL -> SCHOOL_TYPE_TECHNICAL
    int SCHOOL_TYPE_JUNIOR -> SCHOOL_TYPE_JUNIOR
    int SCHOOL_TYPE_PRIMARY -> SCHOOL_TYPE_PRIMARY
    int FRIEND_TYPE_ATTENTIONS -> FRIEND_TYPE_ATTENTIONS
    int FRIEND_TYPE_FELLOWS -> FRIEND_TYPE_FELLOWS
    int RANGE_ATTENTIONS -> RANGE_ATTENTIONS
    int RANGE_ATTENTION_TAGS -> RANGE_ATTENTION_TAGS
    int RANGE_ALL -> RANGE_ALL
    void users(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> users
    void statuses(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> statuses
    void schools(java.lang.String,int,int,com.sina.weibo.sdk.net.RequestListener) -> schools
    void companies(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> companies
    void apps(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> apps
    void atUsers(java.lang.String,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> atUsers
    com.sina.weibo.sdk.net.WeiboParameters buildBaseParams(java.lang.String,int) -> a
com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI -> com.sina.weibo.sdk.openapi.legacy.ShortUrlAPI:
    void shorten(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shorten
    void expand(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> expand
    java.lang.String expandSync(java.lang.String[]) -> expandSync
    void clicks(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> clicks
    void referers(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> referers
    void locations(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> locations
    void shareCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> shareCounts
    void shareStatuses(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> shareStatuses
    void commentCounts(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> commentCounts
    void comments(java.lang.String,long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> comments
    com.sina.weibo.sdk.net.WeiboParameters buildRequestParams(java.lang.String,long,long,int,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildURLRequest(java.lang.String[],java.lang.String) -> a
com.sina.weibo.sdk.openapi.legacy.StatusesAPI -> com.sina.weibo.sdk.openapi.legacy.StatusesAPI:
    int FEATURE_ALL -> FEATURE_ALL
    int FEATURE_ORIGINAL -> FEATURE_ORIGINAL
    int FEATURE_PICTURE -> FEATURE_PICTURE
    int FEATURE_VIDEO -> FEATURE_VIDEO
    int FEATURE_MUSICE -> FEATURE_MUSICE
    int AUTHOR_FILTER_ALL -> AUTHOR_FILTER_ALL
    int AUTHOR_FILTER_ATTENTIONS -> AUTHOR_FILTER_ATTENTIONS
    int AUTHOR_FILTER_STRANGER -> AUTHOR_FILTER_STRANGER
    int SRC_FILTER_ALL -> SRC_FILTER_ALL
    int SRC_FILTER_WEIBO -> SRC_FILTER_WEIBO
    int SRC_FILTER_WEIQUN -> SRC_FILTER_WEIQUN
    int TYPE_FILTER_ALL -> TYPE_FILTER_ALL
    int TYPE_FILTER_ORIGAL -> TYPE_FILTER_ORIGAL
    int TYPE_STATUSES -> TYPE_STATUSES
    int TYPE_COMMENTS -> TYPE_COMMENTS
    int TYPE_MESSAGE -> TYPE_MESSAGE
    int COMMENTS_NONE -> COMMENTS_NONE
    int COMMENTS_CUR_STATUSES -> COMMENTS_CUR_STATUSES
    int COMMENTS_RIGAL_STATUSES -> COMMENTS_RIGAL_STATUSES
    int COMMENTS_BOTH -> COMMENTS_BOTH
    java.lang.String EMOTION_TYPE_FACE -> EMOTION_TYPE_FACE
    java.lang.String EMOTION_TYPE_ANI -> EMOTION_TYPE_ANI
    java.lang.String EMOTION_TYPE_CARTOON -> EMOTION_TYPE_CARTOON
    java.lang.String LANGUAGE_CNNAME -> LANGUAGE_CNNAME
    java.lang.String LANGUAGE_TWNAME -> LANGUAGE_TWNAME
    void publicTimeline(int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> publicTimeline
    void friendsTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> friendsTimeline
    void friendsTimelineIds(long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> friendsTimelineIds
    void homeTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> homeTimeline
    void userTimeline(long,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(java.lang.String,long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> userTimeline
    void userTimelineIds(long,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void userTimelineIds(java.lang.String,long,long,int,int,boolean,int,com.sina.weibo.sdk.net.RequestListener) -> userTimelineIds
    void repostTimeline(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimeline
    void repostTimelineIds(long,long,long,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostTimelineIds
    void repostByMe(long,long,int,int,com.sina.weibo.sdk.net.RequestListener) -> repostByMe
    void mentions(long,long,int,int,int,int,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> mentions
    void mentionsIds(long,long,int,int,int,int,int,com.sina.weibo.sdk.net.RequestListener) -> mentionsIds
    void bilateralTimeline(long,long,int,int,boolean,int,boolean,com.sina.weibo.sdk.net.RequestListener) -> bilateralTimeline
    void show(long,com.sina.weibo.sdk.net.RequestListener) -> show
    void queryMID(long[],int,com.sina.weibo.sdk.net.RequestListener) -> queryMID
    void queryID(java.lang.String[],int,boolean,boolean,com.sina.weibo.sdk.net.RequestListener) -> queryID
    void hotRepostDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostDaily
    void hotRepostWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotRepostWeekly
    void hotCommentsDaily(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsDaily
    void hotCommentsWeekly(int,boolean,com.sina.weibo.sdk.net.RequestListener) -> hotCommentsWeekly
    void count(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> count
    void repost(long,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> repost
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void uploadUrlText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> uploadUrlText
    void emotions(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> emotions
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineBase(long,long,int,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithApp(long,long,int,int,boolean,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildTimeLineWithAppTrim(long,long,int,int,boolean,boolean,int) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildHotParams(int,boolean) -> a
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> a
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI:
    void usersHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY,com.sina.weibo.sdk.net.RequestListener) -> usersHot
    void mayInterested(int,int,com.sina.weibo.sdk.net.RequestListener) -> mayInterested
    void byStatus(java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> byStatus
    void statusesHot(com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE,boolean,int,int,com.sina.weibo.sdk.net.RequestListener) -> statusesHot
    void favoritesHot(int,int,com.sina.weibo.sdk.net.RequestListener) -> favoritesHot
    void notInterested(long,com.sina.weibo.sdk.net.RequestListener) -> notInterested
    com.sina.weibo.sdk.net.WeiboParameters builderCountPage(int,int) -> a
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE ENTERTAINMENT -> ENTERTAINMENT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FUNNY -> FUNNY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE BEAUTY -> BEAUTY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE VIDEO -> VIDEO
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CONSTELLATION -> CONSTELLATION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE LOVELY -> LOVELY
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE FASHION -> FASHION
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CARS -> CARS
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE CATE -> CATE
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE MUSIC -> MUSIC
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] ENUM$VALUES -> a
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$STATUSES_TYPE valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY -> com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY:
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY DEFAULT -> DEFAULT
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY ent -> ent
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY hk_famous -> hk_famous
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY model -> model
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY cooking -> cooking
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY sports -> sports
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY finance -> finance
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY tech -> tech
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY singer -> singer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY writer -> writer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY moderator -> moderator
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY medium -> medium
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY stockplayer -> stockplayer
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] ENUM$VALUES -> a
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY[] values() -> values
    com.sina.weibo.sdk.openapi.legacy.SuggestionsAPI$USER_CATEGORY valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.openapi.legacy.TagsAPI -> com.sina.weibo.sdk.openapi.legacy.TagsAPI:
    void tags(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> tags
    void tagsBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> tagsBatch
    void suggestions(int,com.sina.weibo.sdk.net.RequestListener) -> suggestions
    void create(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> create
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
    void destroyBatch(java.lang.String[],com.sina.weibo.sdk.net.RequestListener) -> destroyBatch
com.sina.weibo.sdk.openapi.legacy.TrendsAPI -> com.sina.weibo.sdk.openapi.legacy.TrendsAPI:
    void trends(long,int,int,com.sina.weibo.sdk.net.RequestListener) -> trends
    void isFollow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> isFollow
    void hourly(boolean,com.sina.weibo.sdk.net.RequestListener) -> hourly
    void daily(boolean,com.sina.weibo.sdk.net.RequestListener) -> daily
    void weekly(boolean,com.sina.weibo.sdk.net.RequestListener) -> weekly
    void follow(java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> follow
    void destroy(long,com.sina.weibo.sdk.net.RequestListener) -> destroy
com.sina.weibo.sdk.openapi.models.AbsDataObject -> com.sina.weibo.sdk.openapi.models.AbsDataObject:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Comment -> com.sina.weibo.sdk.openapi.models.Comment:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String text -> text
    java.lang.String source -> source
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    com.sina.weibo.sdk.openapi.models.Status status -> status
    com.sina.weibo.sdk.openapi.models.Comment reply_comment -> reply_comment
    com.sina.weibo.sdk.openapi.models.Comment parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.CommentList -> com.sina.weibo.sdk.openapi.models.CommentList:
    java.util.ArrayList commentList -> commentList
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.CommentList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Coordinate -> com.sina.weibo.sdk.openapi.models.Coordinate:
    java.lang.Double Longtitude -> Longtitude
    java.lang.Double Latitude -> Latitude
    com.sina.weibo.sdk.openapi.models.Coordinate parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.ErrorInfo -> com.sina.weibo.sdk.openapi.models.ErrorInfo:
    java.lang.String error -> error
    java.lang.String error_code -> error_code
    java.lang.String request -> request
    com.sina.weibo.sdk.openapi.models.ErrorInfo parse(java.lang.String) -> parse
    java.lang.String toString() -> toString
com.sina.weibo.sdk.openapi.models.Favorite -> com.sina.weibo.sdk.openapi.models.Favorite:
    com.sina.weibo.sdk.openapi.models.Status status -> status
    java.util.ArrayList tags -> tags
    java.lang.String favorited_time -> favorited_time
    com.sina.weibo.sdk.openapi.models.Favorite parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Favorite parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.FavoriteList -> com.sina.weibo.sdk.openapi.models.FavoriteList:
    java.util.ArrayList favoriteList -> favoriteList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.FavoriteList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Geo -> com.sina.weibo.sdk.openapi.models.Geo:
    java.lang.String longitude -> longitude
    java.lang.String latitude -> latitude
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String city_name -> city_name
    java.lang.String province_name -> province_name
    java.lang.String address -> address
    java.lang.String pinyin -> pinyin
    java.lang.String more -> more
    com.sina.weibo.sdk.openapi.models.Geo parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Geo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GeoList -> com.sina.weibo.sdk.openapi.models.GeoList:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.GeoList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Group -> com.sina.weibo.sdk.openapi.models.Group:
    java.lang.String GROUP_ID_ALL -> GROUP_ID_ALL
    java.lang.String id -> id
    java.lang.String idStr -> idStr
    java.lang.String name -> name
    java.lang.String mode -> mode
    int visible -> visible
    int like_count -> like_count
    int member_count -> member_count
    java.lang.String description -> description
    java.util.ArrayList tags -> tags
    java.lang.String profile_image_url -> profile_image_url
    com.sina.weibo.sdk.openapi.models.User user -> user
    java.lang.String createAtTime -> createAtTime
    com.sina.weibo.sdk.openapi.models.Group parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.GroupList -> com.sina.weibo.sdk.openapi.models.GroupList:
    java.util.ArrayList groupList -> groupList
    int total_number -> total_number
    com.sina.weibo.sdk.openapi.models.GroupList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.GroupTag -> com.sina.weibo.sdk.openapi.models.GroupTag:
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.GroupTag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.IParseable -> com.sina.weibo.sdk.openapi.models.IParseable:
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.MusicInfo -> com.sina.weibo.sdk.openapi.models.MusicInfo:
    java.lang.String author -> author
    java.lang.String title -> title
    java.lang.String album -> album
    java.lang.String playUrl -> playUrl
    com.sina.weibo.sdk.openapi.models.MusicInfo parser(java.lang.String) -> parser
    com.sina.weibo.sdk.openapi.models.MusicInfo parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.OffsetGeo -> com.sina.weibo.sdk.openapi.models.OffsetGeo:
    java.util.ArrayList Geos -> Geos
    com.sina.weibo.sdk.openapi.models.OffsetGeo parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Poi -> com.sina.weibo.sdk.openapi.models.Poi:
    java.lang.String poiid -> poiid
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String lon -> lon
    java.lang.String lat -> lat
    java.lang.String category -> category
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String country -> country
    java.lang.String url -> url
    java.lang.String phone -> phone
    java.lang.String postcode -> postcode
    java.lang.String weibo_id -> weibo_id
    java.lang.String categorys -> categorys
    java.lang.String category_name -> category_name
    java.lang.String icon -> icon
    java.lang.String checkin_num -> checkin_num
    java.lang.String checkin_user_num -> checkin_user_num
    java.lang.String tip_num -> tip_num
    java.lang.String photo_num -> photo_num
    java.lang.String todo_num -> todo_num
    java.lang.String distance -> distance
    com.sina.weibo.sdk.openapi.models.Poi parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Poi parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.PoiList -> com.sina.weibo.sdk.openapi.models.PoiList:
    java.util.ArrayList pois -> pois
    java.lang.String totalNumber -> totalNumber
    com.sina.weibo.sdk.openapi.models.PoiList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Privacy -> com.sina.weibo.sdk.openapi.models.Privacy:
com.sina.weibo.sdk.openapi.models.Remind -> com.sina.weibo.sdk.openapi.models.Remind:
com.sina.weibo.sdk.openapi.models.Status -> com.sina.weibo.sdk.openapi.models.Status:
    java.lang.String created_at -> created_at
    java.lang.String id -> id
    java.lang.String mid -> mid
    java.lang.String idstr -> idstr
    java.lang.String text -> text
    java.lang.String source -> source
    boolean favorited -> favorited
    boolean truncated -> truncated
    java.lang.String in_reply_to_status_id -> in_reply_to_status_id
    java.lang.String in_reply_to_user_id -> in_reply_to_user_id
    java.lang.String in_reply_to_screen_name -> in_reply_to_screen_name
    java.lang.String thumbnail_pic -> thumbnail_pic
    java.lang.String bmiddle_pic -> bmiddle_pic
    java.lang.String original_pic -> original_pic
    com.sina.weibo.sdk.openapi.models.Geo geo -> geo
    com.sina.weibo.sdk.openapi.models.User user -> user
    com.sina.weibo.sdk.openapi.models.Status retweeted_status -> retweeted_status
    int reposts_count -> reposts_count
    int comments_count -> comments_count
    int attitudes_count -> attitudes_count
    int mlevel -> mlevel
    com.sina.weibo.sdk.openapi.models.Visible visible -> visible
    java.util.ArrayList pic_urls -> pic_urls
    com.sina.weibo.sdk.openapi.models.Status parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.Status parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.StatusList -> com.sina.weibo.sdk.openapi.models.StatusList:
    java.util.ArrayList statusList -> statusList
    com.sina.weibo.sdk.openapi.models.Status statuses -> statuses
    boolean hasvisible -> hasvisible
    java.lang.String previous_cursor -> previous_cursor
    java.lang.String next_cursor -> next_cursor
    int total_number -> total_number
    java.lang.Object[] advertises -> advertises
    com.sina.weibo.sdk.openapi.models.StatusList parse(java.lang.String) -> parse
com.sina.weibo.sdk.openapi.models.Tag -> com.sina.weibo.sdk.openapi.models.Tag:
    int id -> id
    java.lang.String tag -> tag
    com.sina.weibo.sdk.openapi.models.Tag parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.User -> com.sina.weibo.sdk.openapi.models.User:
    java.lang.String id -> id
    java.lang.String idstr -> idstr
    java.lang.String screen_name -> screen_name
    java.lang.String name -> name
    int province -> province
    int city -> city
    java.lang.String location -> location
    java.lang.String description -> description
    java.lang.String url -> url
    java.lang.String profile_image_url -> profile_image_url
    java.lang.String profile_url -> profile_url
    java.lang.String domain -> domain
    java.lang.String weihao -> weihao
    java.lang.String gender -> gender
    int followers_count -> followers_count
    int friends_count -> friends_count
    int statuses_count -> statuses_count
    int favourites_count -> favourites_count
    java.lang.String created_at -> created_at
    boolean following -> following
    boolean allow_all_act_msg -> allow_all_act_msg
    boolean geo_enabled -> geo_enabled
    boolean verified -> verified
    int verified_type -> verified_type
    java.lang.String remark -> remark
    com.sina.weibo.sdk.openapi.models.Status status -> status
    boolean allow_all_comment -> allow_all_comment
    java.lang.String avatar_large -> avatar_large
    java.lang.String avatar_hd -> avatar_hd
    java.lang.String verified_reason -> verified_reason
    boolean follow_me -> follow_me
    int online_status -> online_status
    int bi_followers_count -> bi_followers_count
    java.lang.String lang -> lang
    java.lang.String star -> star
    java.lang.String mbtype -> mbtype
    java.lang.String mbrank -> mbrank
    java.lang.String block_word -> block_word
    com.sina.weibo.sdk.openapi.models.User parse(java.lang.String) -> parse
    com.sina.weibo.sdk.openapi.models.User parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.openapi.models.Visible -> com.sina.weibo.sdk.openapi.models.Visible:
    int VISIBLE_NORMAL -> VISIBLE_NORMAL
    int VISIBLE_PRIVACY -> VISIBLE_PRIVACY
    int VISIBLE_GROUPED -> VISIBLE_GROUPED
    int VISIBLE_FRIEND -> VISIBLE_FRIEND
    int type -> type
    int list_id -> list_id
    com.sina.weibo.sdk.openapi.models.Visible parse(org.json.JSONObject) -> parse
com.sina.weibo.sdk.utils.BitmapHelper -> com.sina.weibo.sdk.utils.BitmapHelper:
    boolean makesureSizeNotTooLarge(android.graphics.Rect) -> makesureSizeNotTooLarge
    int getSampleSizeOfNotTooLarge(android.graphics.Rect) -> getSampleSizeOfNotTooLarge
    int getSampleSizeAutoFitToScreen(int,int,int,int) -> getSampleSizeAutoFitToScreen
    boolean verifyBitmap(byte[]) -> verifyBitmap
    boolean verifyBitmap(java.io.InputStream) -> verifyBitmap
    boolean verifyBitmap(java.lang.String) -> verifyBitmap
com.sina.weibo.sdk.utils.ImageUtils -> com.sina.weibo.sdk.utils.ImageUtils:
    void revitionImageSize(java.lang.String,int,int) -> a
    boolean revitionPostImageSize(android.content.Context,java.lang.String) -> revitionPostImageSize
    android.graphics.Bitmap safeDecodeBimtapFile(java.lang.String,android.graphics.BitmapFactory$Options) -> a
    boolean deleteDependon(java.lang.String) -> a
    boolean isFileExisted(java.lang.String) -> b
    void makesureFileExist(java.lang.String) -> c
    boolean isWifi(android.content.Context) -> isWifi
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.utils.LogUtil:
    boolean sIsLogEnable -> a
    void enableLog() -> enableLog
    void disableLog() -> disableLog
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    java.lang.String getStackTraceMsg() -> getStackTraceMsg
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.utils.MD5:
    char[] hexDigits -> a
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String hexdigest(byte[]) -> hexdigest
    void main(java.lang.String[]) -> main
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.utils.NetworkHelper:
    boolean hasInternetPermission(android.content.Context) -> hasInternetPermission
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isWifiValid(android.content.Context) -> isWifiValid
    boolean isMobileNetwork(android.content.Context) -> isMobileNetwork
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> getActiveNetworkInfo
    android.net.NetworkInfo getNetworkInfo(android.content.Context,int) -> getNetworkInfo
    int getNetworkType(android.content.Context) -> getNetworkType
    int getWifiState(android.content.Context) -> getWifiState
    android.net.NetworkInfo$DetailedState getWifiConnectivityState(android.content.Context) -> getWifiConnectivityState
    boolean wifiConnection(android.content.Context,java.lang.String,java.lang.String) -> wifiConnection
    void clearCookies(android.content.Context,java.lang.String) -> clearCookies
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.utils.ResourceManager:
    java.lang.String TAG -> a
    int dimen_dialog_left_margin -> dimen_dialog_left_margin
    int dimen_dialog_top_margin -> dimen_dialog_top_margin
    int dimen_dialog_right_margin -> dimen_dialog_right_margin
    int dimen_dialog_bottom_margin -> dimen_dialog_bottom_margin
    int DIALOG_LEFT_MARGIN -> DIALOG_LEFT_MARGIN
    int DIALOG_TOP_MARGIN -> DIALOG_TOP_MARGIN
    int DIALOG_RIGHT_MARGIN -> DIALOG_RIGHT_MARGIN
    int DIALOG_BOTTOM_MARGIN -> DIALOG_BOTTOM_MARGIN
    android.util.SparseIntArray sLayoutMap -> b
    int drawable_dialog_background -> drawable_dialog_background
    int drawable_dialog_close_button -> drawable_dialog_close_button
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> c
    android.util.SparseArray sDrawableMap -> d
    int string_loading -> string_loading
    int string_network_not_available -> string_network_not_available
    java.util.HashMap sLanguageMap -> e
    java.lang.String getString(android.content.Context,int) -> getString
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,int) -> getNinePatchDrawable
    int getDimensionPixelSize(int) -> getDimensionPixelSize
    java.util.Locale getLanguage() -> getLanguage
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> getAppropriatePathOfDrawable
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> getDrawableFromAssert
    boolean isFileExisted(android.content.Context,java.lang.String) -> a
com.sina.weibo.sdk.utils.SecurityHelper -> com.sina.weibo.sdk.utils.SecurityHelper:
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> validateAppSignatureForIntent
    boolean checkResponseAppLegal(android.content.Context,android.content.Intent) -> checkResponseAppLegal
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
com.sina.weibo.sdk.utils.UIUtils -> com.sina.weibo.sdk.utils.UIUtils:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    void showAlert(android.content.Context,int,int) -> showAlert
    void showToast(android.content.Context,int,int) -> showToast
    void showToast(android.content.Context,java.lang.CharSequence,int) -> showToast
    void showToastInCenter(android.content.Context,int,int) -> showToastInCenter
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.utils.Utility:
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean isChineseLocale(android.content.Context) -> isChineseLocale
    java.lang.String generateGUID() -> generateGUID
    java.lang.String getSign(android.content.Context,java.lang.String) -> getSign
    java.lang.String safeString(java.lang.String) -> safeString
com.sina.weibo.sdk.widget.LoginButton -> com.sina.weibo.sdk.widget.LoginButton:
    int LOGIN_INCON_STYLE_1 -> LOGIN_INCON_STYLE_1
    int LOGIN_INCON_STYLE_2 -> LOGIN_INCON_STYLE_2
    int LOGIN_INCON_STYLE_3 -> LOGIN_INCON_STYLE_3
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> c
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> d
    android.view.View$OnClickListener mExternalOnClickListener -> e
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setStyle(int) -> setStyle
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.sina.weibo.sdk.widget.LoginoutButton -> com.sina.weibo.sdk.widget.LoginoutButton:
    android.content.Context mContext -> a
    com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo mAuthInfo -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler -> c
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> d
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> e
    com.sina.weibo.sdk.net.RequestListener mLogoutListener -> f
    android.view.View$OnClickListener mExternalOnClickListener -> g
    void setWeiboAuthInfo(com.sina.weibo.sdk.auth.WeiboAuth$AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setWeiboAuthInfo(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthInfo
    void setLogoutInfo(com.sina.weibo.sdk.auth.Oauth2AccessToken,com.sina.weibo.sdk.net.RequestListener) -> setLogoutInfo
    void setLogoutListener(com.sina.weibo.sdk.net.RequestListener) -> setLogoutListener
    void setExternalOnClickListener(android.view.View$OnClickListener) -> setExternalOnClickListener
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void access$0(com.sina.weibo.sdk.widget.LoginoutButton,com.sina.weibo.sdk.auth.Oauth2AccessToken) -> a
    com.sina.weibo.sdk.auth.Oauth2AccessToken access$1(com.sina.weibo.sdk.widget.LoginoutButton) -> a
    com.sina.weibo.sdk.auth.WeiboAuthListener access$2(com.sina.weibo.sdk.widget.LoginoutButton) -> b
    com.sina.weibo.sdk.net.RequestListener access$3(com.sina.weibo.sdk.widget.LoginoutButton) -> c
com.sina.weibo.sdk.widget.LoginoutButton$1 -> dY:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> a
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.widget.LoginoutButton$2 -> dZ:
    com.sina.weibo.sdk.widget.LoginoutButton this$0 -> a
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.tencent.a.a.a.a -> com.tencent.a.a.a.a:
    com.tencent.a.b.f a -> a
    com.tencent.a.a.a.a b -> b
    com.tencent.a.a.a.a a() -> a
    boolean a(android.content.Context,com.tencent.a.a.a.b) -> a
    void b() -> b
    boolean a(java.lang.String,java.lang.String) -> a
com.tencent.a.a.a.b -> com.tencent.a.a.a.b:
    int mReqType -> a
    int mReqLevel -> b
    int mReqDelay -> c
    int mReqGeoType -> d
    void onLocationUpdate(com.tencent.a.a.a.d) -> onLocationUpdate
    void onLocationDataUpdate(byte[],int) -> onLocationDataUpdate
    void onStatusUpdate(int) -> onStatusUpdate
    int getReqType() -> getReqType
    int getReqLevel() -> getReqLevel
    int getReqDelay() -> getReqDelay
    int getReqGeoType() -> getReqGeoType
com.tencent.a.a.a.c -> com.tencent.a.a.a.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    double f -> f
com.tencent.a.a.a.d -> com.tencent.a.a.a.d:
    int a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    double g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.util.ArrayList w -> w
    boolean x -> x
    int y -> y
    int z -> z
    long A -> A
    void a(java.lang.String) -> a
    long a() -> a
    java.lang.String toString() -> toString
com.tencent.a.b.a -> com.tencent.a.b.a:
    com.tencent.a.b.a a -> a
    com.tencent.a.b.a a() -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.tencent.a.b.a$1 -> ea:
    com.tencent.a.b.a a -> a
com.tencent.a.b.b -> com.tencent.a.b.b:
    com.tencent.a.b.b b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    double g -> g
    double h -> h
    com.tencent.a.b.b$a i -> i
    com.tencent.a.b.b$b j -> j
    boolean k -> k
    java.lang.String a -> a
    com.tencent.a.b.b a() -> a
    void a(double,double,com.tencent.a.b.b$a) -> a
    boolean a(com.tencent.a.b.b,boolean) -> a
    void a(com.tencent.a.b.b,byte[],java.lang.String) -> a
    com.tencent.a.b.b$a a(com.tencent.a.b.b) -> a
    com.tencent.a.b.n a(java.lang.String,java.lang.String,byte[]) -> a
    boolean a(java.lang.String) -> a
com.tencent.a.b.b$a -> com.tencent.a.b.b$a:
    void a(double,double) -> a
com.tencent.a.b.b$b -> com.tencent.a.b.b$b:
    com.tencent.a.b.b a -> a
    void run() -> run
com.tencent.a.b.c -> com.tencent.a.b.c:
    com.tencent.a.b.c a -> a
    long b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    com.tencent.a.b.c a() -> a
    void a(int,int,int,int,java.util.List) -> a
    void a(java.lang.String) -> a
    java.lang.String b(int,int,int,int,java.util.List) -> b
    void b() -> b
    boolean a(java.util.List) -> a
    boolean a(java.lang.StringBuffer) -> a
com.tencent.a.b.c$a -> eb:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
com.tencent.a.b.c$b -> ec:
    java.lang.String a -> a
com.tencent.a.b.d -> com.tencent.a.b.d:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    com.tencent.a.b.d$a c -> c
    com.tencent.a.b.d$c d -> d
    com.tencent.a.b.d$b e -> e
    boolean f -> f
    java.util.List g -> g
    byte[] h -> h
    byte[] i -> i
    boolean j -> j
    boolean a(android.content.Context,com.tencent.a.b.d$c) -> a
    void a() -> a
    int a(int) -> a
    java.util.List b() -> b
    com.tencent.a.b.d$b a(com.tencent.a.b.d,com.tencent.a.b.d$b) -> a
    com.tencent.a.b.d$c a(com.tencent.a.b.d) -> a
    com.tencent.a.b.d$b b(com.tencent.a.b.d) -> b
    void c(com.tencent.a.b.d) -> c
    android.telephony.TelephonyManager d(com.tencent.a.b.d) -> d
    byte[] e(com.tencent.a.b.d) -> e
    java.util.List f(com.tencent.a.b.d) -> f
    boolean a$71f76223(com.tencent.a.b.d) -> g
com.tencent.a.b.d$1 -> ed:
    com.tencent.a.b.d a -> a
    void run() -> run
com.tencent.a.b.d$a -> com.tencent.a.b.d$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.reflect.Method i -> i
    java.lang.reflect.Method j -> j
    java.lang.reflect.Method k -> k
    java.lang.reflect.Method l -> l
    java.lang.reflect.Method m -> m
    com.tencent.a.b.d n -> n
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
com.tencent.a.b.d$b -> com.tencent.a.b.d$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.Object clone() -> clone
com.tencent.a.b.d$c -> com.tencent.a.b.d$c:
    void a(com.tencent.a.b.d$b) -> a
com.tencent.a.b.e -> com.tencent.a.b.e:
    android.content.Context a -> a
    android.location.LocationManager b -> b
    com.tencent.a.b.e$a c -> c
    com.tencent.a.b.e$c e -> d
    com.tencent.a.b.e$b f -> e
    boolean g -> f
    byte[] h -> g
    int i -> h
    long j -> i
    int l -> j
    int m -> k
    boolean a(com.tencent.a.b.e$c,android.content.Context) -> a
    void a() -> a
    long a(com.tencent.a.b.e,long) -> a
    void a(com.tencent.a.b.e) -> a
    int a(com.tencent.a.b.e,int) -> a
    com.tencent.a.b.e$b a(com.tencent.a.b.e,com.tencent.a.b.e$b) -> a
    int b(com.tencent.a.b.e) -> b
    int c(com.tencent.a.b.e) -> c
    int d(com.tencent.a.b.e) -> d
    long e(com.tencent.a.b.e) -> e
    com.tencent.a.b.e$c f(com.tencent.a.b.e) -> f
    com.tencent.a.b.e$b g(com.tencent.a.b.e) -> g
    int b(com.tencent.a.b.e,int) -> b
    int c$71e98a84(com.tencent.a.b.e) -> h
    int d(com.tencent.a.b.e,int) -> c
com.tencent.a.b.e$a -> ee:
    com.tencent.a.b.e a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.tencent.a.b.e$b -> com.tencent.a.b.e$b:
    android.location.Location a -> a
    long b -> b
    int c -> c
    boolean a() -> a
    android.location.Location b() -> b
    java.lang.Object clone() -> clone
com.tencent.a.b.e$c -> com.tencent.a.b.e$c:
    void a(com.tencent.a.b.e$b) -> a
    void a(int) -> a
com.tencent.a.b.f -> com.tencent.a.b.f:
    long a -> a
    android.content.Context b -> b
    com.tencent.a.b.e c -> c
    com.tencent.a.b.d d -> d
    com.tencent.a.b.g e -> e
    int f -> f
    int g -> g
    com.tencent.a.b.c h -> h
    com.tencent.a.b.b i -> i
    com.tencent.a.a.a.b j -> j
    int k -> k
    int l -> l
    int m -> m
    byte[] n -> n
    byte[] o -> o
    boolean p -> p
    com.tencent.a.b.f$c q -> q
    com.tencent.a.b.f$b r -> r
    com.tencent.a.b.f$a s -> s
    boolean t -> t
    com.tencent.a.b.f u -> u
    long v -> v
    com.tencent.a.b.e$b w -> w
    com.tencent.a.b.d$b x -> x
    com.tencent.a.b.g$b y -> y
    com.tencent.a.a.a.d z -> z
    com.tencent.a.a.a.d A -> A
    int B -> B
    int C -> C
    int D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    boolean K -> K
    long M -> L
    android.os.Handler N -> M
    java.lang.Runnable O -> N
    android.content.BroadcastReceiver P -> O
    com.tencent.a.b.f a() -> a
    boolean a(android.content.Context,com.tencent.a.a.a.b) -> a
    void b() -> b
    boolean a(java.lang.String,java.lang.String) -> a
    void a(com.tencent.a.b.e$b) -> a
    void a(int) -> a
    void a(com.tencent.a.b.d$b) -> a
    void a(com.tencent.a.b.g$b) -> a
    void b(int) -> b
    void a(double,double) -> a
    void d() -> e
    java.util.ArrayList a(org.json.JSONArray) -> a
    void b(boolean) -> a
    void a(java.lang.String) -> a
    void e() -> f
    long a(com.tencent.a.b.f) -> a
    com.tencent.a.b.g b(com.tencent.a.b.f) -> b
    void c(com.tencent.a.b.f) -> c
    com.tencent.a.b.f$c d(com.tencent.a.b.f) -> d
    void a(com.tencent.a.b.f,com.tencent.a.b.e$b) -> a
    void a(com.tencent.a.b.f,com.tencent.a.b.d$b) -> a
    void a(com.tencent.a.b.f,com.tencent.a.b.g$b) -> a
    void a(com.tencent.a.b.f,int) -> a
    void b(com.tencent.a.b.f,int) -> b
    void a(com.tencent.a.b.f,android.location.Location) -> a
    int e(com.tencent.a.b.f) -> e
    void a(com.tencent.a.b.f,java.lang.String) -> a
    com.tencent.a.b.f$a a$56381b19(com.tencent.a.b.f) -> f
    void b(com.tencent.a.b.f,java.lang.String) -> b
    com.tencent.a.b.e$b f(com.tencent.a.b.f) -> g
    void g(com.tencent.a.b.f) -> h
    int h(com.tencent.a.b.f) -> i
    int i(com.tencent.a.b.f) -> j
    boolean a(com.tencent.a.b.f,boolean) -> a
    void j(com.tencent.a.b.f) -> k
    long a(com.tencent.a.b.f,long) -> a
    boolean c() -> c
    android.content.Context k(com.tencent.a.b.f) -> l
    java.lang.String c(com.tencent.a.b.f,java.lang.String) -> c
    java.lang.String d(com.tencent.a.b.f,java.lang.String) -> d
    java.lang.String e(com.tencent.a.b.f,java.lang.String) -> e
    java.lang.String l(com.tencent.a.b.f) -> m
    java.lang.String m(com.tencent.a.b.f) -> n
    java.lang.String n(com.tencent.a.b.f) -> o
    boolean a$138603() -> d
    java.lang.String f(com.tencent.a.b.f,java.lang.String) -> f
    int o(com.tencent.a.b.f) -> p
    com.tencent.a.b.d p(com.tencent.a.b.f) -> q
    java.lang.String q(com.tencent.a.b.f) -> r
    boolean r(com.tencent.a.b.f) -> s
    int s(com.tencent.a.b.f) -> t
    java.lang.String t(com.tencent.a.b.f) -> u
    java.lang.String u(com.tencent.a.b.f) -> v
com.tencent.a.b.f$1 -> ef:
    com.tencent.a.b.f a -> a
    void run() -> run
com.tencent.a.b.f$2 -> eg:
    com.tencent.a.b.f a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.tencent.a.b.f$a -> eh:
    com.tencent.a.b.e$b a -> a
    com.tencent.a.b.d$b b -> b
    com.tencent.a.b.g$b c -> c
    com.tencent.a.b.f d -> d
    void run() -> run
com.tencent.a.b.f$b -> ei:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.a.b.f d -> d
    void run() -> run
    java.lang.String a(byte[],java.lang.String) -> a
com.tencent.a.b.f$c -> ej:
    com.tencent.a.b.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.a.b.g -> com.tencent.a.b.g:
    android.content.Context a -> a
    android.net.wifi.WifiManager b -> b
    com.tencent.a.b.g$a c -> c
    android.os.Handler d -> d
    java.lang.Runnable e -> e
    int f -> f
    com.tencent.a.b.g$c g -> g
    com.tencent.a.b.g$b h -> h
    boolean i -> i
    byte[] j -> j
    boolean a(android.content.Context,com.tencent.a.b.g$c,int) -> a
    void a() -> a
    boolean b() -> b
    void a(long) -> a
    boolean c() -> c
    void a(com.tencent.a.b.g) -> a
    com.tencent.a.b.g$c b(com.tencent.a.b.g) -> b
    android.net.wifi.WifiManager c(com.tencent.a.b.g) -> c
    com.tencent.a.b.g$b a(com.tencent.a.b.g,com.tencent.a.b.g$b) -> a
    com.tencent.a.b.g$b d(com.tencent.a.b.g) -> d
    int e(com.tencent.a.b.g) -> e
com.tencent.a.b.g$1 -> ek:
    com.tencent.a.b.g a -> a
    void run() -> run
com.tencent.a.b.g$a -> com.tencent.a.b.g$a:
    int a -> a
    java.util.List b -> b
    boolean c -> c
    com.tencent.a.b.g d -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(java.util.List) -> a
com.tencent.a.b.g$b -> com.tencent.a.b.g$b:
    java.util.List a -> a
    java.util.List a() -> a
    java.lang.Object clone() -> clone
com.tencent.a.b.g$c -> com.tencent.a.b.g$c:
    void a(com.tencent.a.b.g$b) -> a
    void b(int) -> b
com.tencent.a.b.h -> com.tencent.a.b.h:
    void a(java.lang.String) -> a
com.tencent.a.b.i -> com.tencent.a.b.i:
    java.lang.String a -> a
    int[] b -> b
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    double a(double,int) -> a
    int a(char) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(com.tencent.a.b.e$b) -> a
    boolean a(int,int,int,int,int) -> a
    java.lang.String a(com.tencent.a.b.d$b,java.util.List) -> a
    java.lang.String a(int,int,int,int,int,int,int) -> a
    java.lang.String a(com.tencent.a.b.g$b) -> a
    boolean c(java.lang.String) -> c
com.tencent.a.b.j -> com.tencent.a.b.j:
    java.lang.String a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
com.tencent.a.b.k -> com.tencent.a.b.k:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    java.util.ArrayList g -> g
    long h -> h
    long i -> i
    long j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    long o -> o
    long p -> p
    long q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int a() -> a
    int b() -> b
    void a(boolean) -> a
    void a(java.net.HttpURLConnection) -> a
    void c() -> c
    void d() -> d
    void a(int) -> a
    com.tencent.a.b.k$a a(long) -> a
    com.tencent.a.b.k$a b(long) -> b
    com.tencent.a.b.k$a c(long) -> c
com.tencent.a.b.k$a -> com.tencent.a.b.k$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
    long f -> f
    int g -> g
    int h -> h
com.tencent.a.b.l -> com.tencent.a.b.l:
    android.content.Context a -> a
    com.tencent.a.b.l b -> b
    com.tencent.a.b.l a() -> a
    void a(android.content.Context) -> a
    android.content.Context b() -> b
    boolean c() -> c
    boolean d() -> d
com.tencent.a.b.m -> com.tencent.a.b.m:
    com.tencent.a.b.m b -> a
    com.tencent.a.b.m a() -> a
com.tencent.a.b.n -> com.tencent.a.b.n:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String toString() -> toString
com.tencent.a.b.o -> com.tencent.a.b.o:
com.tencent.a.b.p -> com.tencent.a.b.p:
com.tencent.a.b.q -> com.tencent.a.b.q:
    int a -> a
    boolean b -> b
    java.net.HttpURLConnection a(java.lang.String,boolean) -> a
    com.tencent.a.b.n a(boolean,java.lang.String,java.lang.String,java.lang.String,byte[],boolean,boolean) -> a
    com.tencent.a.b.n a(java.net.HttpURLConnection,boolean) -> a
    void a(int) -> a
    boolean a(java.net.HttpURLConnection) -> a
    java.net.HttpURLConnection a(java.net.URL,java.lang.String) -> a
com.tencent.a.b.r -> com.tencent.a.b.r:
com.tencent.b.a.a -> com.tencent.b.a.a:
    com.tencent.b.a.b a -> a
    java.io.FileWriter b -> b
    java.io.File c -> c
    char[] d -> d
    com.tencent.b.a.d e -> e
    com.tencent.b.a.d f -> f
    com.tencent.b.a.d g -> g
    com.tencent.b.a.d h -> h
    boolean i -> i
    android.os.HandlerThread j -> j
    android.os.Handler k -> k
    void a() -> a
    void b() -> b
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> f
    java.io.Writer h() -> g
    void i() -> h
    void j() -> i
    com.tencent.b.a.b c() -> c
    void a(com.tencent.b.a.b) -> a
com.tencent.b.a.b -> com.tencent.b.a.b:
    java.text.SimpleDateFormat a -> a
    java.io.FileFilter b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    long g -> g
    java.io.File h -> h
    int i -> i
    java.lang.String j -> j
    long k -> k
    java.io.FileFilter l -> l
    java.util.Comparator m -> m
    long a(java.io.File) -> a
    java.io.File a() -> a
    java.io.File a(long) -> a
    java.io.File[] b(java.io.File) -> b
    void b() -> b
    java.io.File[] a(java.io.File[]) -> a
    int f(java.io.File) -> e
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    int d() -> d
    void a(int) -> a
    int e() -> e
    void b(int) -> b
    int f() -> f
    void c(int) -> c
    long g() -> g
    void b(long) -> b
    java.io.File h() -> h
    void c(java.io.File) -> c
    int i() -> i
    void d(int) -> d
    java.lang.String j() -> j
    void b(java.lang.String) -> b
    long k() -> k
    void c(long) -> c
    int d(java.io.File) -> d
com.tencent.b.a.b$1 -> el:
    boolean accept(java.io.File) -> accept
com.tencent.b.a.b$2 -> em:
    com.tencent.b.a.b a -> a
    boolean accept(java.io.File) -> accept
com.tencent.b.a.b$3 -> en:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.tencent.b.a.c -> com.tencent.b.a.c:
    com.tencent.b.a.c a -> a
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.tencent.b.a.d -> com.tencent.b.a.d:
    java.util.concurrent.ConcurrentLinkedQueue a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    int a(java.lang.String) -> a
    void a(java.io.Writer,char[]) -> a
    int a() -> a
    void b() -> b
    java.util.Iterator iterator() -> iterator
com.tencent.b.a.e -> com.tencent.b.a.e:
    com.tencent.b.a.e a -> a
    java.lang.String a(int) -> a
    java.lang.String a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
com.tencent.b.a.f -> com.tencent.b.a.f:
    int a -> a
    boolean b -> b
    com.tencent.b.a.e c -> c
    void b(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(int,java.lang.Thread,long,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void a(int) -> a
    boolean d() -> d
    void a(boolean) -> a
    com.tencent.b.a.e e() -> e
    void a(com.tencent.b.a.e) -> a
com.tencent.b.a.g -> com.tencent.b.a.g:
    com.tencent.b.a.g a -> a
    com.tencent.b.a.g a() -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b() -> b
com.tencent.b.a.h -> com.tencent.b.a.h:
    com.tencent.b.a.b b -> b
    com.tencent.b.a.a d -> c
    boolean a -> a
    boolean e -> d
    boolean f -> e
    java.io.File c() -> c
    void b() -> b
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.tencent.b.b.a -> com.tencent.b.b.a:
com.tencent.b.b.a$a -> com.tencent.b.b.a$a:
    java.lang.String a -> a
com.tencent.b.b.b -> com.tencent.b.b.b:
    android.content.Context a -> a
    android.content.Context a() -> a
    void a(android.content.Context) -> a
    java.lang.String b() -> b
    java.io.File c() -> c
com.tencent.b.b.c -> com.tencent.b.b.c:
    boolean a() -> a
    com.tencent.b.b.d b() -> b
com.tencent.b.b.d -> com.tencent.b.b.d:
    java.io.File a -> a
    long b -> b
    long c -> c
    java.io.File a() -> a
    void a(java.io.File) -> a
    long b() -> b
    void a(long) -> a
    long c() -> c
    void b(long) -> b
    com.tencent.b.b.d b(java.io.File) -> b
    java.lang.String toString() -> toString
com.tencent.b.c.a -> com.tencent.b.c.a:
    boolean a(java.io.File) -> a
com.tencent.b.c.b -> com.tencent.b.c.b:
    java.text.SimpleDateFormat a(java.lang.String) -> a
com.tencent.b.c.c -> com.tencent.b.c.c:
com.tencent.b.c.c$a -> com.tencent.b.c.c$a:
    boolean a(int,int) -> a
com.tencent.connect.UserInfo -> com.tencent.connect.UserInfo:
    java.lang.String GRAPH_OPEN_ID -> GRAPH_OPEN_ID
    void getUserInfo(com.tencent.tauth.IUiListener) -> getUserInfo
    void getVipUserInfo(com.tencent.tauth.IUiListener) -> getVipUserInfo
    void getVipUserRichInfo(com.tencent.tauth.IUiListener) -> getVipUserRichInfo
    void getTenPayAddr(com.tencent.tauth.IUiListener) -> getTenPayAddr
    void getOpenId(com.tencent.tauth.IUiListener) -> getOpenId
com.tencent.connect.a.a -> com.tencent.connect.a.a:
    boolean a(android.content.Context,com.tencent.connect.auth.QQToken) -> a
    void b(android.content.Context,com.tencent.connect.auth.QQToken) -> b
    void c(android.content.Context,com.tencent.connect.auth.QQToken) -> c
    void d(android.content.Context,com.tencent.connect.auth.QQToken) -> d
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String,java.lang.String[]) -> a
com.tencent.connect.auth.AuthAgent -> com.tencent.connect.auth.AuthAgent:
    com.tencent.tauth.IUiListener a -> e
    java.lang.String b -> f
    android.app.Activity c -> g
    com.tencent.tauth.IUiListener d -> h
    android.os.Handler e -> i
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> doLogin
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean) -> doLogin
    int doLogin(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,boolean,boolean) -> doLogin
    void writeEncryToken(android.content.Context) -> writeEncryToken
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.tencent.connect.auth.QQToken a(com.tencent.connect.auth.AuthAgent) -> a
    com.tencent.connect.auth.QQToken b(com.tencent.connect.auth.AuthAgent) -> b
    com.tencent.connect.auth.QQToken c(com.tencent.connect.auth.AuthAgent) -> c
    com.tencent.connect.auth.QQToken d(com.tencent.connect.auth.AuthAgent) -> d
    void e(com.tencent.connect.auth.AuthAgent) -> e
    void a(com.tencent.connect.auth.AuthAgent,java.lang.String) -> a
    android.content.Context f(com.tencent.connect.auth.AuthAgent) -> f
    com.tencent.tauth.IUiListener g(com.tencent.connect.auth.AuthAgent) -> g
    android.os.Handler h(com.tencent.connect.auth.AuthAgent) -> h
    android.app.Activity i(com.tencent.connect.auth.AuthAgent) -> i
    android.os.Bundle j(com.tencent.connect.auth.AuthAgent) -> j
    com.tencent.connect.auth.QQToken k(com.tencent.connect.auth.AuthAgent) -> k
com.tencent.connect.auth.AuthAgent$1 -> eo:
    com.tencent.connect.auth.AuthAgent a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$2 -> ep:
    com.tencent.connect.auth.AuthAgent a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthAgent$FeedConfirmListener -> eq:
    com.tencent.tauth.IUiListener a -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    com.tencent.connect.auth.AuthAgent b -> e
    void onComplete(java.lang.Object) -> onComplete
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    void a() -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$1 -> er:
    com.tencent.tauth.IUiListener a -> b
    java.lang.Object b -> c
    com.tencent.connect.auth.AuthAgent$FeedConfirmListener c -> d
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$2 -> es:
    com.tencent.tauth.IUiListener a -> b
    java.lang.Object b -> c
    void onClick(android.view.View) -> onClick
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$3 -> et:
    com.tencent.tauth.IUiListener a -> a
    java.lang.Object b -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.tencent.connect.auth.AuthAgent$FeedConfirmListener$ButtonListener -> eu:
    android.app.Dialog d -> a
com.tencent.connect.auth.AuthAgent$RequestListener -> ev:
    com.tencent.connect.auth.AuthAgent a -> a
    void onUnknowException(java.lang.Exception) -> onUnknowException
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> onSocketTimeoutException
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> onNetworkUnavailableException
    void onMalformedURLException(java.net.MalformedURLException) -> onMalformedURLException
    void onJSONException(org.json.JSONException) -> onJSONException
    void onIOException(java.io.IOException) -> onIOException
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> onHttpStatusException
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> onConnectTimeoutException
    void onComplete(org.json.JSONObject) -> onComplete
com.tencent.connect.auth.AuthAgent$TokenListener -> ew:
    com.tencent.tauth.IUiListener b -> a
    boolean c -> b
    android.content.Context d -> c
    com.tencent.connect.auth.AuthAgent a -> d
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.connect.auth.AuthConstants -> com.tencent.connect.auth.AuthConstants:
    java.lang.String CANCEL_URI -> CANCEL_URI
    java.lang.String CLOSE_URI -> CLOSE_URI
    java.lang.String REDIRECT_BROWSER_URI -> REDIRECT_BROWSER_URI
    java.lang.String DOWNLOAD_URI -> DOWNLOAD_URI
com.tencent.connect.auth.AuthDialog -> com.tencent.connect.auth.AuthDialog:
    java.lang.ref.WeakReference a -> a
    java.lang.String b -> b
    com.tencent.connect.auth.AuthDialog$OnTimeListener c -> c
    com.tencent.tauth.IUiListener d -> d
    android.widget.FrameLayout f -> e
    android.widget.LinearLayout g -> f
    android.widget.FrameLayout h -> g
    android.widget.ProgressBar i -> h
    java.lang.String j -> i
    android.webkit.WebView k -> j
    java.lang.ref.WeakReference l -> k
    boolean m -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void callJs(java.lang.String,java.lang.String) -> callJs
    java.lang.ref.WeakReference a() -> a
    void a(android.content.Context,java.lang.String) -> a
    boolean a(com.tencent.connect.auth.AuthDialog,boolean) -> a
    boolean a(com.tencent.connect.auth.AuthDialog) -> a
    boolean b(com.tencent.connect.auth.AuthDialog) -> b
    java.lang.String a(com.tencent.connect.auth.AuthDialog,java.lang.Object) -> a
    java.lang.String c(com.tencent.connect.auth.AuthDialog) -> c
    android.webkit.WebView d(com.tencent.connect.auth.AuthDialog) -> d
    com.tencent.connect.auth.AuthDialog$OnTimeListener e(com.tencent.connect.auth.AuthDialog) -> e
    java.lang.ref.WeakReference b() -> b
com.tencent.connect.auth.AuthDialog$JsListener -> ex:
com.tencent.connect.auth.AuthDialog$LoginWebViewClient -> ey:
    com.tencent.connect.auth.AuthDialog a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.connect.auth.AuthDialog$OnTimeListener -> ez:
    java.lang.String d -> a
    java.lang.String a -> b
    java.lang.String b -> c
    com.tencent.tauth.IUiListener e -> d
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void a(com.tencent.connect.auth.AuthDialog$OnTimeListener,java.lang.String) -> a
com.tencent.connect.auth.AuthDialog$THandler -> eA:
    com.tencent.connect.auth.AuthDialog$OnTimeListener a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.auth.AuthMap -> com.tencent.connect.auth.AuthMap:
    int b -> a
    com.tencent.connect.auth.AuthMap sInstance -> sInstance
    java.util.HashMap authMap -> authMap
    java.lang.String KEY_CHAR_LIST -> KEY_CHAR_LIST
    boolean a -> b
    com.tencent.connect.auth.AuthMap getInstance() -> getInstance
    com.tencent.connect.auth.AuthMap$Auth get(java.lang.String) -> get
    int getSerial() -> getSerial
    java.lang.String set(com.tencent.connect.auth.AuthMap$Auth) -> set
    void remove(java.lang.String) -> remove
    java.lang.String makeKey() -> makeKey
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
com.tencent.connect.auth.AuthMap$Auth -> com.tencent.connect.auth.AuthMap$Auth:
    com.tencent.tauth.IUiListener listener -> listener
    com.tencent.connect.auth.AuthDialog dialog -> dialog
    java.lang.String key -> key
com.tencent.connect.auth.QQAuth -> com.tencent.connect.auth.QQAuth:
    com.tencent.connect.auth.AuthAgent a -> a
    com.tencent.connect.auth.QQToken b -> b
    java.util.HashMap c -> c
    com.tencent.connect.auth.QQAuth createInstance(java.lang.String,android.content.Context) -> createInstance
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> login
    int loginWithOEM(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String,java.lang.String,java.lang.String) -> loginWithOEM
    int reAuth(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> reAuth
    void logout(android.content.Context) -> logout
    com.tencent.connect.auth.QQToken getQQToken() -> getQQToken
    void setAccessToken(java.lang.String,java.lang.String) -> setAccessToken
    boolean isSessionValid() -> isSessionValid
    void setOpenId(android.content.Context,java.lang.String) -> setOpenId
    boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.tencent.connect.auth.QQToken -> com.tencent.connect.auth.QQToken:
    int AUTH_WEB -> AUTH_WEB
    int AUTH_QQ -> AUTH_QQ
    int AUTH_QZONE -> AUTH_QZONE
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    long e -> e
    boolean isSessionValid() -> isSessionValid
    java.lang.String getAppId() -> getAppId
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAccessToken() -> getAccessToken
    void setAccessToken(java.lang.String,java.lang.String) -> setAccessToken
    java.lang.String getOpenId() -> getOpenId
    void setOpenId(java.lang.String) -> setOpenId
    int getAuthSource() -> getAuthSource
    void setAuthSource(int) -> setAuthSource
    long getExpireTimeInSecond() -> getExpireTimeInSecond
com.tencent.connect.avatar.ImageActivity -> com.tencent.connect.avatar.ImageActivity:
    com.tencent.connect.auth.QQToken b -> b
    java.lang.String c -> c
    android.os.Handler d -> d
    com.tencent.connect.avatar.c e -> e
    android.widget.Button f -> f
    android.widget.Button g -> g
    com.tencent.connect.avatar.b h -> h
    android.widget.TextView i -> i
    android.widget.ProgressBar j -> j
    int k -> k
    boolean l -> l
    long m -> m
    int n -> n
    int o -> o
    int p -> p
    android.graphics.Rect q -> q
    java.lang.String r -> r
    android.graphics.Bitmap s -> s
    android.widget.RelativeLayout a -> a
    android.view.View$OnClickListener t -> t
    android.view.View$OnClickListener u -> u
    com.tencent.tauth.IUiListener v -> v
    com.tencent.tauth.IUiListener w -> w
    android.graphics.drawable.Drawable b(java.lang.String) -> a
    void b() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void b(java.lang.String,int) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void d() -> b
    void e() -> c
    void a(java.lang.String,long) -> a
    android.graphics.drawable.Drawable a(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> a
    android.graphics.Rect a(com.tencent.connect.avatar.ImageActivity,android.graphics.Rect) -> a
    com.tencent.connect.avatar.b a(com.tencent.connect.avatar.ImageActivity) -> a
    android.graphics.Rect b(com.tencent.connect.avatar.ImageActivity) -> b
    com.tencent.connect.avatar.c c(com.tencent.connect.avatar.ImageActivity) -> c
    android.widget.ProgressBar d(com.tencent.connect.avatar.ImageActivity) -> d
    android.widget.Button e(com.tencent.connect.avatar.ImageActivity) -> e
    android.widget.Button f(com.tencent.connect.avatar.ImageActivity) -> f
    void g(com.tencent.connect.avatar.ImageActivity) -> g
    boolean h(com.tencent.connect.avatar.ImageActivity) -> h
    long i(com.tencent.connect.avatar.ImageActivity) -> i
    void j(com.tencent.connect.avatar.ImageActivity) -> j
    void a(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> a
    boolean a(com.tencent.connect.avatar.ImageActivity,boolean) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String,int) -> b
    java.lang.String k(com.tencent.connect.avatar.ImageActivity) -> k
    void a(com.tencent.connect.avatar.ImageActivity,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void b(com.tencent.connect.avatar.ImageActivity,java.lang.String) -> b
    android.os.Handler l(com.tencent.connect.avatar.ImageActivity) -> l
    int m(com.tencent.connect.avatar.ImageActivity) -> m
    void n(com.tencent.connect.avatar.ImageActivity) -> n
com.tencent.connect.avatar.ImageActivity$1 -> eB:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onGlobalLayout() -> onGlobalLayout
com.tencent.connect.avatar.ImageActivity$2 -> eC:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.ImageActivity$2$1 -> eD:
    com.tencent.connect.avatar.ImageActivity$2 a -> a
    void run() -> run
com.tencent.connect.avatar.ImageActivity$3 -> eE:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onClick(android.view.View) -> onClick
com.tencent.connect.avatar.ImageActivity$4 -> eF:
    java.lang.String a -> a
    int b -> b
    com.tencent.connect.avatar.ImageActivity c -> c
    void run() -> run
com.tencent.connect.avatar.ImageActivity$5 -> eG:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.connect.avatar.ImageActivity$6 -> eH:
    com.tencent.connect.avatar.ImageActivity a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
    void a$13462e() -> a
com.tencent.connect.avatar.ImageActivity$6$1 -> eI:
    java.lang.String a -> a
    com.tencent.connect.avatar.ImageActivity$6 b -> b
    void run() -> run
com.tencent.connect.avatar.ImageActivity$QQAvatarImp -> eJ:
    void setAvator(android.graphics.Bitmap,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.avatar.ImageActivity$a -> eK:
    com.tencent.connect.avatar.ImageActivity a -> a
    void a(android.widget.Button) -> a
    void b(android.widget.Button) -> b
com.tencent.connect.avatar.QQAvatar -> com.tencent.connect.avatar.QQAvatar:
    com.tencent.tauth.IUiListener a -> e
    void setAvatar(android.app.Activity,android.net.Uri,com.tencent.tauth.IUiListener,int) -> setAvatar
    void a(android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.tencent.connect.avatar.a -> com.tencent.connect.avatar.a:
    int a(android.content.Context,float) -> a
com.tencent.connect.avatar.b -> com.tencent.connect.avatar.b:
    android.graphics.Rect a -> a
    android.graphics.Paint b -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Rect a() -> a
com.tencent.connect.avatar.c -> com.tencent.connect.avatar.c:
    android.graphics.Matrix c -> a
    android.graphics.Matrix d -> c
    int e -> d
    float f -> e
    float g -> f
    android.graphics.Bitmap h -> g
    boolean i -> h
    float j -> i
    float k -> j
    android.graphics.PointF l -> k
    android.graphics.PointF m -> l
    float n -> m
    float o -> n
    boolean b -> b
    android.graphics.Rect p -> o
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    float a(android.view.MotionEvent) -> a
    void a(android.graphics.Rect) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void b() -> a
    void a(com.tencent.connect.avatar.c) -> a
    boolean a(com.tencent.connect.avatar.c,boolean) -> a
com.tencent.connect.avatar.c$1 -> eL:
    com.tencent.connect.avatar.c a -> a
    void run() -> run
com.tencent.connect.avatar.c$1$1 -> eM:
    com.tencent.connect.avatar.c$1 a -> a
    void run() -> run
com.tencent.connect.common.AssistActivity -> com.tencent.connect.common.AssistActivity:
    com.tencent.connect.common.BaseApi sApiObject -> a
    com.tencent.connect.common.BaseApi mAPiObject -> b
    android.content.Intent getAssistActivityIntent(android.content.Context) -> getAssistActivityIntent
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setApiObject(com.tencent.connect.common.BaseApi) -> setApiObject
com.tencent.connect.common.BaseApi -> com.tencent.connect.common.BaseApi:
    com.tencent.connect.auth.QQToken mToken -> a
    android.content.Context mContext -> b
    java.util.List mTaskList -> c
    android.content.Intent mActivityIntent -> d
    int sRequestCode -> e
    java.lang.String registerChannel -> registerChannel
    java.lang.String installChannel -> installChannel
    java.lang.String businessId -> businessId
    boolean isOEM -> isOEM
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.content.Intent getActivityIntent() -> a
    android.os.Bundle composeCGIParams() -> b
    android.os.Bundle composeActivityParams() -> c
    void startAssitActivity(android.app.Activity,com.tencent.tauth.IUiListener) -> a
    boolean hasActivityForIntent() -> d
    android.content.Intent getTargetActivityIntent(java.lang.String) -> a
    android.content.Intent getAgentIntentWithTarget(java.lang.String) -> b
com.tencent.connect.common.BaseApi$ApiTask -> com.tencent.connect.common.BaseApi$ApiTask:
    int mRequestCode -> mRequestCode
    com.tencent.tauth.IUiListener mListener -> mListener
com.tencent.connect.common.BaseApi$TempRequestListener -> com.tencent.connect.common.BaseApi$TempRequestListener:
    com.tencent.tauth.IUiListener mListener -> a
    android.os.Handler mHandler -> b
    void onComplete(org.json.JSONObject) -> onComplete
    void onIOException(java.io.IOException) -> onIOException
    void onMalformedURLException(java.net.MalformedURLException) -> onMalformedURLException
    void onJSONException(org.json.JSONException) -> onJSONException
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> onConnectTimeoutException
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> onSocketTimeoutException
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> onNetworkUnavailableException
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> onHttpStatusException
    void onUnknowException(java.lang.Exception) -> onUnknowException
    com.tencent.tauth.IUiListener access$000(com.tencent.connect.common.BaseApi$TempRequestListener) -> a
com.tencent.connect.common.BaseApi$TempRequestListener$1 -> eN:
    com.tencent.connect.common.BaseApi$TempRequestListener this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.common.Constants -> com.tencent.connect.common.Constants:
    java.lang.String PACKAGE_QZONE -> PACKAGE_QZONE
    java.lang.String PACKAGE_QQ -> PACKAGE_QQ
    java.lang.String SIGNATRUE_QZONE -> SIGNATRUE_QZONE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String SDK_QUA -> SDK_QUA
    java.lang.String SDK_VERSION_STRING -> SDK_VERSION_STRING
    java.lang.String SDK_BUILD -> SDK_BUILD
    java.lang.String PARAM_ACCESS_TOKEN -> PARAM_ACCESS_TOKEN
    java.lang.String PARAM_KEY_STR -> PARAM_KEY_STR
    java.lang.String PARAM_KEY_TYPE -> PARAM_KEY_TYPE
    java.lang.String PARAM_PLATFORM -> PARAM_PLATFORM
    java.lang.String SOURCE_QZONE -> SOURCE_QZONE
    java.lang.String SOURCE_QQ -> SOURCE_QQ
    java.lang.String DEFAULT_PF -> DEFAULT_PF
    java.lang.String PARAM_CLIENT_ID -> PARAM_CLIENT_ID
    java.lang.String PARAM_APP_ID -> PARAM_APP_ID
    java.lang.String PARAM_CONSUMER_KEY -> PARAM_CONSUMER_KEY
    java.lang.String PARAM_OPEN_ID -> PARAM_OPEN_ID
    java.lang.String PARAM_HOPEN_ID -> PARAM_HOPEN_ID
    java.lang.String PARAM_PLATFORM_ID -> PARAM_PLATFORM_ID
    java.lang.String KEY_REQUEST_CODE -> KEY_REQUEST_CODE
    java.lang.String PREFERENCE_PF -> PREFERENCE_PF
    java.lang.String PARAM_SCOPE -> PARAM_SCOPE
    java.lang.String PARAM_EXPIRES_IN -> PARAM_EXPIRES_IN
    int ERROR_IO -> ERROR_IO
    int ERROR_URL -> ERROR_URL
    int ERROR_JSON -> ERROR_JSON
    int ERROR_PARAM -> ERROR_PARAM
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_CONNECTTIMEOUT -> ERROR_CONNECTTIMEOUT
    int ERROR_SOCKETTIMEOUT -> ERROR_SOCKETTIMEOUT
    int ERROR_HTTPSTATUS_ERROR -> ERROR_HTTPSTATUS_ERROR
    int ERROR_NETWORK_UNAVAILABLE -> ERROR_NETWORK_UNAVAILABLE
    int ERROR_FILE_EXISTED -> ERROR_FILE_EXISTED
    int ERROR_NO_SDCARD -> ERROR_NO_SDCARD
    int ERROR_LOCATION_TIMEOUT -> ERROR_LOCATION_TIMEOUT
    int ERROR_LOCATION_VERIFY_FAILED -> ERROR_LOCATION_VERIFY_FAILED
    java.lang.String MSG_LOCATION_TIMEOUT_ERROR -> MSG_LOCATION_TIMEOUT_ERROR
    java.lang.String MSG_LOCATION_VERIFY_ERROR -> MSG_LOCATION_VERIFY_ERROR
    java.lang.String MSG_IO_ERROR -> MSG_IO_ERROR
    java.lang.String MSG_URL_ERROR -> MSG_URL_ERROR
    java.lang.String MSG_JSON_ERROR -> MSG_JSON_ERROR
    java.lang.String MSG_SHARE_TYPE_ERROR -> MSG_SHARE_TYPE_ERROR
    java.lang.String MSG_PARAM_NULL_ERROR -> MSG_PARAM_NULL_ERROR
    java.lang.String MSG_PARAM_ERROR -> MSG_PARAM_ERROR
    java.lang.String MSG_PARAM_QQ_VERSION_ERROR -> MSG_PARAM_QQ_VERSION_ERROR
    java.lang.String MSG_PARAM_TITLE_NULL_ERROR -> MSG_PARAM_TITLE_NULL_ERROR
    java.lang.String MSG_PARAM_IMAGE_ERROR -> MSG_PARAM_IMAGE_ERROR
    java.lang.String MSG_PARAM_TARGETURL_NULL_ERROR -> MSG_PARAM_TARGETURL_NULL_ERROR
    java.lang.String MSG_PARAM_TARGETURL_ERROR -> MSG_PARAM_TARGETURL_ERROR
    java.lang.String MSG_PARAM_IMAGE_URL_FORMAT_ERROR -> MSG_PARAM_IMAGE_URL_FORMAT_ERROR
    java.lang.String MSG_PARAM_IMAGE_URL_MUST_BE_LOCAL -> MSG_PARAM_IMAGE_URL_MUST_BE_LOCAL
    java.lang.String MSG_UNKNOWN_ERROR -> MSG_UNKNOWN_ERROR
    java.lang.String MSG_CONNECTTIMEOUT_ERROR -> MSG_CONNECTTIMEOUT_ERROR
    java.lang.String MSG_SOCKETTIMEOUT_ERROR -> MSG_SOCKETTIMEOUT_ERROR
    java.lang.String MSG_IMAGE_ERROR -> MSG_IMAGE_ERROR
    java.lang.String MSG_OPEN_BROWSER_ERROR -> MSG_OPEN_BROWSER_ERROR
    java.lang.String MSG_SHARE_NOSD_ERROR -> MSG_SHARE_NOSD_ERROR
    java.lang.String MSG_SHARE_GETIMG_ERROR -> MSG_SHARE_GETIMG_ERROR
    java.lang.String MSG_SHARE_TO_QQ_ERROR -> MSG_SHARE_TO_QQ_ERROR
    java.lang.String MSG_NO_SDCARD -> MSG_NO_SDCARD
    java.lang.String HTTP_GET -> HTTP_GET
    java.lang.String HTTP_POST -> HTTP_POST
    java.lang.String GRAPH_BASE -> GRAPH_BASE
    java.lang.String GRAPH_INTIMATE_FRIENDS -> GRAPH_INTIMATE_FRIENDS
    java.lang.String GRAPH_NICK_TIPS -> GRAPH_NICK_TIPS
    java.lang.String KEY_PARAMS -> KEY_PARAMS
    java.lang.String KEY_ACTION -> KEY_ACTION
    java.lang.String KEY_RESPONSE -> KEY_RESPONSE
    java.lang.String KEY_ERROR_CODE -> KEY_ERROR_CODE
    java.lang.String KEY_ERROR_MSG -> KEY_ERROR_MSG
    java.lang.String KEY_ERROR_DETAIL -> KEY_ERROR_DETAIL
    java.lang.String KEY_APP_NAME -> KEY_APP_NAME
    int CODE_REQUEST_MIN -> CODE_REQUEST_MIN
    int CODE_REQUEST_MAX -> CODE_REQUEST_MAX
    int UI_NONE -> UI_NONE
    int UI_ACTIVITY -> UI_ACTIVITY
    int UI_DIALOG -> UI_DIALOG
    int UI_CHECK_TOKEN -> UI_CHECK_TOKEN
    int ACTIVITY_OK -> ACTIVITY_OK
    int ACTIVITY_CANCEL -> ACTIVITY_CANCEL
    java.lang.String MOBILEQQ_PACKAGE_NAME -> MOBILEQQ_PACKAGE_NAME
    java.lang.String CANCEL_URI -> CANCEL_URI
    java.lang.String CLOSE_URI -> CLOSE_URI
    java.lang.String DOWNLOAD_URI -> DOWNLOAD_URI
com.tencent.connect.dataprovider.CallbackManager -> com.tencent.connect.dataprovider.CallbackManager:
    java.lang.ref.WeakReference a -> a
    android.net.Uri b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    int h -> h
    boolean isCallFromTencentApp() -> isCallFromTencentApp
    int a(android.os.Bundle) -> a
    int getRequestDateTypeFlag() -> getRequestDateTypeFlag
    boolean isSupportType(int) -> isSupportType
    int sendTextAndImagePath(java.lang.String,java.lang.String) -> sendTextAndImagePath
    int sendTextAndVideoPath(java.lang.String,java.lang.String) -> sendTextAndVideoPath
    int sendTextOnly(java.lang.String) -> sendTextOnly
    int a(java.lang.String) -> a
com.tencent.connect.dataprovider.Constants -> com.tencent.connect.dataprovider.Constants:
    java.lang.String CONTENT_DATA -> CONTENT_DATA
    java.lang.String DATA_TYPE -> DATA_TYPE
    java.lang.String REQUEST_TYPE -> REQUEST_TYPE
    java.lang.String SRC_ACTIVITY_CLASS_NAME -> SRC_ACTIVITY_CLASS_NAME
    java.lang.String SRC_PACKAGE_NAME -> SRC_PACKAGE_NAME
    java.lang.String SRC_ACTIVITY_ACTION -> SRC_ACTIVITY_ACTION
    java.lang.String APPID -> APPID
com.tencent.connect.dataprovider.DataType -> com.tencent.connect.dataprovider.DataType:
    int CONTENT_AND_IMAGE_PATH -> CONTENT_AND_IMAGE_PATH
    int CONTENT_AND_VIDEO_PATH -> CONTENT_AND_VIDEO_PATH
    int CONTENT_ONLY -> CONTENT_ONLY
com.tencent.connect.dataprovider.DataType$TextAndMediaPath -> com.tencent.connect.dataprovider.DataType$TextAndMediaPath:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getText() -> getText
    java.lang.String getMediaPath() -> getMediaPath
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextAndMediaPath$1 -> eO:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.dataprovider.DataType$TextOnly -> com.tencent.connect.dataprovider.DataType$TextOnly:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getText() -> getText
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.tencent.connect.dataprovider.DataType$TextOnly$1 -> eP:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.tencent.connect.dataprovider.ErrorCode -> com.tencent.connect.dataprovider.ErrorCode:
    int Success -> Success
    int NotSupportThisDataType -> NotSupportThisDataType
    int NotFromTencentApp -> NotFromTencentApp
    int NotFoundReturnActivity -> NotFoundReturnActivity
    int NotFoundTargetApp -> NotFoundTargetApp
    int FileNotInSdCard -> FileNotInSdCard
    int FileSizeTooLarge -> FileSizeTooLarge
    int PathIsNull -> PathIsNull
    int FileNotExist -> FileNotExist
    int FileIsEmpty -> FileIsEmpty
    int SdCardNotExist -> SdCardNotExist
com.tencent.connect.share.QQShare -> com.tencent.connect.share.QQShare:
    java.lang.String SHARE_TO_QQ_IMAGE_URL -> SHARE_TO_QQ_IMAGE_URL
    java.lang.String SHARE_TO_QQ_IMAGE_LOCAL_URL -> SHARE_TO_QQ_IMAGE_LOCAL_URL
    java.lang.String SHARE_TO_QQ_TITLE -> SHARE_TO_QQ_TITLE
    java.lang.String SHARE_TO_QQ_SUMMARY -> SHARE_TO_QQ_SUMMARY
    java.lang.String SHARE_TO_QQ_SITE -> SHARE_TO_QQ_SITE
    java.lang.String SHARE_TO_QQ_TARGET_URL -> SHARE_TO_QQ_TARGET_URL
    java.lang.String SHARE_TO_QQ_APP_NAME -> SHARE_TO_QQ_APP_NAME
    java.lang.String SHARE_TO_QQ_AUDIO_URL -> SHARE_TO_QQ_AUDIO_URL
    java.lang.String SHARE_TO_QQ_KEY_TYPE -> SHARE_TO_QQ_KEY_TYPE
    java.lang.String SHARE_TO_QQ_EXT_STR -> SHARE_TO_QQ_EXT_STR
    java.lang.String SHARE_TO_QQ_EXT_INT -> SHARE_TO_QQ_EXT_INT
    int SHARE_TO_QQ_FLAG_QZONE_AUTO_OPEN -> SHARE_TO_QQ_FLAG_QZONE_AUTO_OPEN
    int SHARE_TO_QQ_FLAG_QZONE_ITEM_HIDE -> SHARE_TO_QQ_FLAG_QZONE_ITEM_HIDE
    int SHARE_TO_QQ_TYPE_DEFAULT -> SHARE_TO_QQ_TYPE_DEFAULT
    int SHARE_TO_QQ_TYPE_AUDIO -> SHARE_TO_QQ_TYPE_AUDIO
    int SHARE_TO_QQ_TYPE_IMAGE -> SHARE_TO_QQ_TYPE_IMAGE
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> shareToQQ
    void b(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void a(com.tencent.connect.share.QQShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QQShare$1 -> eQ:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> saved
    void batchSaved(int,java.util.ArrayList) -> batchSaved
com.tencent.connect.share.QQShare$2 -> eR:
    android.os.Bundle a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.tencent.tauth.IUiListener d -> d
    android.app.Activity e -> e
    com.tencent.connect.share.QQShare f -> f
    void saved(int,java.lang.String) -> saved
    void batchSaved(int,java.util.ArrayList) -> batchSaved
com.tencent.connect.share.QzoneShare -> com.tencent.connect.share.QzoneShare:
    java.lang.String SHARE_TO_QZONE_KEY_TYPE -> SHARE_TO_QZONE_KEY_TYPE
    int SHARE_TO_QZONE_TYPE_NO_TYPE -> SHARE_TO_QZONE_TYPE_NO_TYPE
    int SHARE_TO_QZONE_TYPE_IMAGE_TEXT -> SHARE_TO_QZONE_TYPE_IMAGE_TEXT
    int SHARE_TO_QZONE_TYPE_IMAGE -> SHARE_TO_QZONE_TYPE_IMAGE
    java.lang.String SHARE_TO_QQ_IMAGE_URL -> SHARE_TO_QQ_IMAGE_URL
    java.lang.String SHARE_TO_QQ_IMAGE_LOCAL_URL -> SHARE_TO_QQ_IMAGE_LOCAL_URL
    java.lang.String SHARE_TO_QQ_TITLE -> SHARE_TO_QQ_TITLE
    java.lang.String SHARE_TO_QQ_SUMMARY -> SHARE_TO_QQ_SUMMARY
    java.lang.String SHARE_TO_QQ_SITE -> SHARE_TO_QQ_SITE
    java.lang.String SHARE_TO_QQ_TARGET_URL -> SHARE_TO_QQ_TARGET_URL
    java.lang.String SHARE_TO_QQ_APP_NAME -> SHARE_TO_QQ_APP_NAME
    java.lang.String SHARE_TO_QQ_AUDIO_URL -> SHARE_TO_QQ_AUDIO_URL
    java.lang.String SHARE_TO_QQ_EXT_STR -> SHARE_TO_QQ_EXT_STR
    java.lang.String SHARE_TO_QQ_EXT_INT -> SHARE_TO_QQ_EXT_INT
    boolean a -> e
    boolean b -> f
    boolean c -> g
    boolean d -> h
    void shareToQzone(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> shareToQzone
    java.lang.StringBuffer a(java.lang.StringBuffer,android.os.Bundle) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void a(com.tencent.connect.share.QzoneShare,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
com.tencent.connect.share.QzoneShare$1 -> eS:
    android.os.Bundle a -> a
    android.app.Activity b -> b
    com.tencent.tauth.IUiListener c -> c
    com.tencent.connect.share.QzoneShare d -> d
    void saved(int,java.lang.String) -> saved
    void batchSaved(int,java.util.ArrayList) -> batchSaved
com.tencent.connect.share.a -> com.tencent.connect.share.a:
    void a(android.content.Context,java.lang.String,com.tencent.utils.AsynLoadImgBack) -> a
    void a(android.content.Context,java.util.ArrayList,com.tencent.utils.AsynLoadImgBack) -> a
    java.lang.String a(android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap a(java.lang.String,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    boolean a(java.lang.String,int,int) -> a
com.tencent.connect.share.a$1 -> eT:
    com.tencent.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$2 -> eU:
    java.lang.String a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.connect.share.a$3 -> eV:
    com.tencent.utils.AsynLoadImgBack a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.connect.share.a$4 -> eW:
    java.util.ArrayList a -> a
    android.os.Handler b -> b
    void run() -> run
com.tencent.mm.a.a -> com.tencent.mm.a.a:
    java.lang.String a(byte[]) -> a
com.tencent.mm.sdk.a -> com.tencent.mm.sdk.a:
    android.content.ContentResolver a -> a
    java.lang.String[] b -> b
    java.util.HashMap c -> c
    com.tencent.mm.sdk.a$a d -> d
    java.lang.Object getValue(java.lang.String) -> a
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.a$a -> eX:
    java.util.Map e -> a
    java.util.Set f -> b
    boolean g -> c
    android.content.ContentResolver a -> d
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.a.a -> com.tencent.mm.sdk.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
com.tencent.mm.sdk.a.a$a -> com.tencent.mm.sdk.a.a$a:
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int flags -> flags
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.a -> com.tencent.mm.sdk.a.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a.a$a) -> a
com.tencent.mm.sdk.a.a.a$a -> com.tencent.mm.sdk.a.a.a$a:
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String j -> j
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.b -> com.tencent.mm.sdk.a.a.b:
    byte[] a(java.lang.String,int,java.lang.String) -> a
com.tencent.mm.sdk.b.a -> com.tencent.mm.sdk.b.a:
    int level -> a
    com.tencent.mm.sdk.b.a$a o -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int a() -> a
com.tencent.mm.sdk.b.a$a -> com.tencent.mm.sdk.b.a$a:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.b -> eY:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.c -> com.tencent.mm.sdk.b.c:
    boolean a(java.lang.String) -> a
com.tencent.mm.sdk.c.a -> com.tencent.mm.sdk.c.a:
com.tencent.mm.sdk.c.a$a -> com.tencent.mm.sdk.c.a$a:
    java.lang.Object a(int,java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> com.tencent.mm.sdk.c.a$b:
    android.net.Uri CONTENT_URI -> CONTENT_URI
com.tencent.mm.sdk.constants.Build -> com.tencent.mm.sdk.constants.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int MIN_SDK_INT -> MIN_SDK_INT
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
    int PAY_SUPPORTED_SDK_INT -> PAY_SUPPORTED_SDK_INT
    int OPENID_SUPPORTED_SDK_INT -> OPENID_SUPPORTED_SDK_INT
    int FAVORITE_SUPPPORTED_SDK_INT -> FAVORITE_SUPPPORTED_SDK_INT
    int MESSAGE_ACTION_SUPPPORTED_SDK_INT -> MESSAGE_ACTION_SUPPPORTED_SDK_INT
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
com.tencent.mm.sdk.constants.ConstantsAPI -> com.tencent.mm.sdk.constants.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    int COMMAND_PAY_BY_WX -> COMMAND_PAY_BY_WX
    int COMMAND_LAUNCH_BY_WX -> COMMAND_LAUNCH_BY_WX
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
com.tencent.mm.sdk.constants.ConstantsAPI$Token -> com.tencent.mm.sdk.constants.ConstantsAPI$Token:
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE_MSG -> WX_TOKEN_VALUE_MSG
    java.lang.String WX_TOKEN_PLATFORMID_KEY -> WX_TOKEN_PLATFORMID_KEY
    java.lang.String WX_TOKEN_PLATFORMID_VALUE -> WX_TOKEN_PLATFORMID_VALUE
    java.lang.String WX_TOKEN_JUMP_ARG -> WX_TOKEN_JUMP_ARG
com.tencent.mm.sdk.constants.ConstantsAPI$WXApp -> com.tencent.mm.sdk.constants.ConstantsAPI$WXApp:
    java.lang.String WXAPP_PACKAGE_NAME -> WXAPP_PACKAGE_NAME
    java.lang.String WXAPP_BROADCAST_PERMISSION -> WXAPP_BROADCAST_PERMISSION
    java.lang.String WXAPP_MSG_ENTRY_CLASSNAME -> WXAPP_MSG_ENTRY_CLASSNAME
com.tencent.mm.sdk.modelbase.BaseReq -> com.tencent.mm.sdk.modelbase.BaseReq:
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp -> com.tencent.mm.sdk.modelbase.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp$ErrCode -> com.tencent.mm.sdk.modelbase.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
com.tencent.mm.sdk.modelmsg.GetMessageFromWX -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX:
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req:
    java.lang.String username -> username
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX -> com.tencent.mm.sdk.modelmsg.LaunchFromWX:
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth -> com.tencent.mm.sdk.modelmsg.SendAuth:
com.tencent.mm.sdk.modelmsg.SendAuth$Req -> com.tencent.mm.sdk.modelmsg.SendAuth$Req:
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> com.tencent.mm.sdk.modelmsg.SendAuth$Resp:
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String url -> url
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX -> com.tencent.mm.sdk.modelmsg.SendMessageToWX:
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    int WXSceneFavorite -> WXSceneFavorite
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX:
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXAppExtendObject -> com.tencent.mm.sdk.modelmsg.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXAppLaunchData -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.modelmsg.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.modelmsg.WXEmojiObject -> com.tencent.mm.sdk.modelmsg.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXFileObject -> com.tencent.mm.sdk.modelmsg.WXFileObject:
    int contentLengthLimit -> a
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    void setContentLengthLimit(int) -> setContentLengthLimit
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXImageObject -> com.tencent.mm.sdk.modelmsg.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> com.tencent.mm.sdk.modelmsg.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    java.lang.String mediaTagName -> mediaTagName
    java.lang.String messageAction -> messageAction
    java.lang.String messageExt -> messageExt
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> a
com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    int TYPE_PRODUCT -> TYPE_PRODUCT
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMusicObject -> com.tencent.mm.sdk.modelmsg.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXTextObject -> com.tencent.mm.sdk.modelmsg.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXVideoObject -> com.tencent.mm.sdk.modelmsg.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXWebpageObject -> com.tencent.mm.sdk.modelmsg.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelpay.PayReq -> com.tencent.mm.sdk.modelpay.PayReq:
    java.lang.String appId -> appId
    java.lang.String partnerId -> partnerId
    java.lang.String prepayId -> prepayId
    java.lang.String nonceStr -> nonceStr
    java.lang.String timeStamp -> timeStamp
    java.lang.String packageValue -> packageValue
    java.lang.String sign -> sign
    java.lang.String extData -> extData
    com.tencent.mm.sdk.modelpay.PayReq$Options options -> options
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
com.tencent.mm.sdk.modelpay.PayReq$Options -> com.tencent.mm.sdk.modelpay.PayReq$Options:
    int INVALID_FLAGS -> INVALID_FLAGS
    java.lang.String callbackClassName -> callbackClassName
    int callbackFlags -> callbackFlags
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelpay.PayResp -> com.tencent.mm.sdk.modelpay.PayResp:
    java.lang.String prepayId -> prepayId
    java.lang.String returnKey -> returnKey
    java.lang.String extData -> extData
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplV10 -> eZ:
    android.content.Context context -> a
    java.lang.String appId -> b
    boolean checkSignature -> c
    boolean detached -> d
    java.lang.String wxappPayEntryClassname -> e
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
    boolean checkSumConsistent(byte[],byte[]) -> a
com.tencent.open.PKDialog -> com.tencent.open.PKDialog:
    java.lang.String TAG -> c
    java.lang.String mUrl -> d
    com.tencent.open.PKDialog$OnTimeListener mListener -> e
    com.tencent.open.b.a mFlMain -> f
    android.webkit.WebView mWebView -> g
    java.lang.ref.WeakReference sWeakContext -> h
    int mWebviewHeight -> i
    android.widget.Toast sToast -> j
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void callJs(java.lang.String,java.lang.String) -> callJs
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
    void onConsoleMessage(java.lang.String) -> a
    java.lang.String access$300() -> a
    java.lang.ref.WeakReference access$400() -> b
    com.tencent.open.PKDialog$OnTimeListener access$500(com.tencent.open.PKDialog) -> a
    android.webkit.WebView access$600(com.tencent.open.PKDialog) -> b
    void access$800(android.content.Context,java.lang.String) -> a
    void access$900(android.content.Context,java.lang.String) -> b
com.tencent.open.PKDialog$FbWebViewClient -> fa:
    com.tencent.open.PKDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.PKDialog$JsListener -> fb:
com.tencent.open.PKDialog$OnTimeListener -> fc:
    java.lang.ref.WeakReference mWeakCtx -> a
    java.lang.String mAction -> b
    java.lang.String mUrl -> c
    java.lang.String mAppid -> d
    com.tencent.tauth.IUiListener mWeakL -> e
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$700(com.tencent.open.PKDialog$OnTimeListener,java.lang.String) -> a
com.tencent.open.PKDialog$THandler -> fd:
    com.tencent.open.PKDialog$OnTimeListener mL -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.SocialApi -> com.tencent.open.SocialApi:
    com.tencent.open.SocialApiIml a -> a
    void invite(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> invite
    void story(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> story
    void gift(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> gift
    void ask(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> ask
    void reactive(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> reactive
    void brag(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> brag
    void challenge(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> challenge
    void grade(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> grade
    void voice(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> voice
    boolean checkVoiceApi(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> checkVoiceApi
com.tencent.open.SocialApiIml -> com.tencent.open.SocialApiIml:
    android.app.Activity b -> e
    android.app.ProgressDialog a -> f
    void gift(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> gift
    void ask(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> ask
    void reactive(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> reactive
    void a(android.app.Activity,java.lang.String,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void brag(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> brag
    void challenge(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> challenge
    void invite(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> invite
    void story(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> story
    void grade(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> grade
    com.tencent.open.SocialApiIml$b a(android.os.Bundle,java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> a
    void voice(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> voice
    void a(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(android.app.Activity,android.content.Intent,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IUiListener) -> a
    void writeEncryToken(android.content.Context) -> writeEncryToken
    boolean a() -> e
    void a(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> a
    void a(com.tencent.open.SocialApiIml) -> a
    android.app.Activity b(com.tencent.open.SocialApiIml) -> b
    void a(com.tencent.open.SocialApiIml,android.app.Activity,android.content.Intent,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IUiListener) -> a
    void a(com.tencent.open.SocialApiIml,android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> a
    void a(com.tencent.open.SocialApiIml,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IUiListener) -> a
    android.content.Context c(com.tencent.open.SocialApiIml) -> c
com.tencent.open.SocialApiIml$1 -> fe:
    android.os.Bundle a -> a
    android.app.Activity b -> b
    com.tencent.tauth.IUiListener c -> c
    com.tencent.open.SocialApiIml d -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.tencent.open.SocialApiIml$a -> com.tencent.open.SocialApiIml$a:
    com.tencent.open.SocialApiIml$b a -> a
    com.tencent.open.SocialApiIml b -> b
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.open.SocialApiIml$b -> ff:
    android.content.Intent a -> a
    java.lang.String b -> b
    android.os.Bundle c -> c
    java.lang.String d -> d
    com.tencent.tauth.IUiListener e -> e
com.tencent.open.SocialApiIml$c -> fg:
    com.tencent.tauth.IUiListener b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    android.os.Bundle e -> d
    com.tencent.open.SocialApiIml a -> e
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.open.SocialConstants -> com.tencent.open.SocialConstants:
    java.lang.String PARAM_APP_ID -> PARAM_APP_ID
    java.lang.String PARAM_OPEN_ID -> PARAM_OPEN_ID
    java.lang.String PARAM_HOPEN_ID -> PARAM_HOPEN_ID
    java.lang.String PARAM_SOURCE -> PARAM_SOURCE
    java.lang.String PARAM_ACT -> PARAM_ACT
    java.lang.String PARAM_CONSUMER_KEY -> PARAM_CONSUMER_KEY
    java.lang.String PARAM_APP_ICON -> PARAM_APP_ICON
    java.lang.String PARAM_APP_DESC -> PARAM_APP_DESC
    java.lang.String PARAM_APP_CUSTOM -> PARAM_APP_CUSTOM
    java.lang.String PARAM_IMG_DATA -> PARAM_IMG_DATA
    java.lang.String PARAM_EXCLUDE -> PARAM_EXCLUDE
    java.lang.String PARAM_SPECIFIED -> PARAM_SPECIFIED
    java.lang.String PARAM_ONLY -> PARAM_ONLY
    java.lang.String PARAM_RECEIVER -> PARAM_RECEIVER
    java.lang.String PARAM_TITLE -> PARAM_TITLE
    java.lang.String PARAM_COMMENT -> PARAM_COMMENT
    java.lang.String PARAM_SUMMARY -> PARAM_SUMMARY
    java.lang.String PARAM_APPNAME -> PARAM_APPNAME
    java.lang.String PARAM_IMAGE -> PARAM_IMAGE
    java.lang.String PARAM_IMAGE_URL -> PARAM_IMAGE_URL
    java.lang.String PARAM_TARGET_URL -> PARAM_TARGET_URL
    java.lang.String PARAM_APP_SOURCE -> PARAM_APP_SOURCE
    java.lang.String PARAM_URL -> PARAM_URL
    java.lang.String PARAM_TYPE -> PARAM_TYPE
    java.lang.String PARAM_PLAY_URL -> PARAM_PLAY_URL
    java.lang.String PARAM_SHARE_URL -> PARAM_SHARE_URL
    java.lang.String PARAM_AVATAR_URI -> PARAM_AVATAR_URI
    java.lang.String PARAM_IMG_URL -> PARAM_IMG_URL
    java.lang.String PARAM_SEND_MSG -> PARAM_SEND_MSG
    java.lang.String PARAM_TYPE_ID -> PARAM_TYPE_ID
    java.lang.String PARAM_ENCRY_EOKEN -> PARAM_ENCRY_EOKEN
    java.lang.String PARAM_SEND_IMG -> PARAM_SEND_IMG
    java.lang.String PARAM_REC_IMG -> PARAM_REC_IMG
    java.lang.String PARAM_REC_IMG_DESC -> PARAM_REC_IMG_DESC
    java.lang.String ACTION_STORY -> ACTION_STORY
    java.lang.String ACTION_INVITE -> ACTION_INVITE
    java.lang.String ACTION_CHALLENGE -> ACTION_CHALLENGE
    java.lang.String ACTION_BRAG -> ACTION_BRAG
    java.lang.String ACTION_ASK -> ACTION_ASK
    java.lang.String ACTION_GIFT -> ACTION_GIFT
    java.lang.String ACTION_GRADE -> ACTION_GRADE
    java.lang.String ACTION_CHECK_TOKEN -> ACTION_CHECK_TOKEN
    java.lang.String ACTION_VOICE -> ACTION_VOICE
    java.lang.String ACTION_REACTIVE -> ACTION_REACTIVE
    java.lang.String ACTIVITY_ASK_GIFT -> ACTIVITY_ASK_GIFT
    java.lang.String ACTIVITY_CHALLENGE -> ACTIVITY_CHALLENGE
    java.lang.String ACTIVITY_BRAG -> ACTIVITY_BRAG
    java.lang.String ACTIVITY_INVITE -> ACTIVITY_INVITE
    java.lang.String ACTIVITY_STORY -> ACTIVITY_STORY
    java.lang.String ACTIVITY_GRADE -> ACTIVITY_GRADE
    java.lang.String ACTIVITY_VOICE -> ACTIVITY_VOICE
    java.lang.String ACTIVITY_CHECK_FUNCTION -> ACTIVITY_CHECK_FUNCTION
    java.lang.String ACTIVITY_REACTIVE -> ACTIVITY_REACTIVE
    java.lang.String TYPE_REQUEST -> TYPE_REQUEST
    java.lang.String TYPE_FREEGIFT -> TYPE_FREEGIFT
    java.lang.String TYPE_REACTIVE -> TYPE_REACTIVE
com.tencent.open.TDialog -> com.tencent.open.TDialog:
    android.widget.FrameLayout$LayoutParams a -> c
    java.lang.ref.WeakReference c -> d
    java.lang.ref.WeakReference d -> e
    java.lang.ref.WeakReference e -> f
    java.lang.String f -> g
    com.tencent.open.TDialog$OnTimeListener g -> h
    android.widget.FrameLayout i -> i
    android.webkit.WebView j -> j
    android.widget.FrameLayout k -> k
    android.widget.ProgressBar l -> l
    android.widget.Toast b -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onConsoleMessage(java.lang.String) -> a
    java.lang.ref.WeakReference a() -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.ref.WeakReference b() -> b
    void b(android.content.Context,java.lang.String) -> b
    com.tencent.open.TDialog$OnTimeListener b(com.tencent.open.TDialog) -> a
    android.webkit.WebView c(com.tencent.open.TDialog) -> b
com.tencent.open.TDialog$FbWebViewClient -> fh:
    com.tencent.open.TDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.tencent.open.TDialog$JsListener -> fi:
com.tencent.open.TDialog$OnTimeListener -> fj:
    java.lang.ref.WeakReference mWeakCtx -> a
    java.lang.String mAction -> b
    java.lang.String mUrl -> c
    java.lang.String mAppid -> d
    com.tencent.tauth.IUiListener mWeakL -> e
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
    void access$000(com.tencent.open.TDialog$OnTimeListener,java.lang.String) -> a
com.tencent.open.TDialog$THandler -> fk:
    com.tencent.open.TDialog$OnTimeListener mL -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.open.TaskGuide -> com.tencent.open.TaskGuide:
    android.view.WindowManager$LayoutParams d -> f
    android.view.ViewGroup e -> g
    android.view.WindowManager f -> h
    android.os.Handler g -> i
    com.tencent.open.TaskGuide$h h -> j
    com.tencent.open.TaskGuide$k i -> k
    com.tencent.open.TaskGuide$k j -> l
    android.graphics.drawable.Drawable k -> m
    android.graphics.drawable.Drawable l -> n
    android.graphics.drawable.Drawable m -> o
    int n -> p
    int o -> q
    int p -> r
    int q -> s
    float C -> t
    android.view.animation.Interpolator D -> u
    boolean E -> v
    boolean F -> w
    boolean G -> x
    int I -> y
    int J -> z
    java.lang.Runnable L -> A
    java.lang.Runnable M -> B
    com.tencent.tauth.IUiListener c -> e
    void c() -> g
    int a(int) -> a
    void a(int,com.tencent.open.TaskGuide$k) -> a
    void showWindow() -> showWindow
    void d(int) -> b
    void h() -> h
    void a(boolean) -> a
    boolean j() -> i
    void removeWindow() -> removeWindow
    android.graphics.drawable.Drawable a(java.lang.String,android.content.Context) -> a
    void showTaskGuideWindow(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> showTaskGuideWindow
    boolean a(com.tencent.open.TaskGuide) -> a
    android.view.ViewGroup b(com.tencent.open.TaskGuide) -> b
    com.tencent.open.TaskGuide$k c(com.tencent.open.TaskGuide) -> c
    com.tencent.open.TaskGuide$k d(com.tencent.open.TaskGuide) -> d
    com.tencent.open.TaskGuide$k a(com.tencent.open.TaskGuide,int) -> a
    void b(com.tencent.open.TaskGuide,int) -> b
    void c(com.tencent.open.TaskGuide,int) -> c
    void e(com.tencent.open.TaskGuide) -> e
    android.view.ViewGroup a(com.tencent.open.TaskGuide,android.view.ViewGroup) -> a
    android.content.Context f(com.tencent.open.TaskGuide) -> f
    android.view.ViewGroup a(com.tencent.open.TaskGuide,android.content.Context) -> a
    android.view.WindowManager$LayoutParams a(com.tencent.open.TaskGuide,android.view.WindowManager$LayoutParams) -> a
    android.content.Context g(com.tencent.open.TaskGuide) -> g
    android.view.WindowManager$LayoutParams b(com.tencent.open.TaskGuide,android.content.Context) -> b
    void h(com.tencent.open.TaskGuide) -> h
    android.content.Context i(com.tencent.open.TaskGuide) -> i
    android.content.Context j(com.tencent.open.TaskGuide) -> j
    android.view.WindowManager$LayoutParams k(com.tencent.open.TaskGuide) -> k
    boolean a(com.tencent.open.TaskGuide,boolean) -> a
    void l(com.tencent.open.TaskGuide) -> l
    android.content.Context m(com.tencent.open.TaskGuide) -> m
    int d(com.tencent.open.TaskGuide,int) -> d
    android.content.Context n(com.tencent.open.TaskGuide) -> n
    int a() -> e
    int b() -> f
    android.graphics.drawable.Drawable o(com.tencent.open.TaskGuide) -> o
    android.graphics.drawable.Drawable p(com.tencent.open.TaskGuide) -> p
    void e(com.tencent.open.TaskGuide,int) -> e
    void q(com.tencent.open.TaskGuide) -> q
    android.view.animation.Interpolator r(com.tencent.open.TaskGuide) -> r
    int s(com.tencent.open.TaskGuide) -> s
    int t(com.tencent.open.TaskGuide) -> t
    android.view.WindowManager u(com.tencent.open.TaskGuide) -> u
    void v(com.tencent.open.TaskGuide) -> v
    java.lang.Runnable w(com.tencent.open.TaskGuide) -> w
    android.os.Handler x(com.tencent.open.TaskGuide) -> x
    com.tencent.open.TaskGuide$h a(com.tencent.open.TaskGuide,com.tencent.open.TaskGuide$h) -> a
    com.tencent.open.TaskGuide$h y(com.tencent.open.TaskGuide) -> y
    void a(com.tencent.open.TaskGuide,int,com.tencent.open.TaskGuide$k) -> a
    android.content.Context z(com.tencent.open.TaskGuide) -> z
    void a(com.tencent.open.TaskGuide,java.lang.String) -> a
com.tencent.open.TaskGuide$1 -> fl:
    int a -> a
    com.tencent.open.TaskGuide b -> b
    void run() -> run
com.tencent.open.TaskGuide$2 -> fm:
    com.tencent.open.TaskGuide a -> a
    void run() -> run
com.tencent.open.TaskGuide$3 -> fn:
    java.lang.String a -> a
    com.tencent.open.TaskGuide b -> b
    void run() -> run
com.tencent.open.TaskGuide$4 -> fo:
    int[] a -> a
com.tencent.open.TaskGuide$a -> fp:
    void a(java.lang.Exception) -> a
    void onIOException(java.io.IOException) -> onIOException
    void onMalformedURLException(java.net.MalformedURLException) -> onMalformedURLException
    void onJSONException(org.json.JSONException) -> onJSONException
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> onConnectTimeoutException
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> onSocketTimeoutException
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> onNetworkUnavailableException
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> onHttpStatusException
    void onUnknowException(java.lang.Exception) -> onUnknowException
com.tencent.open.TaskGuide$b -> fq:
    com.tencent.open.TaskGuide a -> a
    void run() -> run
com.tencent.open.TaskGuide$c -> fr:
    boolean a -> a
    float b -> b
    com.tencent.open.TaskGuide c -> c
    void run() -> run
com.tencent.open.TaskGuide$d -> fs:
    int b -> a
    com.tencent.open.TaskGuide c -> b
    void onComplete(org.json.JSONObject) -> onComplete
    void a(java.lang.Exception) -> a
com.tencent.open.TaskGuide$d$1 -> ft:
    java.lang.Exception a -> a
    com.tencent.open.TaskGuide$d b -> b
    void run() -> run
com.tencent.open.TaskGuide$e -> fu:
    int a -> a
    com.tencent.open.TaskGuide b -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.tencent.open.TaskGuide$f -> fv:
    int a -> a
    com.tencent.open.TaskGuide b -> b
    void onClick(android.view.View) -> onClick
com.tencent.open.TaskGuide$g -> fw:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int e -> d
com.tencent.open.TaskGuide$h -> fx:
    java.lang.String a -> a
    com.tencent.open.TaskGuide$g[] c -> b
com.tencent.open.TaskGuide$i -> fy:
    android.widget.TextView b -> a
    android.widget.Button c -> b
    com.tencent.open.TaskGuide$g d -> c
    com.tencent.open.TaskGuide a -> d
    void a(com.tencent.open.TaskGuide$k) -> a
com.tencent.open.TaskGuide$j -> fz:
    com.tencent.open.TaskGuide b -> a
    void onComplete(org.json.JSONObject) -> onComplete
    void a(java.lang.Exception) -> a
com.tencent.open.TaskGuide$j$1 -> fA:
    com.tencent.open.TaskGuide$j a -> a
    void run() -> run
com.tencent.open.TaskGuide$k -> fB:
    com.tencent.open.TaskGuide$k a -> a
    com.tencent.open.TaskGuide$k b -> b
    com.tencent.open.TaskGuide$k c -> c
    com.tencent.open.TaskGuide$k d -> d
    com.tencent.open.TaskGuide$k e -> e
    com.tencent.open.TaskGuide$k f -> f
    com.tencent.open.TaskGuide$k[] g -> g
    com.tencent.open.TaskGuide$k[] a() -> a
com.tencent.open.a -> com.tencent.open.a:
    java.util.HashMap a -> a
    void a(com.tencent.open.a$b,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.util.List,com.tencent.open.a$a) -> a
    boolean a(android.webkit.WebView,java.lang.String) -> a
com.tencent.open.a$a -> com.tencent.open.a$a:
    java.lang.ref.WeakReference a -> a
    long b -> b
    void a(java.lang.Object) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.tencent.open.a$b -> com.tencent.open.a$b:
    void call(java.lang.String,java.util.List,com.tencent.open.a$a) -> call
    boolean customCallback() -> customCallback
com.tencent.open.a.a -> com.tencent.open.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
com.tencent.open.a.b -> com.tencent.open.a.b:
    android.content.Context a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.tencent.open.a.b$a c -> c
    int d -> d
    boolean a(java.lang.String,java.lang.String,java.lang.String,int,long,long,long,java.lang.String) -> a
    int a(java.util.ArrayList) -> a
    boolean a() -> a
    boolean b() -> b
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    int e() -> e
com.tencent.open.a.b$a -> fC:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.open.a.c -> com.tencent.open.a.c:
    com.tencent.open.a.c a -> a
    long b -> b
    int c -> c
    boolean d -> d
    java.util.Random e -> e
    com.tencent.open.a.b f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    com.tencent.open.a.c a() -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,long,long,long,int,java.lang.String,java.lang.String,java.lang.String) -> a
    int b(android.content.Context,int) -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    int a(com.tencent.open.a.c,int) -> a
    int a(com.tencent.open.a.c) -> a
    boolean a(com.tencent.open.a.c,boolean) -> a
    java.util.ArrayList b(com.tencent.open.a.c) -> b
    com.tencent.open.a.b c(com.tencent.open.a.c) -> c
com.tencent.open.a.c$1 -> fD:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Bundle c -> c
    com.tencent.open.a.c d -> d
    void run() -> run
com.tencent.open.a.d -> com.tencent.open.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
com.tencent.open.b -> com.tencent.open.b:
    com.tencent.open.a jsBridge -> a
    android.webkit.WebChromeClient mChromeClient -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onConsoleMessage(java.lang.String) -> a
com.tencent.open.b$1 -> fE:
    com.tencent.open.b a -> a
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onConsoleMessage(java.lang.String,int,java.lang.String) -> onConsoleMessage
com.tencent.open.b.a -> com.tencent.open.b.a:
    android.graphics.Rect b -> a
    com.tencent.open.b.a$a d -> b
    void a(com.tencent.open.b.a$a) -> a
    void onMeasure(int,int) -> onMeasure
com.tencent.open.b.a$a -> com.tencent.open.b.a$a:
    void onKeyboardShown(int) -> onKeyboardShown
    void onKeyboardHidden() -> onKeyboardHidden
com.tencent.open.c -> com.tencent.open.c:
    java.text.SimpleDateFormat a -> a
    com.tencent.open.c$a b -> b
    java.util.HashMap a(android.graphics.Bitmap[]) -> a
    void a(java.lang.String) -> a
    java.lang.String b(android.graphics.Bitmap) -> a
    boolean a() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.tencent.open.c$a -> com.tencent.open.c$a:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.tencent.qzone.Albums -> com.tencent.qzone.Albums:
    void listAlbum(com.tencent.tauth.IUiListener) -> listAlbum
    void listPhotos(java.lang.String,com.tencent.tauth.IUiListener) -> listPhotos
    void uploadPicture(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> uploadPicture
    void addAlbum(java.lang.String,java.lang.String,com.tencent.qzone.Albums$AlbumSecurity,java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> addAlbum
com.tencent.qzone.Albums$AlbumSecurity -> com.tencent.qzone.Albums$AlbumSecurity:
    com.tencent.qzone.Albums$AlbumSecurity publicToAll -> publicToAll
    com.tencent.qzone.Albums$AlbumSecurity privateOnly -> privateOnly
    com.tencent.qzone.Albums$AlbumSecurity friendsOnly -> friendsOnly
    com.tencent.qzone.Albums$AlbumSecurity needQuestion -> needQuestion
    java.lang.String a -> a
    java.lang.String getSecurity() -> getSecurity
com.tencent.stat.EasyActivity -> com.tencent.stat.EasyActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.EasyListActivity -> com.tencent.stat.EasyListActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.tencent.stat.MtaSDkException -> com.tencent.stat.MtaSDkException:
com.tencent.stat.StatAppMonitor -> com.tencent.stat.StatAppMonitor:
    int SUCCESS_RESULT_TYPE -> SUCCESS_RESULT_TYPE
    int FAILURE_RESULT_TYPE -> FAILURE_RESULT_TYPE
    int LOGIC_FAILURE_RESULT_TYPE -> LOGIC_FAILURE_RESULT_TYPE
    java.lang.String interfaceName -> a
    long reqSize -> b
    long respSize -> c
    int resultType -> d
    long millisecondsConsume -> e
    int returnCode -> f
    int sampling -> g
    java.lang.String getInterfaceName() -> getInterfaceName
    void setInterfaceName(java.lang.String) -> setInterfaceName
    long getReqSize() -> getReqSize
    void setReqSize(long) -> setReqSize
    long getRespSize() -> getRespSize
    void setRespSize(long) -> setRespSize
    int getResultType() -> getResultType
    void setResultType(int) -> setResultType
    long getMillisecondsConsume() -> getMillisecondsConsume
    void setMillisecondsConsume(long) -> setMillisecondsConsume
    int getReturnCode() -> getReturnCode
    void setReturnCode(int) -> setReturnCode
    int getSampling() -> getSampling
    void setSampling(int) -> setSampling
com.tencent.stat.StatConfig -> com.tencent.stat.StatConfig:
    com.tencent.stat.common.StatLogger logger -> e
    com.tencent.stat.StatConfig$OnlineConfig userCfg -> a
    com.tencent.stat.StatConfig$OnlineConfig sdkCfg -> b
    com.tencent.stat.StatReportStrategy statSendStrategy -> f
    boolean enableStatService -> g
    int sessionTimoutMillis -> h
    int maxStoreEventCount -> i
    int maxLoadEventCount -> j
    int maxSendRetryCount -> k
    int maxBatchReportCount -> l
    java.lang.String HIBERNATE -> c
    java.lang.String ta_http_proxy -> m
    java.lang.String appkey -> n
    java.lang.String installChannel -> o
    java.lang.String qq -> d
    int sendPeriodMinutes -> p
    int maxParallelTimmingEvents -> q
    boolean enableSmartReporting -> r
    boolean isAutoExceptionCaught -> isAutoExceptionCaught
    java.lang.String statReportUrl -> s
    int maxSessionStatReportCount -> t
    int curSessionStatReportCount -> u
    int maxDaySessionNumbers -> v
    int currentDaySessionNumbers -> w
    int maxReportEventLength -> x
    boolean isBetween(int,int,int) -> a
    com.tencent.stat.StatReportStrategy getStatSendStrategy() -> getStatSendStrategy
    void setStatSendStrategy(com.tencent.stat.StatReportStrategy) -> setStatSendStrategy
    boolean isDebugEnable() -> isDebugEnable
    void setDebugEnable(boolean) -> setDebugEnable
    boolean isEnableStatService() -> isEnableStatService
    void setEnableStatService(boolean) -> setEnableStatService
    int getSessionTimoutMillis() -> getSessionTimoutMillis
    void setSessionTimoutMillis(int) -> setSessionTimoutMillis
    int getMaxBatchReportCount() -> getMaxBatchReportCount
    void setMaxBatchReportCount(int) -> setMaxBatchReportCount
    void setMaxSendRetryCount(int) -> setMaxSendRetryCount
    int getMaxSendRetryCount() -> getMaxSendRetryCount
    int getMaxLoadEventCount() -> a
    int getMaxStoreEventCount() -> getMaxStoreEventCount
    void setMaxStoreEventCount(int) -> setMaxStoreEventCount
    java.lang.String getCustomProperty(java.lang.String) -> getCustomProperty
    java.lang.String getCustomProperty(java.lang.String,java.lang.String) -> getCustomProperty
    void updateOnlineConfig(org.json.JSONObject) -> a
    void updateCfg(com.tencent.stat.StatConfig$OnlineConfig,org.json.JSONObject) -> a
    void updateReportStrategy(org.json.JSONObject) -> b
    void setConfig(com.tencent.stat.StatConfig$OnlineConfig) -> a
    org.apache.http.HttpHost getStatHttpProxy() -> b
    java.lang.String getAppKey(android.content.Context) -> getAppKey
    boolean updateAppkeys(java.lang.String) -> a
    void setAppKey(android.content.Context,java.lang.String) -> setAppKey
    void setAppKey(java.lang.String) -> setAppKey
    java.lang.String getInstallChannel(android.content.Context) -> getInstallChannel
    void setInstallChannel(java.lang.String) -> setInstallChannel
    java.lang.String getQQ() -> getQQ
    void setQQ(android.content.Context,java.lang.String) -> setQQ
    void setSendPeriodMinutes(int) -> setSendPeriodMinutes
    int getSendPeriodMinutes() -> getSendPeriodMinutes
    int getMaxParallelTimmingEvents() -> getMaxParallelTimmingEvents
    void setMaxParallelTimmingEvents(int) -> setMaxParallelTimmingEvents
    boolean isEnableSmartReporting() -> isEnableSmartReporting
    void setEnableSmartReporting(boolean) -> setEnableSmartReporting
    boolean isAutoExceptionCaught() -> isAutoExceptionCaught
    void setAutoExceptionCaught(boolean) -> setAutoExceptionCaught
    java.lang.String getStatReportUrl() -> getStatReportUrl
    void setStatReportUrl(java.lang.String) -> setStatReportUrl
    int getMaxSessionStatReportCount() -> getMaxSessionStatReportCount
    void setMaxSessionStatReportCount(int) -> setMaxSessionStatReportCount
    int getCurSessionStatReportCount() -> getCurSessionStatReportCount
    void setCurSessionStatReportCount(int) -> a
    void incCurSessionStatReportCount() -> c
    int getMaxDaySessionNumbers() -> getMaxDaySessionNumbers
    void setMaxDaySessionNumbers(int) -> setMaxDaySessionNumbers
    void incCurrentDaySessionNumbers() -> d
    void setCurrentDaySessionNumbers(int) -> b
    int getCurrentDaySessionNumbers() -> e
    int getMaxReportEventLength() -> getMaxReportEventLength
    void setMaxReportEventLength(int) -> setMaxReportEventLength
com.tencent.stat.StatConfig$OnlineConfig -> fF:
    int type -> a
    org.json.JSONObject props -> b
    java.lang.String md5sum -> c
    int version -> d
com.tencent.stat.StatDispatchCallback -> fG:
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatDispatcher -> fH:
    com.tencent.stat.common.StatLogger logger -> a
    org.apache.http.impl.client.DefaultHttpClient client -> b
    android.os.Handler handler -> c
    com.tencent.stat.StatDispatcher instance -> d
    android.content.Context applicationContext -> e
    void setApplicationContext(android.content.Context) -> a
    android.content.Context getApplicationContext() -> a
    com.tencent.stat.StatDispatcher getInstance() -> b
    void sendHttpPost(java.util.List,com.tencent.stat.StatDispatchCallback) -> a
    void send(java.util.List,com.tencent.stat.StatDispatchCallback) -> b
    void send(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> a
com.tencent.stat.StatDispatcher$1 -> fI:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
com.tencent.stat.StatDispatcher$2 -> fJ:
    java.util.List val$evs -> a
    com.tencent.stat.StatDispatchCallback val$cb -> b
    com.tencent.stat.StatDispatcher this$0 -> c
    void run() -> run
com.tencent.stat.StatReportStrategy -> com.tencent.stat.StatReportStrategy:
    com.tencent.stat.StatReportStrategy INSTANT -> INSTANT
    com.tencent.stat.StatReportStrategy ONLY_WIFI -> ONLY_WIFI
    com.tencent.stat.StatReportStrategy BATCH -> BATCH
    com.tencent.stat.StatReportStrategy APP_LAUNCH -> APP_LAUNCH
    com.tencent.stat.StatReportStrategy DEVELOPER -> DEVELOPER
    com.tencent.stat.StatReportStrategy PERIOD -> PERIOD
    com.tencent.stat.StatReportStrategy ONLY_WIFI_NO_CACHE -> ONLY_WIFI_NO_CACHE
    int v -> a
    com.tencent.stat.StatReportStrategy[] $VALUES -> b
    com.tencent.stat.StatReportStrategy[] values() -> values
    com.tencent.stat.StatReportStrategy valueOf(java.lang.String) -> valueOf
    int getIntValue() -> getIntValue
    com.tencent.stat.StatReportStrategy getStatReportStrategy(int) -> getStatReportStrategy
com.tencent.stat.StatService -> com.tencent.stat.StatService:
    android.os.Handler handler -> a
    java.util.Map timedEventMap -> b
    long lastActivityTimestamp -> c
    long nextDayStartTimestamp -> d
    int sessionId -> e
    java.lang.String last_pageId -> f
    java.lang.String lastReferPageId -> g
    java.util.Map timedPageEventMap -> h
    com.tencent.stat.common.StatLogger logger -> i
    java.lang.Thread$UncaughtExceptionHandler originalExceptionHandler -> j
    boolean firstSession -> k
    boolean isEmpty(java.lang.String) -> a
    android.os.Handler getHandler(android.content.Context) -> a
    org.json.JSONObject getEncodeConfig() -> c
    int getSessionID(android.content.Context,boolean) -> a
    void startNewSession(android.content.Context) -> startNewSession
    void stopSession() -> stopSession
    void onResume(android.content.Context) -> onResume
    void setEnvAttributes(android.content.Context,java.util.Map) -> setEnvAttributes
    void reportQQ(android.content.Context,java.lang.String) -> reportQQ
    boolean startStatService(android.content.Context,java.lang.String,java.lang.String) -> startStatService
    void onPause(android.content.Context) -> onPause
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportSdkSelfException(android.content.Context,java.lang.Throwable) -> a
    void reportException(android.content.Context,java.lang.Throwable) -> reportException
    void trackCustomEvent(android.content.Context,java.lang.String,java.lang.String[]) -> trackCustomEvent
    void trackCustomKVEvent(android.content.Context,java.lang.String,java.util.Properties) -> trackCustomKVEvent
    void trackCustomBeginEvent(android.content.Context,java.lang.String,java.lang.String[]) -> trackCustomBeginEvent
    void trackCustomEndEvent(android.content.Context,java.lang.String,java.lang.String[]) -> trackCustomEndEvent
    void trackCustomBeginKVEvent(android.content.Context,java.lang.String,java.util.Properties) -> trackCustomBeginKVEvent
    void trackCustomEndKVEvent(android.content.Context,java.lang.String,java.util.Properties) -> trackCustomEndKVEvent
    void reportAppMonitorStat(android.content.Context,com.tencent.stat.StatAppMonitor) -> reportAppMonitorStat
    void commitEvents(android.content.Context,int) -> commitEvents
    com.tencent.stat.common.StatLogger access$000() -> a
    java.lang.Thread$UncaughtExceptionHandler access$100() -> b
com.tencent.stat.StatService$1 -> fK:
    android.content.Context val$tempContext -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.tencent.stat.StatService$2 -> fL:
    int[] $SwitchMap$com$tencent$stat$StatReportStrategy -> a
com.tencent.stat.StatService$StatTask -> fM:
    com.tencent.stat.event.Event ev -> a
    com.tencent.stat.StatReportStrategy strategy -> b
    void sendEvents() -> a
    void sendEventsNow(boolean) -> a
    void run() -> run
    com.tencent.stat.event.Event access$200(com.tencent.stat.StatService$StatTask) -> a
com.tencent.stat.StatService$StatTask$1 -> fN:
    com.tencent.stat.StatService$StatTask this$0 -> a
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatService$StatTask$2 -> fO:
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatStore -> com.tencent.stat.StatStore:
    com.tencent.stat.StatStore$StatStoreHelper helper -> b
    android.os.Handler handler -> c
    int numStoredEvents -> a
    com.tencent.stat.common.User user -> d
    com.tencent.stat.common.StatLogger logger -> e
    com.tencent.stat.StatStore instance -> f
    java.util.HashMap kvMap -> g
    int getNumStoredEvents() -> getNumStoredEvents
    com.tencent.stat.StatStore getInstance(android.content.Context) -> getInstance
    com.tencent.stat.StatStore getInstance() -> getInstance
    com.tencent.stat.common.User getUser(android.content.Context) -> getUser
    void directDeleteEvents(java.util.List) -> b
    void directUpdateEvents(java.util.List,int) -> b
    void updateEvents(java.util.List,int) -> a
    void deleteEvents(java.util.List) -> a
    void directStoreEvent(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> a
    void storeEvent(com.tencent.stat.event.Event,com.tencent.stat.StatDispatchCallback) -> b
    void storeCfg(com.tencent.stat.StatConfig$OnlineConfig) -> a
    void loadEvents(int) -> a
    void loadKeyValues() -> b
    void access$000(com.tencent.stat.StatStore) -> a
    void access$100(com.tencent.stat.StatStore,java.util.List,int) -> a
    void access$200(com.tencent.stat.StatStore,java.util.List) -> a
    com.tencent.stat.StatStore$StatStoreHelper access$300(com.tencent.stat.StatStore) -> b
    com.tencent.stat.common.StatLogger access$400() -> a
    void access$500(com.tencent.stat.StatStore,java.util.List,int) -> b
com.tencent.stat.StatStore$1 -> fP:
    com.tencent.stat.StatStore this$0 -> a
    void run() -> run
com.tencent.stat.StatStore$2 -> fQ:
    java.util.List val$evs -> a
    int val$status -> b
    com.tencent.stat.StatStore this$0 -> c
    void run() -> run
com.tencent.stat.StatStore$3 -> fR:
    java.util.List val$evs -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$4 -> fS:
    com.tencent.stat.event.Event val$ev -> a
    com.tencent.stat.StatDispatchCallback val$cb -> b
    com.tencent.stat.StatStore this$0 -> c
    void run() -> run
com.tencent.stat.StatStore$5 -> fT:
    com.tencent.stat.StatConfig$OnlineConfig val$cfg -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$6 -> fU:
    com.tencent.stat.StatStore this$0 -> a
    void run() -> run
com.tencent.stat.StatStore$7 -> fV:
    int val$maxNumber -> a
    com.tencent.stat.StatStore this$0 -> b
    void run() -> run
com.tencent.stat.StatStore$7$1 -> fW:
    java.util.List val$evs -> a
    int val$loadNumber -> b
    com.tencent.stat.StatStore$7 this$1 -> c
    void onDispatchSuccess() -> a
    void onDispatchFailure() -> b
com.tencent.stat.StatStore$StatStoreHelper -> fX:
    java.lang.String DATABASE_NAME -> a
    int DATABASE_VERSION -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void upgradeUserToVer3(android.database.sqlite.SQLiteDatabase) -> a
    void upgradeEventsToVer3(android.database.sqlite.SQLiteDatabase) -> b
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.tencent.stat.StatStore$StoredEvent -> fY:
    long id -> a
    java.lang.String content -> b
    int send_count -> c
com.tencent.stat.common.Env -> com.tencent.stat.common.Env:
    com.tencent.stat.common.Env$BasicEnv basicEnv -> a
    java.lang.Integer tel_network -> b
    java.lang.String conn -> c
    org.json.JSONObject attr_json -> d
    void appendEnvAttr(android.content.Context,java.util.Map) -> appendEnvAttr
    void encode(org.json.JSONObject) -> encode
com.tencent.stat.common.Env$BasicEnv -> fZ:
    java.lang.String appVersion -> a
    java.lang.String sdkVersion -> b
    android.util.DisplayMetrics display -> c
    int osVersion -> d
    java.lang.String model -> e
    java.lang.String manufacture -> f
    java.lang.String language -> g
    java.lang.String channel -> h
    java.lang.String operator -> i
    java.lang.String timezone -> j
    java.lang.String sd -> k
    int jb -> l
com.tencent.stat.common.RC4 -> com.tencent.stat.common.RC4:
    byte[] key -> a
    byte[] encrypt(byte[]) -> encrypt
    byte[] decrypt(byte[]) -> decrypt
    byte[] encrypt(byte[],byte[]) -> a
com.tencent.stat.common.SdkProtection -> com.tencent.stat.common.SdkProtection:
    long valueNotSet -> a
    long getPreferencesValue(android.content.Context,java.lang.String) -> a
    boolean beginCheck(android.content.Context) -> beginCheck
    void endCheck(android.content.Context) -> endCheck
com.tencent.stat.common.StatBase64 -> com.tencent.stat.common.StatBase64:
    boolean $assertionsDisabled -> a
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.tencent.stat.common.StatBase64$Coder -> ga:
    byte[] output -> a
    int op -> b
com.tencent.stat.common.StatBase64$Decoder -> gb:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process(byte[],int,int,boolean) -> a
com.tencent.stat.common.StatBase64$Encoder -> gc:
    byte[] ENCODE -> f
    byte[] ENCODE_WEBSAFE -> g
    byte[] tail -> h
    int tailLen -> i
    int count -> j
    boolean do_padding -> c
    boolean do_newline -> d
    boolean do_cr -> e
    byte[] alphabet -> k
    boolean $assertionsDisabled -> l
    boolean process(byte[],int,int,boolean) -> a
com.tencent.stat.common.StatCommonHelper -> com.tencent.stat.common.StatCommonHelper:
    java.lang.String userId -> a
    java.lang.String appkey -> b
    java.lang.String macId -> c
    java.util.Random random -> d
    com.tencent.stat.common.StatLogger logger -> e
    java.util.Random getRandom() -> a
    int getNextSessionID() -> getNextSessionID
    byte[] deocdeGZipContent(byte[]) -> deocdeGZipContent
    java.lang.String md5sum(java.lang.String) -> md5sum
    org.apache.http.HttpHost getHttpProxy(android.content.Context) -> getHttpProxy
    java.lang.String getUserID(android.content.Context) -> getUserID
    java.lang.String getMacId(android.content.Context) -> getMacId
    android.util.DisplayMetrics getDisplayMetrics(android.content.Context) -> getDisplayMetrics
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean isWiFiActive(android.content.Context) -> isWiFiActive
    java.lang.String getWifiMacAddress(android.content.Context) -> getWifiMacAddress
    boolean isWifiNet(android.content.Context) -> isWifiNet
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    java.lang.String getAppKey(android.content.Context) -> getAppKey
    java.lang.String getInstallChannel(android.content.Context) -> getInstallChannel
    java.lang.String getActivityName(android.content.Context) -> getActivityName
    java.lang.String getDeviceID(android.content.Context) -> getDeviceID
    java.lang.String getSimOperator(android.content.Context) -> getSimOperator
    java.lang.String getCurAppVersion(android.content.Context) -> getCurAppVersion
    boolean checkPhoneState(android.content.Context) -> checkPhoneState
    java.lang.String getLinkedWay(android.content.Context) -> getLinkedWay
    java.lang.Integer getTelephonyNetworkType(android.content.Context) -> getTelephonyNetworkType
    java.lang.String getAppVersion(android.content.Context) -> getAppVersion
    void jsonPut(org.json.JSONObject,java.lang.String,java.lang.String) -> jsonPut
    int hasRootAccess(android.content.Context) -> hasRootAccess
    com.tencent.stat.common.StatLogger getLogger() -> getLogger
    long getTomorrowStartMilliseconds() -> getTomorrowStartMilliseconds
    java.lang.Long convertStringToLong(java.lang.String,java.lang.String,int,int,java.lang.Long) -> convertStringToLong
    long getSDKLongVersion(java.lang.String) -> getSDKLongVersion
    java.lang.String getExternalStorageInfo(android.content.Context) -> getExternalStorageInfo
    java.lang.String getDateFormat(long) -> getDateFormat
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
com.tencent.stat.common.StatCommonHelper$RootCmd -> gd:
    int systemRootState -> a
    boolean isRootSystem() -> a
com.tencent.stat.common.StatConstants -> com.tencent.stat.common.StatConstants:
    java.lang.String VERSION -> VERSION
    java.lang.String MTA_SERVER -> MTA_SERVER
    java.lang.String MTA_STAT_URL -> MTA_STAT_URL
    java.lang.String MTA_COOPERATION_TAG -> MTA_COOPERATION_TAG
    int STAT_DB_VERSION -> STAT_DB_VERSION
    int SDK_ONLINE_CONFIG_TYPE -> SDK_ONLINE_CONFIG_TYPE
    int USER_ONLINE_CONFIG_TYPE -> USER_ONLINE_CONFIG_TYPE
com.tencent.stat.common.StatLogger -> com.tencent.stat.common.StatLogger:
    java.lang.String tag -> a
    boolean debugEnable -> b
    int logLevel -> c
    boolean isDebugEnable() -> isDebugEnable
    void setDebugEnable(boolean) -> setDebugEnable
    int getLogLevel() -> getLogLevel
    void setLogLevel(int) -> setLogLevel
    void setTag(java.lang.String) -> setTag
    java.lang.String getLoggerClassInfo() -> a
    void info(java.lang.Object) -> info
    void i(java.lang.Object) -> i
    void verbose(java.lang.Object) -> verbose
    void v(java.lang.Object) -> v
    void warn(java.lang.Object) -> warn
    void w(java.lang.Object) -> w
    void error(java.lang.Object) -> error
    void error(java.lang.Exception) -> error
    void e(java.lang.Object) -> e
    void e(java.lang.Exception) -> e
    void debug(java.lang.Object) -> debug
    void d(java.lang.Object) -> d
com.tencent.stat.common.StatPreferences -> com.tencent.stat.common.StatPreferences:
    android.content.SharedPreferences defaultPerferences -> a
    android.content.SharedPreferences getInstance(android.content.Context) -> a
    long getLong(android.content.Context,java.lang.String,long) -> getLong
    void putLong(android.content.Context,java.lang.String,long) -> putLong
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> getString
    void putString(android.content.Context,java.lang.String,java.lang.String) -> putString
com.tencent.stat.common.User -> com.tencent.stat.common.User:
    java.lang.String uid -> a
    java.lang.String mac -> b
    int type -> c
    java.lang.String getUid() -> getUid
    java.lang.String getMac() -> getMac
    void setType(int) -> setType
    int getType() -> getType
com.tencent.stat.event.AdditionEvent -> com.tencent.stat.event.AdditionEvent:
    java.util.Map map -> c
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.stat.event.CustomEvent -> com.tencent.stat.event.CustomEvent:
    com.tencent.stat.event.CustomEvent$Key key -> c
    long duration -> d
    com.tencent.stat.event.CustomEvent$Key getKey() -> getKey
    void setDuration(long) -> setDuration
    void setArgs(java.lang.String[]) -> setArgs
    void setProperties(java.util.Properties) -> setProperties
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.stat.event.CustomEvent$Key -> com.tencent.stat.event.CustomEvent$Key:
    java.lang.String id -> a
    java.lang.String[] args -> b
    java.util.Properties prop -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.tencent.stat.event.ErrorEvent -> com.tencent.stat.event.ErrorEvent:
    java.lang.String error -> c
    int errorAttr -> d
    int maxErrorLength -> e
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.stat.event.Event -> com.tencent.stat.event.Event:
    java.lang.String appkey -> c
    long timestamp -> d
    int sessionId -> e
    com.tencent.stat.common.User user -> a
    android.content.Context ctx -> b
    long getTimestamp() -> getTimestamp
    android.content.Context getContext() -> getContext
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
    boolean encode(org.json.JSONObject) -> encode
    java.lang.String toJsonString() -> toJsonString
com.tencent.stat.event.EventType -> com.tencent.stat.event.EventType:
    com.tencent.stat.event.EventType PAGE_VIEW -> PAGE_VIEW
    com.tencent.stat.event.EventType SESSION_ENV -> SESSION_ENV
    com.tencent.stat.event.EventType ERROR -> ERROR
    com.tencent.stat.event.EventType CUSTOM -> CUSTOM
    com.tencent.stat.event.EventType ADDITION -> ADDITION
    com.tencent.stat.event.EventType MONITOR_STAT -> MONITOR_STAT
    int v -> a
    int GetIntValue() -> GetIntValue
com.tencent.stat.event.MonitorStatEvent -> com.tencent.stat.event.MonitorStatEvent:
    com.tencent.stat.StatAppMonitor monitor -> c
    java.lang.String simOperator -> d
    java.lang.String appVersion -> e
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.stat.event.PageView -> com.tencent.stat.event.PageView:
    java.lang.Long duration -> c
    java.lang.String pageId -> d
    java.lang.String referPageId -> e
    com.tencent.stat.event.EventType getType() -> getType
    java.lang.String getPageId() -> getPageId
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.stat.event.SessionEnv -> com.tencent.stat.event.SessionEnv:
    com.tencent.stat.common.Env env -> c
    org.json.JSONObject cfgJson -> d
    com.tencent.stat.event.EventType getType() -> getType
    boolean onEncode(org.json.JSONObject) -> onEncode
com.tencent.t.Weibo -> com.tencent.t.Weibo:
    void getWeiboInfo(com.tencent.tauth.IUiListener) -> getWeiboInfo
    void sendText(java.lang.String,com.tencent.tauth.IUiListener) -> sendText
    void sendPicText(java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> sendPicText
    void nickTips(java.lang.String,int,com.tencent.tauth.IUiListener) -> nickTips
    void atFriends(int,com.tencent.tauth.IUiListener) -> atFriends
    void deleteText(java.lang.String,com.tencent.tauth.IUiListener) -> deleteText
com.tencent.tauth.AuthActivity -> com.tencent.tauth.AuthActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void execAuthCallback(android.os.Bundle,java.lang.String) -> a
    void execShareToQQCallback(android.os.Bundle) -> a
com.tencent.tauth.IRequestListener -> com.tencent.tauth.IRequestListener:
    void onComplete(org.json.JSONObject) -> onComplete
    void onIOException(java.io.IOException) -> onIOException
    void onMalformedURLException(java.net.MalformedURLException) -> onMalformedURLException
    void onJSONException(org.json.JSONException) -> onJSONException
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> onConnectTimeoutException
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> onSocketTimeoutException
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> onNetworkUnavailableException
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> onHttpStatusException
    void onUnknowException(java.lang.Exception) -> onUnknowException
com.tencent.tauth.IUiListener -> com.tencent.tauth.IUiListener:
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.tauth.LbsAgent -> com.tencent.tauth.LbsAgent:
    com.tencent.tauth.SosoLocationListener sosoListener -> a
    boolean verifyRegCode() -> verifyRegCode
    void requestLocationUpdate(android.content.Context,com.tencent.tauth.LbsAgent$OnGetLocationListener) -> requestLocationUpdate
    void removeUpdate() -> removeUpdate
com.tencent.tauth.LbsAgent$OnGetLocationListener -> com.tencent.tauth.LbsAgent$OnGetLocationListener:
    void onLocationUpdate(android.location.Location) -> onLocationUpdate
com.tencent.tauth.LocationApi -> com.tencent.tauth.LocationApi:
    android.os.HandlerThread mHandlerThread -> e
    android.os.Handler mHandler -> f
    android.os.Handler mMainHandler -> g
    com.tencent.tauth.LbsAgent mLbsAgent -> h
    android.os.Bundle mParams -> i
    com.tencent.tauth.IUiListener mSearchListener -> j
    void init() -> e
    void searchNearby(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> searchNearby
    void deleteLocation(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> deleteLocation
    boolean checkNetworkAvailable() -> f
    org.json.JSONObject unavailableNetworkJson() -> g
    void onLocationUpdate(android.location.Location) -> onLocationUpdate
    android.content.Context access$000(com.tencent.tauth.LocationApi) -> a
    com.tencent.tauth.LbsAgent access$100(com.tencent.tauth.LocationApi) -> b
    android.os.Handler access$200(com.tencent.tauth.LocationApi) -> c
    void access$300(com.tencent.tauth.LocationApi,int,java.lang.String) -> a
    android.content.Context access$400(com.tencent.tauth.LocationApi) -> d
    com.tencent.connect.auth.QQToken access$500(com.tencent.tauth.LocationApi) -> e
com.tencent.tauth.LocationApi$1 -> ge:
    com.tencent.tauth.LocationApi this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.tauth.LocationApi$2 -> gf:
    com.tencent.tauth.LocationApi this$0 -> a
    void run() -> run
com.tencent.tauth.LocationApi$3 -> gg:
    java.lang.String[] val$args -> a
    java.lang.String val$action -> b
    com.tencent.tauth.LocationApi this$0 -> c
    void run() -> run
com.tencent.tauth.LocationApi$BaseRequestListener -> gh:
    void handleException(java.lang.Exception) -> a
    void onIOException(java.io.IOException) -> onIOException
    void onMalformedURLException(java.net.MalformedURLException) -> onMalformedURLException
    void onJSONException(org.json.JSONException) -> onJSONException
    void onConnectTimeoutException(org.apache.http.conn.ConnectTimeoutException) -> onConnectTimeoutException
    void onSocketTimeoutException(java.net.SocketTimeoutException) -> onSocketTimeoutException
    void onNetworkUnavailableException(com.tencent.utils.HttpUtils$NetworkUnavailableException) -> onNetworkUnavailableException
    void onHttpStatusException(com.tencent.utils.HttpUtils$HttpStatusException) -> onHttpStatusException
    void onUnknowException(java.lang.Exception) -> onUnknowException
com.tencent.tauth.LocationApi$TaskRequestListener -> gi:
    com.tencent.tauth.IUiListener lis -> a
    void onComplete(org.json.JSONObject) -> onComplete
    void handleException(java.lang.Exception) -> a
com.tencent.tauth.SosoLocationListener -> com.tencent.tauth.SosoLocationListener:
    com.tencent.tauth.LbsAgent$OnGetLocationListener listener -> a
    void onLocationDataUpdate(byte[],int) -> onLocationDataUpdate
    void onLocationUpdate(com.tencent.a.a.a.d) -> onLocationUpdate
    void onStatusUpdate(int) -> onStatusUpdate
com.tencent.tauth.Tencent -> com.tencent.tauth.Tencent:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    android.content.Context mContext -> b
    com.tencent.tauth.LocationApi mLocationApi -> c
    com.tencent.tauth.Tencent createInstance(java.lang.String,android.content.Context) -> createInstance
    boolean checkManifestConfig(android.content.Context,java.lang.String) -> a
    int login(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> login
    int loginWithOEM(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener,java.lang.String,java.lang.String,java.lang.String) -> loginWithOEM
    void logout(android.content.Context) -> logout
    int reAuth(android.app.Activity,java.lang.String,com.tencent.tauth.IUiListener) -> reAuth
    int ask(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> ask
    int reactive(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> reactive
    int searchNearby(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> searchNearby
    int deleteLocation(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> deleteLocation
    int brag(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> brag
    int challenge(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> challenge
    int gift(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> gift
    int invite(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> invite
    int story(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> story
    void setAvatar(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> setAvatar
    void setAvatar(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener,int,int) -> setAvatar
    void requestAsync(java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IRequestListener,java.lang.Object) -> requestAsync
    org.json.JSONObject request(java.lang.String,android.os.Bundle,java.lang.String) -> request
    void shareToQQ(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> shareToQQ
    void shareToQzone(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> shareToQzone
    void grade(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> grade
    void voice(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> voice
    void showTaskGuideWindow(android.app.Activity,android.os.Bundle,com.tencent.tauth.IUiListener) -> showTaskGuideWindow
    boolean onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean isSessionValid() -> isSessionValid
    java.lang.String getAppId() -> getAppId
    java.lang.String getAccessToken() -> getAccessToken
    long getExpiresIn() -> getExpiresIn
    java.lang.String getOpenId() -> getOpenId
    void setAccessToken(java.lang.String,java.lang.String) -> setAccessToken
    void setOpenId(java.lang.String) -> setOpenId
    boolean isReady() -> isReady
    com.tencent.connect.auth.QQToken getQQToken() -> getQQToken
    boolean isSupportSSOLogin(android.app.Activity) -> isSupportSSOLogin
com.tencent.tauth.UiError -> com.tencent.tauth.UiError:
    int errorCode -> errorCode
    java.lang.String errorMessage -> errorMessage
    java.lang.String errorDetail -> errorDetail
com.tencent.utils.AsynLoadImg -> com.tencent.utils.AsynLoadImg:
    java.lang.String b -> a
    com.tencent.utils.AsynLoadImgBack c -> b
    java.lang.String d -> c
    long e -> d
    android.os.Handler f -> e
    java.lang.Runnable g -> f
    void save(java.lang.String,com.tencent.utils.AsynLoadImgBack) -> save
    boolean saveFile(android.graphics.Bitmap,java.lang.String) -> saveFile
    android.graphics.Bitmap getbitmap(java.lang.String) -> getbitmap
    com.tencent.utils.AsynLoadImgBack a(com.tencent.utils.AsynLoadImg) -> a
    java.lang.String b(com.tencent.utils.AsynLoadImg) -> b
    java.lang.String a() -> a
    android.os.Handler c(com.tencent.utils.AsynLoadImg) -> c
    long d(com.tencent.utils.AsynLoadImg) -> d
com.tencent.utils.AsynLoadImg$1 -> gj:
    com.tencent.utils.AsynLoadImg a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.utils.AsynLoadImg$2 -> gk:
    com.tencent.utils.AsynLoadImg a -> a
    void run() -> run
com.tencent.utils.AsynLoadImgBack -> com.tencent.utils.AsynLoadImgBack:
    int LOAD_IMAGE_COMPLETED -> LOAD_IMAGE_COMPLETED
    int LOAD_IMAGE_PATH_NULL -> LOAD_IMAGE_PATH_NULL
    int LOAD_IMAGE_NO_SDCARD -> LOAD_IMAGE_NO_SDCARD
    int LOAD_IMAGE_IMAGE_FORMAT_ERROR -> LOAD_IMAGE_IMAGE_FORMAT_ERROR
    void saved(int,java.lang.String) -> saved
    void batchSaved(int,java.util.ArrayList) -> batchSaved
com.tencent.utils.DataConvert -> com.tencent.utils.DataConvert:
    byte[] intToBytes(int) -> intToBytes
    int bytesToInt(byte[]) -> bytesToInt
    byte[] intToBytes2(int) -> intToBytes2
    int byteToInt2(byte[]) -> byteToInt2
    java.lang.String toHexString(byte[]) -> toHexString
    byte[] string2bytes(java.lang.String) -> string2bytes
    byte[] string2ascii(java.lang.String) -> string2ascii
    int putInt2Bytes(int,byte[],int) -> putInt2Bytes
    int putShort2Bytes(int,byte[],int) -> putShort2Bytes
    int putString2Bytes(java.lang.String,byte[],int) -> putString2Bytes
    int putBytes2Bytes(byte[],byte[],int) -> putBytes2Bytes
    int putBytes2Bytes(byte[],int,byte[],int) -> putBytes2Bytes
com.tencent.utils.HttpUtils -> com.tencent.utils.HttpUtils:
    org.json.JSONObject request(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String) -> request
    void requestAsync(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle,java.lang.String,com.tencent.tauth.IRequestListener) -> requestAsync
    void a(android.content.Context,com.tencent.connect.auth.QQToken,java.lang.String) -> a
    int a(java.io.IOException) -> a
    com.tencent.utils.Util$Statistic openUrl2(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle) -> openUrl2
    java.lang.String a(org.apache.http.HttpResponse) -> a
    org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String) -> getHttpClient
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> encodePostBody
    com.tencent.utils.HttpUtils$NetworkProxy getProxy(android.content.Context) -> getProxy
    int a(android.content.Context) -> a
    org.json.JSONObject upload(com.tencent.connect.auth.QQToken,android.content.Context,java.lang.String,android.os.Bundle) -> upload
com.tencent.utils.HttpUtils$1 -> gl:
    com.tencent.connect.auth.QQToken a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    android.os.Bundle d -> d
    java.lang.String e -> e
    com.tencent.tauth.IRequestListener f -> f
    void run() -> run
com.tencent.utils.HttpUtils$CustomSSLSocketFactory -> com.tencent.utils.HttpUtils$CustomSSLSocketFactory:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.tencent.utils.HttpUtils$HttpStatusException -> com.tencent.utils.HttpUtils$HttpStatusException:
    java.lang.String ERROR_INFO -> ERROR_INFO
com.tencent.utils.HttpUtils$MyX509TrustManager -> com.tencent.utils.HttpUtils$MyX509TrustManager:
    javax.net.ssl.X509TrustManager a -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.tencent.utils.HttpUtils$NetworkProxy -> com.tencent.utils.HttpUtils$NetworkProxy:
    java.lang.String host -> host
    int port -> port
com.tencent.utils.HttpUtils$NetworkUnavailableException -> com.tencent.utils.HttpUtils$NetworkUnavailableException:
    java.lang.String ERROR_INFO -> ERROR_INFO
com.tencent.utils.OpenConfig -> com.tencent.utils.OpenConfig:
    java.util.HashMap a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    org.json.JSONObject e -> e
    long f -> f
    int g -> g
    boolean h -> h
    com.tencent.utils.OpenConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    java.lang.String a(java.lang.String) -> a
    void b() -> a
    void c() -> b
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    long getLong(java.lang.String) -> getLong
    double getDouble(java.lang.String) -> getDouble
    boolean getBoolean(java.lang.String) -> getBoolean
    java.lang.Object get(java.lang.String) -> get
    void b(java.lang.String) -> b
    android.content.Context a(com.tencent.utils.OpenConfig) -> a
    void a(com.tencent.utils.OpenConfig,org.json.JSONObject) -> a
    int a(com.tencent.utils.OpenConfig,int) -> a
com.tencent.utils.OpenConfig$1 -> gm:
    android.os.Bundle a -> a
    com.tencent.utils.OpenConfig b -> b
    void run() -> run
com.tencent.utils.ServerSetting -> com.tencent.utils.ServerSetting:
    java.lang.String a -> a
    int ENVIRONMENT_NORMOL -> ENVIRONMENT_NORMOL
    int ENVIRONMENT_EXPERIENCE -> ENVIRONMENT_EXPERIENCE
    java.lang.String KEY_OPEN_SETTING -> KEY_OPEN_SETTING
    java.lang.String KEY_OPEN_ENV -> KEY_OPEN_ENV
    java.lang.String KEY_HOST_FUSION -> KEY_HOST_FUSION
    java.lang.String KEY_HOST_APPIC -> KEY_HOST_APPIC
    java.lang.String KEY_HOST_OPEN_MOBILE -> KEY_HOST_OPEN_MOBILE
    java.lang.String KEY_HOST_MAPP_QZONE -> KEY_HOST_MAPP_QZONE
    java.lang.String KEY_HOST_ANALY -> KEY_HOST_ANALY
    java.lang.String KEY_HOST_QZAPP_QLOGO -> KEY_HOST_QZAPP_QLOGO
    java.lang.String KEY_HOST_I_GTIMG -> KEY_HOST_I_GTIMG
    java.lang.String KEY_HOST_APP_SUPPORT -> KEY_HOST_APP_SUPPORT
    java.lang.String KEY_HOST_QZS_QQ -> KEY_HOST_QZS_QQ
    java.lang.String DEFAULT_REDIRECT_URI -> DEFAULT_REDIRECT_URI
    java.lang.String DEFAULT_CGI_AUTHORIZE -> DEFAULT_CGI_AUTHORIZE
    java.lang.String DEFAULT_URL_SEND_STORY -> DEFAULT_URL_SEND_STORY
    java.lang.String DEFAULT_URL_INVITE -> DEFAULT_URL_INVITE
    java.lang.String DEFAULT_URL_REPORT -> DEFAULT_URL_REPORT
    java.lang.String DEFAULT_URL_GRAPH_BASE -> DEFAULT_URL_GRAPH_BASE
    java.lang.String DEFAULT_URL_BRAG -> DEFAULT_URL_BRAG
    java.lang.String DEFAULT_URL_ASK -> DEFAULT_URL_ASK
    java.lang.String DEFAULT_URL_GIFT -> DEFAULT_URL_GIFT
    java.lang.String DEFAULT_LOCAL_STORAGE_URI -> DEFAULT_LOCAL_STORAGE_URI
    java.lang.String DEFAULT_URL_VOICE -> DEFAULT_URL_VOICE
    java.lang.String DEFAULT_URL_REACTIVE -> DEFAULT_URL_REACTIVE
    com.tencent.utils.ServerSetting b -> b
    java.lang.ref.WeakReference c -> c
    com.tencent.utils.ServerSetting getInstance() -> getInstance
    void changeServer() -> changeServer
    java.lang.String getEnvUrl(android.content.Context,java.lang.String) -> getEnvUrl
    void setEnvironment(android.content.Context,int) -> setEnvironment
com.tencent.utils.SystemUtils -> com.tencent.utils.SystemUtils:
    java.lang.String QQ_VERSION_NAME_4_1_0 -> QQ_VERSION_NAME_4_1_0
    java.lang.String QQ_VERSION_NAME_4_2_0 -> QQ_VERSION_NAME_4_2_0
    java.lang.String QQ_VERSION_NAME_4_3_0 -> QQ_VERSION_NAME_4_3_0
    java.lang.String QQ_VERSION_NAME_4_5_0 -> QQ_VERSION_NAME_4_5_0
    java.lang.String QQ_VERSION_NAME_4_6_0 -> QQ_VERSION_NAME_4_6_0
    java.lang.String QQ_SHARE_CALLBACK_ACTION -> QQ_SHARE_CALLBACK_ACTION
    java.lang.String QZONE_SHARE_CALLBACK_ACTION -> QZONE_SHARE_CALLBACK_ACTION
    java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> getAppVersionName
    int compareVersion(java.lang.String,java.lang.String) -> compareVersion
    boolean isAppSignatureValid(android.content.Context,java.lang.String,java.lang.String) -> isAppSignatureValid
    java.lang.String getAppSignatureMD5(android.content.Context,java.lang.String) -> getAppSignatureMD5
    boolean isActivityExist(android.content.Context,android.content.Intent) -> isActivityExist
    java.lang.String getRealPathFromUri(android.app.Activity,android.net.Uri) -> getRealPathFromUri
    java.lang.String getAppName(android.content.Context) -> getAppName
    int compareQQVersion(android.content.Context,java.lang.String) -> compareQQVersion
    boolean checkMobileQQ(android.content.Context) -> checkMobileQQ
com.tencent.utils.TemporaryStorage -> com.tencent.utils.TemporaryStorage:
    java.util.HashMap a -> a
    java.lang.Object set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String) -> get
com.tencent.utils.Util -> com.tencent.utils.Util:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> encodePostBody
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    org.json.JSONObject decodeUrlToJson(org.json.JSONObject,java.lang.String) -> decodeUrlToJson
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    org.json.JSONObject parseUrlToJson(java.lang.String) -> parseUrlToJson
    com.tencent.utils.Util$Statistic upload(android.content.Context,java.lang.String,android.os.Bundle) -> upload
    java.lang.String a(org.apache.http.HttpResponse) -> a
    org.json.JSONObject parseJson(java.lang.String) -> parseJson
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    void logd(java.lang.String,java.lang.String) -> logd
    java.lang.String getUserIp() -> getUserIp
    boolean isEmpty(java.lang.String) -> isEmpty
    boolean a(android.content.Context) -> a
    boolean openBrowser(android.content.Context,java.lang.String) -> openBrowser
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isMobileQQSupportShare(android.content.Context) -> isMobileQQSupportShare
    java.lang.String encrypt(java.lang.String) -> encrypt
    char a(int) -> a
    void reportBernoulli(android.content.Context,java.lang.String,long,java.lang.String) -> reportBernoulli
    boolean hasSDCard() -> hasSDCard
    java.lang.String toHexString(byte[]) -> toHexString
    java.lang.String toHexString(java.lang.String) -> toHexString
    java.lang.String hexToString(java.lang.String) -> hexToString
    java.lang.String getAppVersion(android.content.Context) -> getAppVersion
    java.lang.String getApplicationLable(android.content.Context) -> getApplicationLable
    boolean isValidUrl(java.lang.String) -> isValidUrl
    boolean isValidPath(java.lang.String) -> isValidPath
    boolean fileExists(java.lang.String) -> fileExists
    java.lang.String subString(java.lang.String,int,java.lang.String,java.lang.String) -> subString
com.tencent.utils.Util$1 -> gn:
    android.content.Context a -> a
    android.os.Bundle b -> b
    void run() -> run
com.tencent.utils.Util$Statistic -> com.tencent.utils.Util$Statistic:
    java.lang.String response -> response
    long reqSize -> reqSize
    long rspSize -> rspSize
com.tencent.weiyun.FileManager -> com.tencent.weiyun.FileManager:
    java.lang.String[] a -> e
    java.lang.String[] b -> f
    void getFileList(com.tencent.weiyun.FileManager$WeiyunFileType,com.tencent.weiyun.IGetFileListListener) -> getFileList
    void deleteFile(com.tencent.weiyun.FileManager$WeiyunFileType,java.lang.String,com.tencent.tauth.IUiListener) -> deleteFile
    void downLoadFile(com.tencent.weiyun.FileManager$WeiyunFileType,com.tencent.weiyun.WeiyunFile,java.lang.String,com.tencent.weiyun.IDownLoadFileCallBack) -> downLoadFile
    void downLoadThumb(com.tencent.weiyun.WeiyunFile,java.lang.String,java.lang.String,com.tencent.weiyun.IDownLoadFileCallBack) -> downLoadThumb
    void uploadFile(com.tencent.weiyun.FileManager$WeiyunFileType,java.lang.String,com.tencent.weiyun.IUploadFileCallBack) -> uploadFile
    android.os.Bundle a(com.tencent.weiyun.FileManager) -> a
    com.tencent.connect.auth.QQToken b(com.tencent.weiyun.FileManager) -> b
    android.os.Bundle c(com.tencent.weiyun.FileManager) -> c
    com.tencent.connect.auth.QQToken d(com.tencent.weiyun.FileManager) -> d
com.tencent.weiyun.FileManager$DownLoadImp -> go:
    android.content.Context mContext -> a
    com.tencent.weiyun.FileManager$WeiyunFileType mFileType -> b
    com.tencent.weiyun.WeiyunFile mWeiyunFile -> c
    java.lang.String mSavePath -> d
    com.tencent.weiyun.IDownLoadFileCallBack mCallback -> e
    android.os.Handler mHandler -> f
    java.io.File mFile -> o
    java.lang.String mDownloadEncryptUrl -> g
    java.lang.String mDownloadCookieName -> h
    java.lang.String mDownloadCookieValue -> i
    java.lang.String mDownloadServerHost -> j
    int mDownloadServerPort -> k
    java.lang.String mDownloadThumbSize -> l
    java.lang.String mThumbSize -> m
    com.tencent.weiyun.FileManager this$0 -> n
    void start() -> a
com.tencent.weiyun.FileManager$DownLoadImp$1 -> gp:
    com.tencent.weiyun.FileManager$DownLoadImp this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.weiyun.FileManager$DownLoadImp$2 -> gq:
    com.tencent.weiyun.FileManager$DownLoadImp this$1 -> a
    void run() -> run
com.tencent.weiyun.FileManager$DownLoadImp$3 -> gr:
    com.tencent.weiyun.FileManager$DownLoadImp this$1 -> a
    void run() -> run
com.tencent.weiyun.FileManager$GetFileListListener -> gs:
    com.tencent.weiyun.IGetFileListListener mListener -> a
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
    void onCancel() -> onCancel
com.tencent.weiyun.FileManager$UploadFileImp -> gt:
    android.content.Context mContext -> a
    com.tencent.weiyun.FileManager$WeiyunFileType mFileType -> b
    java.lang.String mFilePath -> c
    com.tencent.weiyun.IUploadFileCallBack mCallback -> d
    android.os.Handler mHandler -> e
    long mFileSize -> f
    java.lang.String mFileKey -> g
    java.lang.String mMD5Hash -> h
    byte[] mUKey -> i
    java.lang.String mHost -> j
    com.tencent.weiyun.FileManager this$0 -> k
    byte[] packPostBody(byte[],int,int) -> a
com.tencent.weiyun.FileManager$UploadFileImp$1 -> gu:
    com.tencent.weiyun.FileManager$UploadFileImp this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.tencent.weiyun.FileManager$UploadFileImp$2 -> gv:
    com.tencent.weiyun.FileManager$UploadFileImp this$1 -> a
    void run() -> run
com.tencent.weiyun.FileManager$UploadFileImp$3 -> gw:
    com.tencent.weiyun.FileManager$UploadFileImp this$1 -> a
    void run() -> run
com.tencent.weiyun.FileManager$WeiyunFileType -> com.tencent.weiyun.FileManager$WeiyunFileType:
    com.tencent.weiyun.FileManager$WeiyunFileType ImageFile -> ImageFile
    com.tencent.weiyun.FileManager$WeiyunFileType MusicFile -> MusicFile
    com.tencent.weiyun.FileManager$WeiyunFileType VideoFile -> VideoFile
    int mType -> a
    com.tencent.weiyun.FileManager$WeiyunFileType[] $VALUES -> b
    com.tencent.weiyun.FileManager$WeiyunFileType[] values() -> values
    com.tencent.weiyun.FileManager$WeiyunFileType valueOf(java.lang.String) -> valueOf
    int value() -> value
com.tencent.weiyun.IDownLoadFileCallBack -> com.tencent.weiyun.IDownLoadFileCallBack:
    void onPrepareStart() -> onPrepareStart
    void onDownloadStart() -> onDownloadStart
    void onDownloadProgress(int) -> onDownloadProgress
    void onDownloadSuccess(java.lang.String) -> onDownloadSuccess
    void onError(com.tencent.tauth.UiError) -> onError
com.tencent.weiyun.IGetFileListListener -> com.tencent.weiyun.IGetFileListListener:
    void onComplete(java.util.List) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
com.tencent.weiyun.IUploadFileCallBack -> com.tencent.weiyun.IUploadFileCallBack:
    void onPrepareStart() -> onPrepareStart
    void onUploadStart() -> onUploadStart
    void onUploadProgress(int) -> onUploadProgress
    void onUploadSuccess() -> onUploadSuccess
    void onError(com.tencent.tauth.UiError) -> onError
com.tencent.weiyun.RecordManager -> com.tencent.weiyun.RecordManager:
    void createRecord(java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> createRecord
    void deleteRecord(java.lang.String,com.tencent.tauth.IUiListener) -> deleteRecord
    void getRecord(java.lang.String,com.tencent.tauth.IUiListener) -> getRecord
    void modifyRecord(java.lang.String,java.lang.String,com.tencent.tauth.IUiListener) -> modifyRecord
    void queryAllRecord(com.tencent.tauth.IUiListener) -> queryAllRecord
    void checkRecord(java.lang.String,com.tencent.tauth.IUiListener) -> checkRecord
com.tencent.weiyun.RecordManager$1 -> gx:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.RecordManager$2 -> gy:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.RecordManager$3 -> gz:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.RecordManager$4 -> gA:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.RecordManager$5 -> gB:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.RecordManager$6 -> gC:
    com.tencent.tauth.IUiListener a -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.tencent.weiyun.WeiyunFile -> com.tencent.weiyun.WeiyunFile:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    java.lang.String getFileId() -> getFileId
    java.lang.String getFileName() -> getFileName
    java.lang.String getCreateTime() -> getCreateTime
    long getFileSize() -> getFileSize
    void setFileId(java.lang.String) -> setFileId
    void setFileName(java.lang.String) -> setFileName
    void setCreateTime(java.lang.String) -> setCreateTime
    void setFileSize(long) -> setFileSize
com.tencent.wpa.WPA -> com.tencent.wpa.WPA:
    void getWPAUserOnlineState(java.lang.String,com.tencent.tauth.IUiListener) -> getWPAUserOnlineState
    int startWPAConversation(java.lang.String,java.lang.String) -> startWPAConversation
com.yingshi.toutiao.FavoritesActivity -> com.yingshi.toutiao.FavoritesActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.yingshi.toutiao.FavoritesActivity$1 -> gD:
    com.yingshi.toutiao.FavoritesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment -> gE:
    com.yingshi.toutiao.actions.GetFavoritesAction mGetFavoritesAction -> N
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> O
    boolean mIsLoaded -> P
    void onActivityCreated(android.os.Bundle) -> c
    void onCreate(android.os.Bundle) -> b
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void access$0(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,boolean) -> a
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$1(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> a
    void access$2(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$3(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> b
    void access$4(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> c
    com.yingshi.toutiao.actions.GetFavoritesAction access$5(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment) -> d
    void access$6(com.yingshi.toutiao.FavoritesActivity$FavoritesFragment,com.yingshi.toutiao.actions.GetFavoritesAction) -> a
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment$1 -> gF:
    com.yingshi.toutiao.FavoritesActivity$FavoritesFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.FavoritesActivity$FavoritesFragment$2 -> gG:
    com.yingshi.toutiao.FavoritesActivity$FavoritesFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.LoginActivity -> com.yingshi.toutiao.LoginActivity:
    com.yingshi.toutiao.social.ISocialProvider mAuthProvider -> a
    com.yingshi.toutiao.TouTiaoApp mApp -> b
    void onCreate(android.os.Bundle) -> onCreate
    void loginQQ(android.view.View) -> loginQQ
    void loginWeibo(android.view.View) -> loginWeibo
    void loginWeixin(android.view.View) -> loginWeixin
    void enter(android.view.View) -> enter
    void onLoginSuccess(com.yingshi.toutiao.social.AccountInfo) -> a
    void onFailure(java.lang.String) -> a
    void onGetAccountInfo(com.yingshi.toutiao.social.AccountInfo) -> b
    void showHomeActivity() -> a
    com.yingshi.toutiao.TouTiaoApp access$0(com.yingshi.toutiao.LoginActivity) -> a
com.yingshi.toutiao.LoginActivity$1 -> gH:
    com.yingshi.toutiao.LoginActivity this$0 -> a
    com.yingshi.toutiao.social.AccountInfo val$accountInfo -> b
    java.lang.Void doInBackground$10299ca() -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainActivity -> com.yingshi.toutiao.MainActivity:
    java.util.List mTabs -> f
    android.widget.TabHost mTabHost -> g
    android.widget.HorizontalScrollView mTabScrollView -> h
    android.support.v4.view.ViewPager mViewPager -> i
    android.view.View mLoadingView -> j
    com.yingshi.toutiao.MainUserCenterFragment mUserCenterFragment -> k
    com.yingshi.toutiao.storage.CategoryDAO mcategoryDAO -> l
    android.widget.TabHost$TabContentFactory mEmptyTabContentFactory -> m
    void onCreate(android.os.Bundle) -> onCreate
    void highlightTab(int) -> a
    com.yingshi.toutiao.storage.CategoryDAO access$0(com.yingshi.toutiao.MainActivity) -> a
    void access$1(com.yingshi.toutiao.MainActivity,java.util.List) -> a
    void access$2(com.yingshi.toutiao.MainActivity) -> b
    android.support.v4.view.ViewPager access$3(com.yingshi.toutiao.MainActivity) -> c
    android.widget.TabHost access$4(com.yingshi.toutiao.MainActivity) -> d
    java.util.List access$5(com.yingshi.toutiao.MainActivity) -> e
    android.widget.HorizontalScrollView access$6(com.yingshi.toutiao.MainActivity) -> f
    void access$7(com.yingshi.toutiao.MainActivity,int) -> a
com.yingshi.toutiao.MainActivity$1 -> gI:
    com.yingshi.toutiao.MainActivity this$0 -> a
    android.view.View createTabContent(java.lang.String) -> createTabContent
com.yingshi.toutiao.MainActivity$2 -> gJ:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainActivity$3 -> gK:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainActivity$4 -> gL:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainActivity$5 -> gM:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainActivity$6 -> gN:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainActivity$7 -> gO:
    com.yingshi.toutiao.MainActivity this$0 -> a
    java.util.List val$categories -> b
    void onTabChanged(java.lang.String) -> onTabChanged
com.yingshi.toutiao.MainActivity$8 -> gP:
    com.yingshi.toutiao.MainActivity this$0 -> a
    void onPageSelected(int) -> a
com.yingshi.toutiao.MainActivity$MainPagerAdapter -> gQ:
    java.util.List mCategories -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.yingshi.toutiao.MainFragment -> gR:
    java.lang.String mCategory -> N
    com.yingshi.toutiao.view.PhotoPager mPhotoPager -> O
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> P
    java.util.List mFocusNews -> Q
    com.yingshi.toutiao.storage.NewsDAO mNewsDAO -> R
    com.yingshi.toutiao.storage.HeadNewsDAO mHeadNewsDAO -> S
    com.yingshi.toutiao.actions.GetNewsAction mGetnewsAction -> T
    boolean mFocusLoadedFromServer -> U
    boolean mNewsLoadedFromServer -> V
    int mAsyncTaskCount -> W
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> b
    void onActivityCreated(android.os.Bundle) -> c
    void loadFocusFromServer() -> G
    void loadNewsFromServer() -> H
    void loadFocusFromDB() -> I
    void loadNewsFromDB() -> J
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onResume() -> o
    void onViewStateRestored(android.os.Bundle) -> d
    void onStart() -> n
    void onPause() -> p
    void onStop() -> q
    void onDestroyView() -> r
    void onDestroy() -> s
    void onDetach() -> u
    void access$0(android.content.Context,com.yingshi.toutiao.model.News) -> a
    java.lang.String access$1(com.yingshi.toutiao.MainFragment) -> a
    com.yingshi.toutiao.storage.HeadNewsDAO access$2(com.yingshi.toutiao.MainFragment) -> b
    com.yingshi.toutiao.storage.NewsDAO access$3(com.yingshi.toutiao.MainFragment) -> c
    void access$4(com.yingshi.toutiao.MainFragment,boolean) -> a
    void access$5(com.yingshi.toutiao.MainFragment,java.util.List) -> a
    com.yingshi.toutiao.view.PhotoPager access$6(com.yingshi.toutiao.MainFragment) -> d
    void access$7(com.yingshi.toutiao.MainFragment,int) -> a
    void access$8(com.yingshi.toutiao.MainFragment) -> e
    void access$9(com.yingshi.toutiao.MainFragment) -> f
    void access$10(com.yingshi.toutiao.MainFragment,boolean) -> b
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$11(com.yingshi.toutiao.MainFragment) -> g
    void access$12(com.yingshi.toutiao.MainFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$13(com.yingshi.toutiao.MainFragment) -> h
    java.util.List access$14(com.yingshi.toutiao.MainFragment) -> i
    void access$15(com.yingshi.toutiao.MainFragment,com.yingshi.toutiao.actions.GetNewsAction) -> a
    com.yingshi.toutiao.actions.GetNewsAction access$16(com.yingshi.toutiao.MainFragment) -> j
com.yingshi.toutiao.MainFragment$1 -> gS:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$10 -> gT:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPageSelected(int) -> a
com.yingshi.toutiao.MainFragment$2 -> gU:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$3 -> gV:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$4 -> gW:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$5 -> gX:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainFragment$6 -> gY:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainFragment$7 -> gZ:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$8 -> ha:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.MainFragment$9 -> hb:
    com.yingshi.toutiao.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainFragment$NewsArrayAdapter -> hc:
    android.view.LayoutInflater mInflater -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.yingshi.toutiao.MainFragment$NewsArrayAdapter$1 -> hd:
    com.yingshi.toutiao.MainFragment$NewsArrayAdapter this$1 -> a
    com.yingshi.toutiao.model.News val$news -> b
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainFragment$NewsArrayAdapter$ViewHolder -> he:
    com.yingshi.toutiao.view.CustomizeImageView newsThumbnail -> a
    android.widget.TextView newsTitle -> b
    android.view.View newsVideoSign -> c
    android.view.View newsSpecialSign -> d
com.yingshi.toutiao.MainFragment$PhotoPagerAdapter -> hf:
    java.util.List news -> a
    com.yingshi.toutiao.MainFragment this$0 -> b
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
com.yingshi.toutiao.MainPhotoFragment -> hg:
    com.yingshi.toutiao.model.News mNews -> M
    com.yingshi.toutiao.view.CustomizeImageView mImageView -> N
    void onCreate(android.os.Bundle) -> b
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void onActivityCreated(android.os.Bundle) -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.model.News access$0(com.yingshi.toutiao.MainPhotoFragment) -> a
com.yingshi.toutiao.MainPhotoFragment$1 -> hh:
    com.yingshi.toutiao.MainPhotoFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment -> hi:
    com.yingshi.toutiao.TouTiaoApp mApp -> M
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> N
    android.view.View mView -> O
    android.widget.ImageButton mReturnBtn -> P
    com.yingshi.toutiao.view.CustomizeImageView mUserPhoto -> Q
    android.widget.TextView mUserName -> R
    android.view.View mBtnFavorites -> S
    android.view.View mBtnDownloads -> T
    android.view.View mBtnClearCache -> U
    com.yingshi.toutiao.MainUserCenterFragment$PhotoUpdateBroadcastReceiver mReceiver -> V
    void onCreate(android.os.Bundle) -> b
    void onResume() -> o
    void onPause() -> p
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void loadUserInfo() -> E
    void access$0(com.yingshi.toutiao.MainUserCenterFragment) -> a
    com.yingshi.toutiao.TouTiaoApp access$1(com.yingshi.toutiao.MainUserCenterFragment) -> b
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$2(com.yingshi.toutiao.MainUserCenterFragment) -> c
com.yingshi.toutiao.MainUserCenterFragment$1 -> hj:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$2 -> hk:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$3 -> hl:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$4 -> hm:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.MainUserCenterFragment$5 -> hn:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.yingshi.toutiao.MainUserCenterFragment access$0(com.yingshi.toutiao.MainUserCenterFragment$5) -> a
com.yingshi.toutiao.MainUserCenterFragment$5$1 -> ho:
    com.yingshi.toutiao.MainUserCenterFragment$5 this$1 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.MainUserCenterFragment$PhotoUpdateBroadcastReceiver -> hp:
    com.yingshi.toutiao.MainUserCenterFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.yingshi.toutiao.NewsDetailActivity -> com.yingshi.toutiao.NewsDetailActivity:
    android.view.View mShareNewsWidget -> a
    android.widget.LinearLayout mCommentsList -> b
    android.widget.ImageButton mShowCommentsBtn -> c
    android.widget.EditText mCommentTextView -> d
    com.yingshi.toutiao.view.CustomizeImageView mImageView -> e
    com.yingshi.toutiao.model.News mNews -> f
    com.yingshi.toutiao.actions.GetCommentsAction mGetCommentsAction -> g
    com.tencent.mm.sdk.openapi.IWXAPI mWxapi -> h
    com.tencent.tauth.Tencent mTencent -> i
    com.sina.weibo.sdk.api.share.IWeiboShareAPI mWeiboShareAPI -> j
    void onCreate(android.os.Bundle) -> onCreate
    void showLonginConfirmDialog() -> a
    void playVideo(android.view.View) -> playVideo
    void share(android.view.View) -> share
    void addToFavorites(android.view.View) -> addToFavorites
    void loadComments(android.view.View) -> loadComments
    void fillItems(android.widget.LinearLayout,java.util.List) -> a
    void shareWeiChat(android.view.View) -> shareWeiChat
    android.graphics.Bitmap getNewsImage() -> b
    java.lang.String getNewsUrl() -> c
    void shareWeibo(android.view.View) -> shareWeibo
    void shareQQ(android.view.View) -> shareQQ
    void cancelShare(android.view.View) -> cancelShare
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
    void access$0(com.yingshi.toutiao.NewsDetailActivity) -> a
    void access$1(com.yingshi.toutiao.NewsDetailActivity) -> b
    void access$2(com.yingshi.toutiao.NewsDetailActivity) -> c
    com.yingshi.toutiao.model.News access$3(com.yingshi.toutiao.NewsDetailActivity) -> d
    android.widget.LinearLayout access$4(com.yingshi.toutiao.NewsDetailActivity) -> e
    android.widget.ImageButton access$5(com.yingshi.toutiao.NewsDetailActivity) -> f
    com.tencent.tauth.Tencent access$6(com.yingshi.toutiao.NewsDetailActivity) -> g
com.yingshi.toutiao.NewsDetailActivity$1 -> hq:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.NewsDetailActivity$2 -> hr:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.NewsDetailActivity$3 -> hs:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.yingshi.toutiao.NewsDetailActivity$4 -> ht:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.yingshi.toutiao.NewsDetailActivity$5 -> hu:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.yingshi.toutiao.NewsDetailActivity$6 -> hv:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> c
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
com.yingshi.toutiao.NewsDetailActivity$7 -> hw:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.NewsDetailActivity$8 -> hx:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDetailActivity$9 -> hy:
    com.yingshi.toutiao.NewsDetailActivity this$0 -> a
    android.os.Bundle val$params -> b
    void run() -> run
com.yingshi.toutiao.NewsDetailActivity$9$1 -> hz:
    void onCancel() -> onCancel
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
com.yingshi.toutiao.NewsDownloader -> hA:
    java.util.concurrent.ThreadPoolExecutor mExecutor -> a
    com.yingshi.toutiao.TouTiaoApp mApp -> b
    int mTaskCount -> c
    com.yingshi.toutiao.NewsDownloader mInstance -> d
    void access$1(com.yingshi.toutiao.NewsDownloader,java.util.List) -> a
    void access$2(com.yingshi.toutiao.NewsDownloader) -> a
com.yingshi.toutiao.NewsDownloader$1 -> hB:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.yingshi.toutiao.NewsDownloader$2 -> hC:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$3 -> hD:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$4 -> hE:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.NewsDownloader$5 -> hF:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    com.yingshi.toutiao.model.Category val$category -> b
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$6 -> hG:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$7 -> hH:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    com.yingshi.toutiao.model.Category val$category -> b
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.NewsDownloader$8 -> hI:
    com.yingshi.toutiao.NewsDownloader this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity -> com.yingshi.toutiao.SearchActivity:
    android.widget.EditText mKeywordText -> e
    com.yingshi.toutiao.SearchActivity$SearchFragment mSearchFragment -> f
    void onCreate(android.os.Bundle) -> onCreate
    void doSearch(android.view.View) -> doSearch
com.yingshi.toutiao.SearchActivity$1 -> hJ:
    com.yingshi.toutiao.SearchActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SearchActivity$SearchFragment -> hK:
    java.lang.String mKeyword -> N
    com.yingshi.toutiao.actions.SearchAction mSearchAction -> O
    com.yingshi.toutiao.storage.NewsDAO mNewsDAO -> P
    com.yingshi.toutiao.view.ptr.PTRListAdapter mNewsListAdapter -> Q
    void onCreate(android.os.Bundle) -> b
    void doSearch(java.lang.String) -> doSearch
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.storage.NewsDAO access$0(com.yingshi.toutiao.SearchActivity$SearchFragment) -> a
    com.yingshi.toutiao.view.ptr.PTRListAdapter access$1(com.yingshi.toutiao.SearchActivity$SearchFragment) -> b
    void access$2(com.yingshi.toutiao.SearchActivity$SearchFragment,com.yingshi.toutiao.view.ptr.PTRListAdapter) -> a
    void access$3(com.yingshi.toutiao.SearchActivity$SearchFragment) -> c
    void access$4(com.yingshi.toutiao.SearchActivity$SearchFragment) -> d
com.yingshi.toutiao.SearchActivity$SearchFragment$1 -> hL:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity$SearchFragment$2 -> hM:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SearchActivity$SearchFragment$3 -> hN:
    com.yingshi.toutiao.SearchActivity$SearchFragment this$1 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsActivity -> com.yingshi.toutiao.SpecialNewsActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.yingshi.toutiao.SpecialNewsActivity$1 -> hO:
    com.yingshi.toutiao.SpecialNewsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SpecialNewsFragment -> hP:
    java.lang.String mSpecialName -> N
    com.yingshi.toutiao.view.SpecialHeader mSpecialHeader -> O
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter mSpecialNewsArrayAdapter -> P
    com.yingshi.toutiao.actions.GetSpecialNewsAction mGetSpecialNewsAction -> Q
    int mAsyncTaskCount -> R
    void onCreate(android.os.Bundle) -> b
    void onActivityCreated(android.os.Bundle) -> c
    void loadPage(boolean) -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void onPullDownToRefresh$4d958ae5() -> a_
    void onPullUpToRefresh$4d958ae5() -> b_
    com.yingshi.toutiao.view.SpecialHeader access$0(com.yingshi.toutiao.SpecialNewsFragment) -> a
    int access$1(com.yingshi.toutiao.SpecialNewsFragment) -> b
    void access$2(com.yingshi.toutiao.SpecialNewsFragment,int) -> a
    void access$3(com.yingshi.toutiao.SpecialNewsFragment) -> c
    void access$4(com.yingshi.toutiao.SpecialNewsFragment) -> d
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter access$5(com.yingshi.toutiao.SpecialNewsFragment) -> e
    void access$6(com.yingshi.toutiao.SpecialNewsFragment,com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter) -> a
    com.yingshi.toutiao.actions.GetSpecialNewsAction access$7(com.yingshi.toutiao.SpecialNewsFragment) -> f
    void access$8(com.yingshi.toutiao.SpecialNewsFragment,com.yingshi.toutiao.actions.GetSpecialNewsAction) -> a
com.yingshi.toutiao.SpecialNewsFragment$1 -> hQ:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$2 -> hR:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$3 -> hS:
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter -> hT:
    android.view.LayoutInflater mInflater -> a
    com.yingshi.toutiao.SpecialNewsFragment this$0 -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.yingshi.toutiao.SpecialNewsFragment access$0(com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter) -> a
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter$1 -> hU:
    com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter this$1 -> a
    com.yingshi.toutiao.model.News val$news -> b
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.SpecialNewsFragment$SpecialNewsArrayAdapter$ViewHolder -> hV:
    com.yingshi.toutiao.view.CustomizeImageView newsThumbnail -> a
    android.widget.TextView newsTitle -> b
    android.widget.TextView newsSummary -> c
    android.view.View newsVideoSign -> d
com.yingshi.toutiao.TouTiaoApp -> com.yingshi.toutiao.TouTiaoApp:
    com.yingshi.toutiao.storage.NewsDAO mNewsDao -> a
    com.yingshi.toutiao.storage.HeadNewsDAO mHeadNewsDAO -> b
    com.yingshi.toutiao.storage.FavoritesDAO mFavoritesDAO -> c
    com.yingshi.toutiao.storage.CategoryDAO mCategoryDAO -> d
    com.yingshi.toutiao.storage.DatabaseHelper mDatabaseHelper -> e
    com.yingshi.toutiao.social.AccountInfo mUserInfo -> f
    java.lang.String mCachePath -> g
    void onCreate() -> onCreate
    com.yingshi.toutiao.storage.NewsDAO getNewsDAO() -> a
    com.yingshi.toutiao.storage.HeadNewsDAO getHeadNewsDAO() -> b
    com.yingshi.toutiao.storage.FavoritesDAO getFavoritesDAO() -> c
    com.yingshi.toutiao.storage.CategoryDAO getCategoryDAO() -> d
    void setUserInfo(com.yingshi.toutiao.social.AccountInfo) -> a
    com.yingshi.toutiao.social.AccountInfo getUserInfo() -> e
    java.lang.String getCachePath() -> f
com.yingshi.toutiao.WXEntryActivity -> com.yingshi.toutiao.WXEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.yingshi.toutiao.WelcomeActivity -> com.yingshi.toutiao.WelcomeActivity:
    com.yingshi.toutiao.TouTiaoApp mApp -> a
    void onCreate(android.os.Bundle) -> onCreate
    com.yingshi.toutiao.TouTiaoApp access$0(com.yingshi.toutiao.WelcomeActivity) -> a
com.yingshi.toutiao.WelcomeActivity$1 -> hW:
    com.yingshi.toutiao.WelcomeActivity this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.WelcomeActivity$2 -> hX:
    com.yingshi.toutiao.WelcomeActivity this$0 -> a
    java.lang.Void doInBackground$10299ca() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.actions.AbstractAction -> hY:
    java.lang.String mServiceId -> a
    android.content.Context mAppContext -> b
    com.yingshi.toutiao.actions.AbstractAction$UICallBack mUICallback -> d
    com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack mBackgroundCallBack -> e
    com.yingshi.toutiao.actions.AbstractAction$IBackgroundProcessor mBackgroundProcessor -> c
    boolean mCancelled -> f
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground(java.lang.Void[]) -> a
    void execute() -> a
    void execute(com.yingshi.toutiao.actions.AbstractAction$UICallBack) -> a
    void execute(com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack,com.yingshi.toutiao.actions.AbstractAction$UICallBack) -> a
    void executeOnExecutor(com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack,com.yingshi.toutiao.actions.AbstractAction$UICallBack,java.util.concurrent.Executor) -> a
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object createRespObject(org.json.JSONObject) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    org.json.JSONObject access$2(com.yingshi.toutiao.actions.AbstractAction) -> a
    com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack access$3(com.yingshi.toutiao.actions.AbstractAction) -> b
com.yingshi.toutiao.actions.AbstractAction$ActionError -> hZ:
com.yingshi.toutiao.actions.AbstractAction$ActionResult -> ia:
    com.yingshi.toutiao.actions.AbstractAction$ActionError mError -> a
    java.lang.Object mObject -> b
    boolean hasError() -> a
com.yingshi.toutiao.actions.AbstractAction$BackgroundCallBack -> ib:
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.actions.AbstractAction$ErrorCode -> ic:
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode INVALID_REQUEST -> a
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode INVALID_RESPONSE -> b
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode SERVER_ERROR -> c
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_TIMEOUT -> e
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_DISCONNECTED -> f
    com.yingshi.toutiao.actions.AbstractAction$ErrorCode NETWORK_ERROR -> d
com.yingshi.toutiao.actions.AbstractAction$IBackgroundProcessor -> id:
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor -> ie:
    com.yingshi.toutiao.actions.AbstractAction$ActionResult mResult -> a
    com.yingshi.toutiao.actions.AbstractAction this$0 -> b
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor$1 -> if:
    com.yingshi.toutiao.actions.AbstractAction$NetworkBackgroundProcessor this$1 -> c
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> a
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> a
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> a
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> a
com.yingshi.toutiao.actions.AbstractAction$UICallBack -> ig:
    void onSuccess(java.lang.Object) -> a
    void onFailure$30c4fd98() -> a
com.yingshi.toutiao.actions.GetCategoryAction -> ih:
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
com.yingshi.toutiao.actions.GetCommentsAction -> ii:
    java.lang.String mNewsId -> f
    java.lang.String mCategory -> g
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.GetFavoritesAction -> ij:
    com.yingshi.toutiao.storage.FavoritesDAO mFavoritesDAO -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.GetFavoritesAction cloneCurrentPageAction() -> c
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    com.yingshi.toutiao.storage.FavoritesDAO access$2(com.yingshi.toutiao.actions.GetFavoritesAction) -> a
com.yingshi.toutiao.actions.GetFavoritesAction$DBBackgroundProcessor -> ik:
    com.yingshi.toutiao.actions.GetFavoritesAction this$0 -> a
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground() -> a
com.yingshi.toutiao.actions.GetFocusAction -> il:
    java.lang.String mCategory -> d
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object createRespObject(org.json.JSONObject) -> b
com.yingshi.toutiao.actions.GetNewsAction -> im:
    java.lang.String mCategory -> f
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.GetSpecialAction -> in:
    java.lang.String mSpecialName -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
com.yingshi.toutiao.actions.GetSpecialNewsAction -> io:
    java.lang.String mSpecialName -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.actions.GetSpecialNewsAction cloneCurrentPageAction() -> c
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.actions.PaginationAction -> ip:
    int mPageIndex -> d
    int mPageSize -> e
    int mTotalCount -> f
    void addRequestParameters(org.json.JSONObject) -> a
    com.yingshi.toutiao.model.Pagination createRespObject(org.json.JSONObject) -> d
    com.yingshi.toutiao.actions.AbstractAction$ActionResult doInBackground(java.lang.Void[]) -> a
    boolean hasMore() -> d
    com.yingshi.toutiao.actions.PaginationAction getNextPageAction() -> e
    com.yingshi.toutiao.actions.PaginationAction getPreviousPageAction() -> f
    int getPageIndex() -> g
    int getPageSize() -> h
    void setTotalCount(int) -> a
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    java.lang.Object createRespObject(org.json.JSONObject) -> b
com.yingshi.toutiao.actions.ParallelTask -> iq:
    void execute() -> a
com.yingshi.toutiao.actions.SearchAction -> ir:
    java.lang.String mKeyword -> f
    void addRequestParameters(org.json.JSONObject) -> a
    java.lang.Object convertJsonToResult(org.json.JSONObject) -> c
    com.yingshi.toutiao.actions.PaginationAction cloneCurrentPageAction() -> b
com.yingshi.toutiao.model.BaseModel -> is:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long _id -> a
    java.lang.String id -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    long get_id() -> a
    void set_id(long) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
com.yingshi.toutiao.model.BaseModel$1 -> it:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.yingshi.toutiao.model.Category -> iu:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    com.yingshi.toutiao.model.Category fromJSON(org.json.JSONObject) -> a
com.yingshi.toutiao.model.Comment -> iv:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String content -> c
    java.lang.String photoUrl -> d
    com.yingshi.toutiao.model.Comment fromJSON(org.json.JSONObject) -> a
    java.lang.String getId() -> b
    void setId(java.lang.String) -> a
    java.lang.String getName() -> c
    java.lang.String getContent() -> d
    java.lang.String getPhotoUrl() -> e
com.yingshi.toutiao.model.News -> iw:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String name -> a
    java.lang.String summary -> b
    long time -> c
    java.lang.String content -> d
    java.lang.String category -> e
    java.lang.String contact -> f
    int likes -> g
    boolean isSpecial -> h
    java.lang.String specialName -> i
    boolean hasVideo -> j
    java.lang.String videoUrl -> k
    java.lang.String videoPhotoUrl -> l
    java.lang.String author -> m
    java.util.List photoUrls -> n
    java.util.List thumbnailUrls -> o
    java.lang.String videoPhotoFilePath -> p
    java.lang.String photoFilePath -> q
    java.lang.String thumbnailFilePath -> r
    boolean isFocus -> s
    boolean isUserCache -> t
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.yingshi.toutiao.model.News fromJSON(org.json.JSONObject) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    java.lang.String getSummary() -> d
    void setSummary(java.lang.String) -> c
    long getTime() -> e
    void setTime(long) -> b
    java.lang.String getContent() -> f
    void setContent(java.lang.String) -> d
    java.lang.String getCategory() -> g
    void setCategory(java.lang.String) -> e
    java.lang.String getContact() -> h
    void setContact(java.lang.String) -> f
    int getLikes() -> i
    void setLikes(int) -> a
    boolean isSpecial() -> j
    void setSpecial(boolean) -> a
    java.lang.String getSpecialName() -> k
    void setSpecialName(java.lang.String) -> g
    boolean isHasVideo() -> l
    void setHasVideo(boolean) -> b
    java.lang.String getVideoUrl() -> m
    void setVideoUrl(java.lang.String) -> h
    java.lang.String getVideoPhotoUrl() -> n
    void setVideoPhotoUrl(java.lang.String) -> i
    java.lang.String getAuthor() -> o
    void setAuthor(java.lang.String) -> j
    java.util.List getPhotoUrls() -> p
    void setPhotoUrls(java.util.List) -> a
    java.util.List getThumbnailUrls() -> q
    void setThumbnailUrls(java.util.List) -> b
    java.lang.String getVideoPhotoFilePath() -> r
    void setVideoPhotoFilePath(java.lang.String) -> k
    java.lang.String getPhotoFilePath() -> s
    void setPhotoFilePath(java.lang.String) -> l
    java.lang.String getThumbnailFilePath() -> t
    void setThumbnailFilePath(java.lang.String) -> m
    boolean isFocus() -> u
    void setFocus(boolean) -> c
    boolean isUserCache() -> v
    void setUserCache(boolean) -> d
com.yingshi.toutiao.model.News$1 -> ix:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.yingshi.toutiao.model.Pagination -> iy:
    int totalCounts -> a
    java.util.List items -> b
com.yingshi.toutiao.model.Special -> iz:
    java.lang.String summary -> a
    java.util.List photoUrls -> b
    java.lang.String getSummary() -> c
    java.util.List getPhotoUrls() -> d
    com.yingshi.toutiao.model.Special fromJSON(org.json.JSONObject) -> a
com.yingshi.toutiao.social.AccountInfo -> iA:
    java.lang.String provider -> a
    java.lang.String userName -> b
    java.lang.String photoUrl -> c
    java.lang.String photoBase64 -> d
    java.lang.String openId -> e
    java.lang.String token -> f
    long expiresIn -> g
    java.lang.String getProvider() -> c
    void setProvider(java.lang.String) -> b
    java.lang.String getUserName() -> d
    void setUserName(java.lang.String) -> c
    java.lang.String getPhotoUrl() -> e
    void setPhotoUrl(java.lang.String) -> d
    java.lang.String getPhotoBase64() -> f
    void setPhotoBase64(java.lang.String) -> e
    java.lang.String getOpenId() -> g
    void setOpenId(java.lang.String) -> f
    java.lang.String getToken() -> h
    void setToken(java.lang.String) -> g
    long getExpiresIn() -> i
    void setExpiresIn(long) -> b
com.yingshi.toutiao.social.ISocialProvider -> iB:
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.SinaSocialProvider -> iC:
    android.app.Activity mActivity -> b
    com.sina.weibo.sdk.auth.Oauth2AccessToken mAccessToken -> a
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.SinaSocialProvider$1 -> iD:
    com.yingshi.toutiao.social.SinaSocialProvider this$0 -> a
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.yingshi.toutiao.social.SinaSocialProvider$2 -> iE:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.yingshi.toutiao.social.SocialResponseListener -> iF:
    void onLoginSuccess(com.yingshi.toutiao.social.AccountInfo) -> a
    void onFailure(java.lang.String) -> a
    void onGetAccountInfo(com.yingshi.toutiao.social.AccountInfo) -> b
com.yingshi.toutiao.social.TecentSocialProvider -> iG:
    com.tencent.connect.auth.QQAuth mQQAuth -> a
    com.tencent.tauth.Tencent mTencent -> b
    com.tencent.connect.UserInfo mInfo -> c
    android.app.Activity mActivity -> d
    void login(com.yingshi.toutiao.social.SocialResponseListener) -> a
    void getAccountInfo(com.yingshi.toutiao.social.SocialResponseListener) -> b
com.yingshi.toutiao.social.TecentSocialProvider$1 -> iH:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onCancel() -> onCancel
    void onComplete(java.lang.Object) -> onComplete
    void onError(com.tencent.tauth.UiError) -> onError
com.yingshi.toutiao.social.TecentSocialProvider$2 -> iI:
    com.yingshi.toutiao.social.SocialResponseListener val$callback -> a
    void onError(com.tencent.tauth.UiError) -> onError
    void onComplete(java.lang.Object) -> onComplete
    void onCancel() -> onCancel
com.yingshi.toutiao.storage.BaseDAO -> iJ:
    com.yingshi.toutiao.storage.adapters.BaseAdapter mDbAdapter -> a
    void save(java.util.List) -> a
    void delete() -> a
    java.util.List getAll(java.lang.String) -> a
com.yingshi.toutiao.storage.CategoryDAO -> iK:
com.yingshi.toutiao.storage.DatabaseHelper -> iL:
    java.lang.String CREATE_DATABASE_NEWS -> a
    java.lang.String CREATE_DATABASE_HEADNEWS -> b
    java.lang.String CREATE_DATABASE_FAVORITES -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.yingshi.toutiao.storage.FavoritesDAO -> iM:
com.yingshi.toutiao.storage.HeadNewsDAO -> iN:
    int deleteHeadNews() -> b
    int deleteHeadFocus() -> c
com.yingshi.toutiao.storage.NewsDAO -> iO:
    int deleteFocusByCategory(java.lang.String) -> b
    int deleteNewsByCategory(java.lang.String) -> c
com.yingshi.toutiao.storage.adapters.BaseAdapter -> iP:
    android.database.sqlite.SQLiteDatabase mDb -> a
    java.lang.String mTableName -> b
    java.lang.String[] mColumnNames -> c
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    long insert(com.yingshi.toutiao.model.BaseModel) -> b
    int delete(java.lang.String) -> a
    java.util.List fetchAll(java.lang.String) -> b
    java.util.List fetchAll(java.lang.String,java.lang.String) -> a
    java.util.List fetchPage(int,int,java.lang.String,java.lang.String) -> a
    int count(java.lang.String) -> c
    java.util.List toObjectList(android.database.Cursor) -> b
com.yingshi.toutiao.storage.adapters.CategoryDBAdapter -> iQ:
    java.lang.String[] CATEGORY_COLUMNS -> d
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
com.yingshi.toutiao.storage.adapters.FavoritesDBAdapter -> iR:
    java.util.List findFavorites(int,int) -> a
com.yingshi.toutiao.storage.adapters.HeadNewsDBAdapter -> iS:
com.yingshi.toutiao.storage.adapters.NewsDBAdapter -> iT:
    java.lang.String[] NEWS_COLUMNS -> d
    com.yingshi.toutiao.model.News fetchOneByNewsId(java.lang.String) -> d
    com.yingshi.toutiao.model.News toObject(android.database.Cursor) -> b
    com.yingshi.toutiao.model.BaseModel toObject(android.database.Cursor) -> a
    long insert(com.yingshi.toutiao.model.BaseModel) -> b
    android.content.ContentValues toContentValues(com.yingshi.toutiao.model.BaseModel) -> a
com.yingshi.toutiao.util.Utils -> iU:
    java.text.SimpleDateFormat sdf -> a
    java.lang.String formatDate(java.lang.String,long) -> a
    java.util.Date parseDate(java.lang.String,java.lang.String) -> a
    java.lang.String encode(java.lang.String,java.lang.String) -> b
    java.lang.String getDecodedValue(org.json.JSONObject,java.lang.String) -> a
    boolean removeFile(java.lang.String) -> a
    void saveDataToFile(java.io.InputStream,java.lang.String) -> a
com.yingshi.toutiao.view.CommentListRow -> com.yingshi.toutiao.view.CommentListRow:
    com.yingshi.toutiao.view.CustomizeImageView mAuthorImg -> a
    android.widget.TextView mAuthorTxt -> b
    android.widget.TextView mCommentText -> c
    void setProduct(com.yingshi.toutiao.model.Comment) -> setProduct
com.yingshi.toutiao.view.CustomizeImageView -> com.yingshi.toutiao.view.CustomizeImageView:
    java.lang.String IMAGE_CACHE_PATH -> a
    void loadImage(java.lang.String) -> a
    java.lang.String getCachedImagePath(java.lang.String) -> b
    void loadImage(byte[]) -> a
    java.lang.String access$0() -> a
com.yingshi.toutiao.view.CustomizeImageView$1 -> iV:
    com.yingshi.toutiao.view.CustomizeImageView this$0 -> a
    java.lang.String val$url -> b
    android.support.v4.app.FragmentManager$OnBackStackChangedListener val$mLoadImageCallback$2ddfbc12 -> c
    android.graphics.drawable.Drawable doInBackground$3775178d() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.view.CustomizeImageView$2 -> iW:
    com.yingshi.toutiao.view.CustomizeImageView this$0 -> a
    byte[] val$data -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yingshi.toutiao.view.HeaderView -> com.yingshi.toutiao.view.HeaderView:
    android.widget.ImageButton mLeftBtn -> a
    android.widget.ImageButton mRightBtn -> b
    android.widget.TextView mTitle -> c
    void setLeftImage(int,android.view.View$OnClickListener) -> setLeftImage
    void setRightImage(int,android.view.View$OnClickListener) -> setRightImage
    void setTitle(int) -> setTitle
com.yingshi.toutiao.view.LoadMoreView -> com.yingshi.toutiao.view.LoadMoreView:
    android.widget.LinearLayout mProgressView -> a
    android.widget.TextView mStatusText -> b
    android.support.v4.app.FragmentManager$OnBackStackChangedListener mListener$1d5617e4 -> c
    com.yingshi.toutiao.actions.PaginationAction mAction -> d
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus mStatus -> e
    void setOnMoreResultReturnListener$6b713d6f(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> setOnMoreResultReturnListener$6b713d6f
    void setPaginationAction(com.yingshi.toutiao.actions.PaginationAction) -> setPaginationAction
    void access$0(com.yingshi.toutiao.view.LoadMoreView) -> a
    android.support.v4.app.FragmentManager$OnBackStackChangedListener access$1$48ae838c(com.yingshi.toutiao.view.LoadMoreView) -> b
    void access$2(com.yingshi.toutiao.view.LoadMoreView) -> c
    void access$3(com.yingshi.toutiao.view.LoadMoreView) -> d
com.yingshi.toutiao.view.LoadMoreView$1 -> iX:
    com.yingshi.toutiao.view.LoadMoreView this$0 -> a
    void onClick(android.view.View) -> onClick
com.yingshi.toutiao.view.LoadMoreView$2 -> iY:
    com.yingshi.toutiao.view.LoadMoreView this$0 -> a
    void onFailure$30c4fd98() -> a
    void onSuccess(java.lang.Object) -> a
com.yingshi.toutiao.view.LoadMoreView$LoadStatus -> iZ:
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus IDLE -> a
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus LOADING -> b
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus NOMORE -> c
    com.yingshi.toutiao.view.LoadMoreView$LoadStatus FAILED -> d
com.yingshi.toutiao.view.OuterViewPager -> com.yingshi.toutiao.view.OuterViewPager:
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
com.yingshi.toutiao.view.PhotoPager -> com.yingshi.toutiao.view.PhotoPager:
    android.widget.TextView getPhotoNumView() -> a
    android.widget.TextView getPhotoDescriptionView() -> b
    android.support.v4.view.ViewPager getPhotoViewPager() -> c
com.yingshi.toutiao.view.ShareNewsWidget -> com.yingshi.toutiao.view.ShareNewsWidget:
com.yingshi.toutiao.view.SpecialHeader -> com.yingshi.toutiao.view.SpecialHeader:
    com.yingshi.toutiao.view.CustomizeImageView getHeaderImageView() -> a
    android.widget.TextView getSummaryView() -> b
com.yingshi.toutiao.view.ptr.CustomizedPTRListView -> com.yingshi.toutiao.view.ptr.CustomizedPTRListView:
    android.widget.LinearLayout mListViewHeader -> n
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    void addViewToListHeader(android.view.View,int) -> a
com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment -> ja:
    android.view.View mLayout -> N
    com.yingshi.toutiao.view.ptr.CustomizedPTRListView mListView -> M
    android.view.View mLoadingView -> O
    void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode) -> a
    void setAdapter(android.widget.ListAdapter) -> a
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder createHeaderView(android.view.LayoutInflater) -> a
    void showLoadingView() -> E
    void showListView() -> F
com.yingshi.toutiao.view.ptr.HeaderLoadingSupportPTRListFragment$ViewHolder -> jb:
    android.view.View headerView -> a
    int height -> b
com.yingshi.toutiao.view.ptr.PTRListAdapter -> jc:
    java.util.List mObjects -> a
    void addMore(java.util.Collection) -> a
